<?xml version="1.0" encoding="UTF-8"?>
<!-- ==================================================================================
|  * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
|  * See LICENSE.md in the project root for license terms and full copyright notice.
======================================================================================= -->
<ECSchema schemaName="StructuralPhysical" alias="sp" version="01.00.02" xmlns="http://www.bentley.com/schemas/Bentley.ECXML.3.2">
    <ECSchemaReference name="BisCore" version="01.00.14" alias="bis" />
    <ECSchemaReference name="CoreCustomAttributes" version="01.00.03" alias="CoreCA"/>
    <ECSchemaReference name="BisCustomAttributes" version="01.00.00" alias="bisCA"/>

    <ECCustomAttributes>
        <ProductionStatus xmlns="CoreCustomAttributes.01.00.03">
            <SupportedUse>NotForProduction</SupportedUse>
        </ProductionStatus>
        <SchemaLayerInfo xmlns="BisCustomAttributes.01.00.00">
            <Value>DisciplinePhysical</Value>
        </SchemaLayerInfo>
    </ECCustomAttributes>

    <ECEntityClass typeName="StructuralPhysicalModel" displayLabel="Structural Physical Model">
        <BaseClass>bis:PhysicalModel</BaseClass>
        <ECCustomAttributes>
            <Deprecated xmlns="CoreCustomAttributes.01.00.03">
                <Description>bis:PhysicalModel should be used in place of this class.</Description>
            </Deprecated>
        </ECCustomAttributes>
    </ECEntityClass>
    <ECEntityClass typeName="StructuralElement" displayLabel="Structural Element" modifier="Abstract">
        <BaseClass>bis:PhysicalElement</BaseClass>
    </ECEntityClass>
    <ECEntityClass typeName="StructuralMember" displayLabel="Structural Member">
        <BaseClass>StructuralElement</BaseClass>
    </ECEntityClass>
    <ECEntityClass typeName="StructuralMemberType" displayLabel="Structural Member Type">
        <BaseClass>bis:PhysicalType</BaseClass>
    </ECEntityClass>
    <ECRelationshipClass typeName="StructuralMemberIsOfType" strength="referencing" modifier="None" description="A type-instance relation; one that indicates that the specific sp:StructuralMember is an instance of the defined sp:StructuralMemberType.">
        <BaseClass>bis:PhysicalElementIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="StructuralMember" />
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="StructuralMemberType"/>
        </Target>
    </ECRelationshipClass>
    <ECEntityClass typeName="Slab" displayLabel="Slab" description="A bis:PhysicalElement; horizontal structural element that is used in building construction">
        <BaseClass>StructuralMember</BaseClass>
    </ECEntityClass>
    <ECEntityClass typeName="SlabType" displayLabel="Slab Type">
        <BaseClass>StructuralMemberType</BaseClass>
    </ECEntityClass>
    <ECRelationshipClass typeName="SlabIsOfType" strength="referencing" modifier="None" description="A type-instance relation; one that indicates that the specific sp:Slab is an instance of the defined sp:SlabType.">
        <BaseClass>StructuralMemberIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="Slab" />
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="SlabType"/>
        </Target>
    </ECRelationshipClass>
    <ECEntityClass typeName="Wall" displayLabel="Wall">
        <BaseClass>StructuralMember</BaseClass>
    </ECEntityClass>
    <ECEntityClass typeName="WallType" displayLabel="Wall Type">
        <BaseClass>StructuralMemberType</BaseClass>
    </ECEntityClass>
    <ECRelationshipClass typeName="WallIsOfType" strength="referencing" modifier="None" description="A type-instance relation; one that indicates that the specific sp:Wall is an instance of the defined sp:WallType.">
        <BaseClass>StructuralMemberIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="Wall" />
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="WallType"/>
        </Target>
    </ECRelationshipClass>
    <ECEntityClass typeName="Beam" displayLabel="Beam">
        <BaseClass>StructuralMember</BaseClass>
    </ECEntityClass>
    <ECEntityClass typeName="BeamType" displayLabel="Beam Type">
        <BaseClass>StructuralMemberType</BaseClass>
    </ECEntityClass>
    <ECRelationshipClass typeName="BeamIsOfType" strength="referencing" modifier="None" description="A type-instance relation; one that indicates that the specific sp:Beam is an instance of the defined sp:BeamType.">
        <BaseClass>StructuralMemberIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="Beam" />
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="BeamType"/>
        </Target>
    </ECRelationshipClass>
    <ECEntityClass typeName="Column" displayLabel="Column">
        <BaseClass>StructuralMember</BaseClass>
    </ECEntityClass>
    <ECEntityClass typeName="ColumnType" displayLabel="Column Type">
        <BaseClass>StructuralMemberType</BaseClass>
    </ECEntityClass>
    <ECRelationshipClass typeName="ColumnIsOfType" strength="referencing" modifier="None" description="A type-instance relation; one that indicates that the specific sp:Column is an instance of the defined sp:ColumnType.">
        <BaseClass>StructuralMemberIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="Column" />
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="ColumnType"/>
        </Target>
    </ECRelationshipClass>
    <ECEntityClass typeName="Brace" displayLabel="Brace">
        <BaseClass>StructuralMember</BaseClass>
    </ECEntityClass>
    <ECEntityClass typeName="BraceType" displayLabel="Brace Type">
        <BaseClass>StructuralMemberType</BaseClass>
    </ECEntityClass>
    <ECRelationshipClass typeName="BraceIsOfType" strength="referencing" modifier="None" description="A type-instance relation; one that indicates that the specific sp:Brace is an instance of the defined sp:BraceType.">
        <BaseClass>StructuralMemberIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="Brace" />
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="BraceType"/>
        </Target>
    </ECRelationshipClass>
    <ECEntityClass typeName="FoundationMember" displayLabel="Foundation Member">
        <BaseClass>StructuralMember</BaseClass>
    </ECEntityClass>
    <ECEntityClass typeName="StripFooting" displayLabel="Strip Footing">
        <BaseClass>FoundationMember</BaseClass>
    </ECEntityClass>
    <ECEntityClass typeName="StripFootingType" displayLabel="Strip Footing Type">
        <BaseClass>StructuralMemberType</BaseClass>
    </ECEntityClass>
    <ECRelationshipClass typeName="StripFootingIsOfType" strength="referencing" modifier="None" description="A type-instance relation; one that indicates that the specific sp:StripFooting is an instance of the defined sp:StripFootingType.">
        <BaseClass>StructuralMemberIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="StripFooting" />
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="StripFootingType"/>
        </Target>
    </ECRelationshipClass>
    <ECEntityClass typeName="SpreadFooting" displayLabel="Spread Footing">
        <BaseClass>FoundationMember</BaseClass>
    </ECEntityClass>
    <ECEntityClass typeName="SpreadFootingType" displayLabel="Spread Footing Type">
        <BaseClass>StructuralMemberType</BaseClass>
    </ECEntityClass>
    <ECRelationshipClass typeName="SpreadFootingIsOfType" strength="referencing" modifier="None" description="A type-instance relation; one that indicates that the specific sp:SpreadFooting is an instance of the defined sp:SpreadFootingType.">
        <BaseClass>StructuralMemberIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="SpreadFooting" />
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="SpreadFootingType"/>
        </Target>
    </ECRelationshipClass>
    <ECEntityClass typeName="PileCap" displayLabel="Pile Cap">
        <BaseClass>FoundationMember</BaseClass>
    </ECEntityClass>
    <ECEntityClass typeName="PileCapType" displayLabel="Pile Cap Type">
        <BaseClass>StructuralMemberType</BaseClass>
    </ECEntityClass>
    <ECRelationshipClass typeName="PileCapIsOfType" strength="referencing" modifier="None" description="A type-instance relation; one that indicates that the specific sp:PileCap is an instance of the defined sp:PileCapType.">
        <BaseClass>StructuralMemberIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="PileCap" />
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="PileCapType"/>
        </Target>
    </ECRelationshipClass>
    <ECEntityClass typeName="Pile" displayLabel="Pile">
        <BaseClass>FoundationMember</BaseClass>
    </ECEntityClass>
    <ECEntityClass typeName="PileType" displayLabel="Pile Type">
        <BaseClass>StructuralMemberType</BaseClass>
    </ECEntityClass>
    <ECRelationshipClass typeName="PileIsOfType" strength="referencing" modifier="None" description="A type-instance relation; one that indicates that the specific sp:Pile is an instance of the defined sp:PileType.">
        <BaseClass>StructuralMemberIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="Pile" />
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="PileType"/>
        </Target>
    </ECRelationshipClass>
</ECSchema>
