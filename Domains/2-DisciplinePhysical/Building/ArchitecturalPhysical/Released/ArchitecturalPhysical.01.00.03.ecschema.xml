<?xml version="1.0" encoding="UTF-8"?>
<!-- ==================================================================================
|  * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
|  * See LICENSE.md in the project root for license terms and full copyright notice.
======================================================================================= -->
<ECSchema schemaName="ArchitecturalPhysical" alias="ArchPhys" version="01.00.03" description="Architectural Physical Schema" xmlns="http://www.bentley.com/schemas/Bentley.ECXML.3.2">
    <ECSchemaReference name="CoreCustomAttributes" version="01.00.03" alias="CoreCA"/>
    <ECSchemaReference name="BisCustomAttributes" version="01.00.00" alias="bisCA"/>
    <ECSchemaReference name="BisCore" version="01.00.14" alias="bis"/>
    <ECSchemaReference name="AecUnits" version="01.00.03" alias="AECU"/>
    
    <ECCustomAttributes>
        <ProductionStatus xmlns="CoreCustomAttributes.01.00.03">
            <SupportedUse>Production</SupportedUse>
        </ProductionStatus>
        <SchemaLayerInfo xmlns="BisCustomAttributes.01.00.00">
            <Value>DisciplinePhysical</Value>
        </SchemaLayerInfo>
    </ECCustomAttributes>

    <ECEntityClass typeName="Casework">
        <BaseClass>bis:PhysicalElement</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="CaseworkType" modifier="None" displayLabel="Casework Type" description="Further specializes a particular subclass of a Casework by associating a custom Type that can be defined by users.">
        <BaseClass>bis:PhysicalType</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="CaseworkIsOfType" modifier="None" strength="referencing" displayLabel="Casework Is Of Casework Type" description="Relates a Casework to its Type definition">
        <BaseClass>bis:PhysicalElementIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="Casework"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="CaseworkType"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="CurtainWall" displayLabel="Curtain Wall">
        <BaseClass>bis:PhysicalElement</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="CurtainWallType" modifier="None" displayLabel="CurtainWall Type" description="Further specializes a particular subclass of a CurtainWall by associating a custom Type that can be defined by users.">
        <BaseClass>bis:PhysicalType</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="CurtainWallIsOfType" modifier="None" strength="referencing" displayLabel="CurtainWall Is Of CurtainWall Type" description="Relates a CurtainWall to its Type definition">
        <BaseClass>bis:PhysicalElementIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="CurtainWall"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="CurtainWallType"/>
        </Target>
    </ECRelationshipClass>
    
    <ECEntityClass typeName="Door">
        <BaseClass>bis:PhysicalElement</BaseClass>
        <ECProperty propertyName="OverallHeight"        typeName="double"   description="Overall Height of the Door"                        displayLabel="Overall Height"       kindOfQuantity="AECU:LENGTH_SHORT"/>
        <ECProperty propertyName="OverallWidth"         typeName="double"   description="Overal1 Width of the Door"                         displayLabel="Overall Width"        kindOfQuantity="AECU:LENGTH_SHORT"/>
        <ECProperty propertyName="Description"          typeName="string"/>
    </ECEntityClass>

    <ECRelationshipClass typeName="DoorIsOfType" modifier="None" strength="referencing" displayLabel="Door Is Of Door Type" description="Relates a Door to its Type definition">
        <BaseClass>bis:PhysicalElementIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="Door"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="DoorType"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="DoorType" description="Door Physical Type" displayLabel="Door Type">
        <BaseClass>bis:PhysicalType</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="Floor">
        <BaseClass>bis:PhysicalElement</BaseClass>
    </ECEntityClass>
    
    <ECEntityClass typeName="FloorType" modifier="None" displayLabel="Floor Type" description="Further specializes a particular subclass of a Floor by associating a custom Type that can be defined by users.">
        <BaseClass>bis:PhysicalType</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="FloorIsOfType" modifier="None" strength="referencing" displayLabel="Floor Is Of Floor Type" description="Relates a Floor to its Type definition">
        <BaseClass>bis:PhysicalElementIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="Floor"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="FloorType"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="Furniture">
        <BaseClass>bis:PhysicalElement</BaseClass>
    </ECEntityClass>
    
    <ECEntityClass typeName="FurnitureType" modifier="None" displayLabel="Furniture Type" description="Further specializes a particular subclass of a Furniture by associating a custom Type that can be defined by users.">
        <BaseClass>bis:PhysicalType</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="FurnitureIsOfType" modifier="None" strength="referencing" displayLabel="Furniture Is Of Furniture Type" description="Relates a Furniture to its Type definition">
        <BaseClass>bis:PhysicalElementIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="Furniture"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="FurnitureType"/>
        </Target>
    </ECRelationshipClass>
 
    <ECEntityClass typeName="Railing">
        <BaseClass>bis:PhysicalElement</BaseClass>
    </ECEntityClass>
    
    <ECEntityClass typeName="RailingType" modifier="None" displayLabel="Railing Type" description="Further specializes a particular subclass of a Railing by associating a custom Type that can be defined by users.">
        <BaseClass>bis:PhysicalType</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="RailingIsOfType" modifier="None" strength="referencing" displayLabel="Railing Is Of Railing Type" description="Relates a Railing to its Type definition">
        <BaseClass>bis:PhysicalElementIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="Railing"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="RailingType"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="Ramp" description="A slopping element that transistions between two elevations">
        <BaseClass>bis:PhysicalElement</BaseClass>
    </ECEntityClass>
    
    <ECEntityClass typeName="RampType" modifier="None" displayLabel="Ramp Type" description="Further specializes a particular subclass of a Ramp by associating a custom Type that can be defined by users.">
        <BaseClass>bis:PhysicalType</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="RampIsOfType" modifier="None" strength="referencing" displayLabel="Ramp Is Of Ramp Type" description="Relates a Ramp to its Type definition">
        <BaseClass>bis:PhysicalElementIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="Ramp"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="RampType"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="Ceiling">
        <BaseClass>bis:PhysicalElement</BaseClass>
    </ECEntityClass>
    
    <ECEntityClass typeName="CeilingType" modifier="None" displayLabel="Ceiling Type" description="Further specializes a particular subclass of a Ceiling by associating a custom Type that can be defined by users.">
        <BaseClass>bis:PhysicalType</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="CeilingIsOfType" modifier="None" strength="referencing" displayLabel="Ceiling Is Of Ceiling Type" description="Relates a Ceiling to its Type definition">
        <BaseClass>bis:PhysicalElementIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="Ceiling"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="CeilingType"/>
        </Target>
    </ECRelationshipClass>
 
    <ECEntityClass typeName="Roof">
        <BaseClass>bis:PhysicalElement</BaseClass>
    </ECEntityClass>
    
    <ECEntityClass typeName="RoofType" modifier="None" displayLabel="Roof Type" description="Further specializes a particular subclass of a Roof by associating a custom Type that can be defined by users.">
        <BaseClass>bis:PhysicalType</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="RoofIsOfType" modifier="None" strength="referencing" displayLabel="Roof Is Of Roof Type" description="Relates a Roof to its Type definition">
        <BaseClass>bis:PhysicalElementIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="Roof"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="RoofType"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="Stair">
        <BaseClass>bis:PhysicalElement</BaseClass>
    </ECEntityClass>
    
    <ECEntityClass typeName="StairType" modifier="None" displayLabel="Stair Type" description="Further specializes a particular subclass of a Stair by associating a custom Type that can be defined by users.">
        <BaseClass>bis:PhysicalType</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="StairIsOfType" modifier="None" strength="referencing" displayLabel="Stair Is Of Stair Type" description="Relates a Stair to its Type definition">
        <BaseClass>bis:PhysicalElementIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="Stair"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="StairType"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="TransportationMechanism" displayLabel="Transportation Mechanism">
        <BaseClass>bis:PhysicalElement</BaseClass>
    </ECEntityClass>
    
    <ECEntityClass typeName="TransportationMechanismType" modifier="None" displayLabel="TransportationMechanism Type" description="Further specializes a particular subclass of a TransportationMechanism by associating a custom Type that can be defined by users.">
        <BaseClass>bis:PhysicalType</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="TransportationMechanismIsOfType" modifier="None" strength="referencing" displayLabel="TransportationMechanism Is Of TransportationMechanism Type" description="Relates a TransportationMechanism to its Type definition">
        <BaseClass>bis:PhysicalElementIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="TransportationMechanism"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="TransportationMechanismType"/>
        </Target>
    </ECRelationshipClass>
    
    <ECEntityClass typeName="Wall" description="Wall">
        <BaseClass>bis:PhysicalElement</BaseClass>
        <BaseClass>bis:IParentElement</BaseClass>
        <ECProperty propertyName="Height"               typeName="double"   description="Height of the wall"                        displayLabel="Height"               kindOfQuantity="AECU:LENGTH"/>
        <ECProperty propertyName="Width"                typeName="double"   description="Width (thickness) of the wall"             displayLabel="Width"                kindOfQuantity="AECU:LENGTH_SHORT"/>
        <ECProperty propertyName="GrossVolume"          typeName="double"   description="Gross Volume at the of the wall"           displayLabel="Gross Volume"         kindOfQuantity="AECU:VOLUME"/>
        <ECProperty propertyName="NetVolume"            typeName="double"   description="Net Volume at the of the wall"             displayLabel="Net Volume"           kindOfQuantity="AECU:VOLUME"/>
        <ECProperty propertyName="GrossSideArea"        typeName="double"   description="Gross Area at the center of the wall"      displayLabel="Gross Side Area"      kindOfQuantity="AECU:AREA"/>
        <ECProperty propertyName="Length"               typeName="double"   description="length along the centerline of the wall"   displayLabel="Length"               kindOfQuantity="AECU:LENGTH"/>
        <ECProperty propertyName="NetSideArea"          typeName="double"   description="Net Area at the center of the wall"        displayLabel="Net Side Area"        kindOfQuantity="AECU:AREA"/>
        <ECProperty propertyName="GrossFootprintArea"   typeName="double"   description="Net Area at the center of the wall"        displayLabel="Gross Footprint Area" kindOfQuantity="AECU:AREA"/>
        <ECProperty propertyName="NetFootprintArea"     typeName="double"   description="Net Area at the center of the wall"        displayLabel="Net Footprint Area"   kindOfQuantity="AECU:AREA"/>
    </ECEntityClass>
    
    <ECEntityClass typeName="WallType" modifier="None" displayLabel="Wall Type" description="Further specializes a particular subclass of a Wall by associating a custom Type that can be defined by users.">
        <BaseClass>bis:PhysicalType</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="WallIsOfType" modifier="None" strength="referencing" displayLabel="Wall Is Of Wall Type" description="Relates a Wall to its Type definition">
        <BaseClass>bis:PhysicalElementIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="Wall"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="WallType"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="WallLeaf" description="Wall" displayLabel="Wall Leaf">
        <BaseClass>bis:PhysicalElement</BaseClass>
        <ECProperty propertyName="Height"               typeName="double"   description="Height of the wall layer"                        displayLabel="Height"             kindOfQuantity="AECU:LENGTH"/>
        <ECProperty propertyName="Length"               typeName="double"   description="length along the centerline of the wall layer"   displayLabel="Length"             kindOfQuantity="AECU:LENGTH"/>
        <ECProperty propertyName="Width"                typeName="double"   description="Width (thickness) of the wall layer"             displayLabel="Width"              kindOfQuantity="AECU:LENGTH_SHORT"/>
    </ECEntityClass>
    
    <ECEntityClass typeName="WallLeafType" modifier="None" displayLabel="Wall Leaf Type" description="Further specializes a particular subclass of a WallLeaf by associating a custom Type that can be defined by users.">
        <BaseClass>bis:PhysicalType</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="WallLeafIsOfType" modifier="None" strength="referencing" displayLabel="Wall Leaf Is Of Wall Leaf Type" description="Relates a WallLeaf to its Type definition">
        <BaseClass>bis:PhysicalElementIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="WallLeaf"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="WallLeafType"/>
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="WallOwnsWallLeafs" displayLabel="Wall Owns Wall Leafs" modifier="None" strength="embedding">
        <BaseClass>bis:ElementOwnsChildElements</BaseClass>
        <Source multiplicity="(0..1)" roleLabel ="Wall leaf related to" polymorphic="true">
            <Class class="Wall"/>
        </Source>
        <Target multiplicity="(0..*)" roleLabel ="Wall leaf owned by" polymorphic="true">
            <Class class="WallLeaf"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="Window" description="Window">
        <BaseClass>bis:PhysicalElement</BaseClass>
        <ECProperty propertyName="OverallHeight"        typeName="double"   description="Overall Height of the Window"                      displayLabel="Overall Height"       kindOfQuantity="AECU:LENGTH_SHORT"/>
        <ECProperty propertyName="OverallWidth"         typeName="double"   description="Overal1 Width of the Window"                       displayLabel="Overall Width"        kindOfQuantity="AECU:LENGTH_SHORT"/>
        <ECProperty propertyName="Description"          typeName="string"/>
    </ECEntityClass>
    
    <ECEntityClass typeName="WindowType" modifier="None" displayLabel="Window Type" description="Further specializes a particular subclass of a Window by associating a custom Type that can be defined by users.">
        <BaseClass>bis:PhysicalType</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="WindowIsOfType" modifier="None" strength="referencing" displayLabel="Window Is Of Window Type" description="Relates a Window to its Type definition">
        <BaseClass>bis:PhysicalElementIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of type" polymorphic="true">
            <Class class="Window"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is type of" polymorphic="true">
            <Class class="WindowType"/>
        </Target>
    </ECRelationshipClass>
</ECSchema>
