<?xml version="1.0" encoding="UTF-8"?>
<!-- ==================================================================================
|  * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
|  * See LICENSE.md in the project root for license terms and full copyright notice.
======================================================================================= -->
<ECSchema schemaName="StructuralAnalysis" alias="sa" version="01.00.04" xmlns="http://www.bentley.com/schemas/Bentley.ECXML.3.2" displayLabel="Structural Analysis" description="Structural Analysis Schema.">
    <ECSchemaReference name="CoreCustomAttributes" version="01.00.03" alias="CoreCA"/>
    <ECSchemaReference name="BisCustomAttributes" version="01.00.00" alias="bisCA"/>
    <ECSchemaReference name="BisCore" version="01.00.10" alias="bis" />
    <ECSchemaReference name="Profiles" version="01.00.00" alias="prf" />
    <ECSchemaReference name="Analytical" version="01.00.00" alias="anlyt" />
    <ECSchemaReference name="AecUnits" version="01.00.03" alias="AECU" />

    <ECCustomAttributes>
        <ProductionStatus xmlns="CoreCustomAttributes.01.00.03">
            <SupportedUse>Production</SupportedUse>
        </ProductionStatus>
        <SchemaLayerInfo xmlns="BisCustomAttributes.01.00.00">
            <Value>DisciplineOther</Value>
        </SchemaLayerInfo>
    </ECCustomAttributes>

    <ECEnumeration typeName="PlacementPoint" backingTypeName="int" isStrict="true" description="Default standard placement points.">
        <ECEnumerator value="0" name="LeftBottom" displayLabel="Left Bottom" description="Most bottom left Profile's bounding box point." />
        <ECEnumerator value="1" name="MiddleBottom" displayLabel="Middle Bottom" description="Most bottom center profile BoundingBox point." />
        <ECEnumerator value="2" name="RightBottom" displayLabel="Right Bottom" description="Most bottom right Profile BoundingBox point." />
        <ECEnumerator value="3" name="LeftMiddle" displayLabel="Left Middle" description="Most left point at the horizontal middle height line of Profile BoundingBox." />
        <ECEnumerator value="4" name="MiddleMiddle" displayLabel="Middle Middle" description="Profile's BoundingBox center point." />
        <ECEnumerator value="5" name="RightMiddle" displayLabel="Right Middle" description="Most right point at the horizontal middle height line of Profile BoundingBox." />
        <ECEnumerator value="6" name="LeftTop" displayLabel="Left Top" description="Most top left profile BoundingBox point." />
        <ECEnumerator value="7" name="MiddleTop" displayLabel="Middle Top" description="Most top center profile BoundingBox point." />
        <ECEnumerator value="8" name="RightTop" displayLabel="Right Top" description="Most top right profile BoundingBox point." />
        <ECEnumerator value="9" name="Centroid" displayLabel="Centroid" description="Point at which a cutout of the shape could be perfectly balanced." />
        <ECEnumerator value="10" name="CentroidBottom" displayLabel="Centroid Bottom" description="Point on the most bottom horizontal line, most close to GeometricCentroid." />
        <ECEnumerator value="11" name="LeftCentroid" displayLabel="Left Centroid" description="Point on the most left vertical line, most close to GeometricCentroid." />
        <ECEnumerator value="12" name="RightCentroid" displayLabel="Right Centroid" description="Point on the most right vertical line, most close to GeometricCentroid." />
        <ECEnumerator value="13" name="CentroidTop" displayLabel="Centroid Top" description="Point on the most top horizontal line, most close to GeometricCentroid." />
        <ECEnumerator value="14" name="ShearCenter" displayLabel="Shear Centre" description="Point at which applied external force does not twist Profile." />
        <ECEnumerator value="15" name="ShearBottom" displayLabel="Shear Bottom" description="Point on the most bottom horizontal line, most close to ShearCentre." />
        <ECEnumerator value="16" name="LeftShear" displayLabel="Left Shear" description="Point on the most left vertical line, most close to ShearCentre." />
        <ECEnumerator value="17" name="RightShear" displayLabel="Right Shear" description="Point on the most right vertical line, most close to ShearCentre." />
        <ECEnumerator value="18" name="ShearTop" displayLabel="Shear Top" description="Point on the most top horizontal line, most close to ShearCentre." />
    </ECEnumeration>

    <ECEnumeration typeName="CurveMemberClassificationType" backingTypeName="int" isStrict="true" description="Used for setting classification for CurveMember.">
        <ECEnumerator value="0" name="Unset" displayLabel="Unset" description="Classification undefined." />
        <ECEnumerator value="1" name="Beam" displayLabel="Beam" description="Structural element that primarily resists loads applied laterally to the beam's length." />
        <ECEnumerator value="2" name="Column" displayLabel="Column" description="Structural element that primarily resists load applied along the beam's length." />
        <ECEnumerator value="3" name="HorizontalBrace" displayLabel="Horizontal Brace" description="Structural system commonly used in structures subject to lateral loads such as wind and seismic pressure. The bracing at each floor (in horizontal planes) provides load paths for the transference of horizontal forces to the planes of vertical bracing." />
        <ECEnumerator value="4" name="StripFooting" displayLabel="Strip Footing" description="Structural element that provides a continuous, level (or sometimes stepped) strip of base to a wall or closely-spaced rows of columns built centrally above them." />
        <ECEnumerator value="5" name="Pedestal" displayLabel="Pedestal" description="Base on which a column is mounted." />
        <ECEnumerator value="6" name="Pile" displayLabel="Pile" description="Vertical structural element of a deep foundation, driven or drilled deep into the ground at the building site." />
        <ECEnumerator value="7" name="VerticalBrace" displayLabel="Vertical Brace" description="Structural system commonly used in structures subject to lateral loads such as wind and seismic pressure. Bracing between column lines (in vertical planes) provides load paths for the transference of horizontal forces to ground level." />
    </ECEnumeration>

    <ECEnumeration typeName="SurfaceMemberClassificationType" backingTypeName="int" isStrict="true" description="Used for setting classification for SurfaceMember.">
        <ECEnumerator value="0" name="Unset" displayLabel="Unset" />
        <ECEnumerator value="1" name="Cladding" displayLabel="Cladding" />
        <ECEnumerator value="2" name="Footing" displayLabel="Footing" />
        <ECEnumerator value="3" name="PileCap" displayLabel="Pile Cap" />
        <ECEnumerator value="4" name="Slab" displayLabel="Slab" />
        <ECEnumerator value="5" name="SpreadFooting" displayLabel="Spread Footing" />
        <ECEnumerator value="6" name="Wall" displayLabel="Wall" />
    </ECEnumeration>

    <ECEnumeration typeName="PlacementSurface" backingTypeName="int" isStrict="true" description="Used for setting Surface location.">
        <ECEnumerator value="0" name="Top" displayLabel="Top" description="Topology defines top boundary of a Surface." />
        <ECEnumerator value="1" name="Middle" displayLabel="Middle" description="Topology defines boundary at the mid depth of a Surface." />
        <ECEnumerator value="2" name="Bottom" displayLabel="Bottom" description="Topology defines boundary at the bottom of a Surface." />
    </ECEnumeration>

    <ECEntityClass typeName="StructuralAnalysisModel" modifier="Sealed" displayLabel="Structural Analysis Model" description="Model containing all StructuralAnalysis elements." >
        <BaseClass>anlyt:AnalyticalModel</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="StructuralAnalysisPartition" modifier="Sealed" displayLabel="Structural Analysis Partition" description="StructuralAnalysisPartition element indicates that there is a specialized StructuralAnalysis perspective within the overall information hierarchy." >
        <BaseClass>anlyt:AnalyticalPartition</BaseClass>
        <ECNavigationProperty propertyName="DefaultDefinitionContainer" relationshipName="StructuralAnalysisPartitionRefersToDefinitionContainer" direction="Forward" displayLabel="Default Definition Container" description="Default location for definition elements." />
    </ECEntityClass>

    <ECRelationshipClass typeName="StructuralAnalysisPartitionRefersToDefinitionContainer" strength="referencing" modifier="Sealed" >
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="StructuralAnalysisPartition"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="bis:DefinitionContainer"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="Structure" modifier="Sealed" displayLabel="Structure" description="DEPRECATED" >
        <ECCustomAttributes>
            <Deprecated xmlns="CoreCustomAttributes.1.0.3">
                <Description>Instances of Structure are no longer created. Analysis Elements should be inserted directly to StructuralAnalysisPartition model.</Description>
            </Deprecated>
        </ECCustomAttributes>
        <BaseClass>StructuralAnalysisElement</BaseClass>
        <BaseClass>bis:ISubModeledElement</BaseClass>
        <ECNavigationProperty propertyName="DefaultDefinitionContainer" relationshipName="StructureRefersToDefinitionContainer" direction="Forward" displayLabel="Default Definition Container" description="Default location for definition elements. (Required)" />
    </ECEntityClass>

    <ECRelationshipClass typeName="StructureRefersToDefinitionContainer" strength="referencing" modifier="Sealed" description="DEPRECATED" >
        <ECCustomAttributes>
            <Deprecated xmlns="CoreCustomAttributes.1.0.3">
                <Description>Instances of Structure are no longer created so this relationship is no longer needed.</Description>
            </Deprecated>
        </ECCustomAttributes>
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="Structure"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="bis:DefinitionContainer"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="StructurePart" modifier="Abstract" displayLabel="Structure Part" description="Groups StructuralAnalysisElements based on some specific condition." >
        <BaseClass>StructuralAnalysisElement</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="Story" modifier="Sealed" displayLabel="Story" description="Defines elevation space in Structure that elements can reference." >
        <BaseClass>StructurePart</BaseClass>
        <ECProperty propertyName="Elevation" typeName="double" displayLabel="Elevation" description="The elevation fo this story." kindOfQuantity="AECU:LENGTH" />
    </ECEntityClass>

    <ECRelationshipClass typeName="IStoryAssignableRefersToStory" strength="referencing" modifier="Sealed" description="A relationship that indicates that an IStoryAssignable element can refer to a Story.">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="true">
            <Class class="IStoryAssignable"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is referenced by" polymorphic="false">
            <Class class="Story"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="IStoryAssignable" modifier="Abstract" displayLabel="IStory Assignable" description="Element which can be assigned to a Story.">
        <ECCustomAttributes>
            <IsMixin xmlns="CoreCustomAttributes.01.00.00">
                <AppliesToEntityClass>StructuralAnalysisElement</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
        <ECNavigationProperty propertyName="Story" relationshipName="IStoryAssignableRefersToStory" direction="Forward" displayLabel="Story" description="Story that this element is located in." />
    </ECEntityClass>

    <!-- Topology classes -->
    <ECEntityClass typeName="TopologyElement" modifier="Abstract" displayLabel="Topology Element" description="Abstract class for all topology-related classes to derive from.">
        <BaseClass>anlyt:AnalyticalElement</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="SharedTopologyElement" modifier="Abstract" displayLabel="Shared Topology Element" description="Abstract topology class that can be shared by multiple other Elements. Sharing defines connectivity of the topological network. Each subclass is also the lowest level concept for a particular dimensionality (Face is the lowest 2D concept).">
        <BaseClass>TopologyElement</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="PrivateTopologyElement" modifier="Abstract" displayLabel="Private Topology Element" description="Abstract class as a common parent class for each  topology type that is not shared. Each subclass represents a direct or indirect collection of the shared topology. Each subclass is also a collection of the topology of the same dimensionality.">
        <BaseClass>TopologyElement</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="Vertex" modifier="Sealed" displayLabel="Vertex" description="An identified location in 3D space.">
        <BaseClass>SharedTopologyElement</BaseClass>
        <BaseClass>IDefinedPoint</BaseClass>
        <ECProperty propertyName="Point" typeName="point3d" displayLabel="Placement Point" description="Describes Vertex location. Point is only set on Vertex creation and cannot be modified." kindOfQuantity="AECU:LENGTH" />
    </ECEntityClass>

    <ECEntityClass typeName="Face" modifier="Sealed" displayLabel="Face" description="A surface bounded by Loops.">
        <BaseClass>SharedTopologyElement</BaseClass>
        <BaseClass>ILoopOwner</BaseClass>
        <BaseClass>IPathsOwner</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="FaceOwnsBoundaryLoop" strength="embedding" modifier="Sealed" description="A relationship that indicates that a Face owns a Loop which describes it's outer boundary.">
        <BaseClass>ILoopOwnerOwnsLoop</BaseClass>
        <Source multiplicity="(0..1)" roleLabel="owns" polymorphic="false">
            <Class class="Face"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is owned by" polymorphic="false">
            <Class class="Loop"/>
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="FaceOwnsInnerPaths" strength="embedding" modifier="Sealed" description="A relationship that indicates that a Face owns a Path which should describe it's inner connectivity with other StructuralAnalysis Elements.">
        <BaseClass>IPathsOwnerOwnsPaths</BaseClass>
        <Source multiplicity="(0..1)" roleLabel="owns" polymorphic="false">
            <Class class="Face"/>
        </Source>
        <Target multiplicity="(0..*)" roleLabel="is owned by" polymorphic="true">
            <Class class="Path"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="OrientedFaceAspect" modifier="Sealed" displayLabel="Oriented Face Aspect" description="This Aspect stores the Faces (and related data) for a FaceSet.">
        <BaseClass>bis:ElementMultiAspect</BaseClass>
        <ECProperty propertyName="IsForwardDirection" typeName="boolean" displayLabel="Is Forward Direction" description="Shows if direction matches Face direction." />
        <ECNavigationProperty propertyName="Face" relationshipName="OrientedFaceAspectHasFace" direction="Forward" displayLabel="Face" description="Face described by this Aspect." />
    </ECEntityClass>

    <ECRelationshipClass typeName="OrientedFaceAspectHasFace" strength="referencing" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="is referenced by" polymorphic="false">
            <Class class="OrientedFaceAspect" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="has" polymorphic="false">
            <Class class="Face" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="FaceRefersToInnerVertices" strength="referencing" modifier="Sealed">
        <BaseClass>bis:ElementRefersToElements</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="Face" />
        </Source>
        <Target multiplicity="(0..*)" roleLabel="is referenced by" polymorphic="false">
            <Class class="Vertex" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="FaceSet" modifier="Abstract" displayLabel="Face Set" description="A set of Edge-connected Faces with compatible orientations.">
        <BaseClass>PrivateTopologyElement</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="FaceSetOwnsOrientedFaceAspects" strength="embedding" modifier="Sealed">
        <BaseClass>bis:ElementOwnsMultiAspects</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="true">
            <Class class="FaceSet" />
        </Source>
        <Target multiplicity="(1..*)" roleLabel="is owned by" polymorphic="false">
            <Class class="OrientedFaceAspect" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="Sheet" modifier="Sealed" displayLabel="Sheet" description="A FaceSet that may be open or closed, and does not bound a Region (future concept). Sheets are also constrained to have a single base Surface.">
        <BaseClass>FaceSet</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="ISheetOwner" modifier="Abstract" displayLabel="Sheet Owner" description="Element which uses child Sheet to represent it's location.">
        <BaseClass>bis:IParentElement</BaseClass>
        <ECCustomAttributes>
            <IsMixin xmlns="CoreCustomAttributes.01.00.00">
                <AppliesToEntityClass>bis:Element</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECRelationshipClass typeName="ISheetOwnerOwnsSheet" strength="embedding" modifier="None" description="A relationship that indicates that an Element owns Sheet.">
        <BaseClass>bis:ElementOwnsChildElements</BaseClass>
        <Source multiplicity="(0..1)" roleLabel="owns" polymorphic="true">
            <Class class="ISheetOwner"/>
        </Source>
        <Target multiplicity="(1..*)" roleLabel="is owned by" polymorphic="false">
            <Class class="Sheet"/>
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="ISheetOwnerOwnsLocationSheet" strength="embedding" modifier="Sealed" description="A relationship that indicates that an ISheetOwner owns a Sheet that represents it's location..">
        <BaseClass>ISheetOwnerOwnsSheet</BaseClass>
        <Source multiplicity="(0..1)" roleLabel="owns" polymorphic="true">
            <Class class="ISheetOwner"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is owned by" polymorphic="false">
            <Class class="Sheet"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="Path" modifier="Abstract" displayLabel="Path" description="Series of Edges that define a continuous analytical curve.">
        <BaseClass>PrivateTopologyElement</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="IPathsOwner" modifier="Abstract" displayLabel="Paths Owner" description="Element which uses child Paths to represent it's location.">
        <BaseClass>bis:IParentElement</BaseClass>
        <ECCustomAttributes>
            <IsMixin xmlns="CoreCustomAttributes.01.00.00">
                <AppliesToEntityClass>bis:Element</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECRelationshipClass typeName="IPathsOwnerOwnsPaths" strength="embedding" modifier="None" description="A relationship that indicates that an Element owns Paths.">
        <BaseClass>bis:ElementOwnsChildElements</BaseClass>
        <Source multiplicity="(0..1)" roleLabel="owns" polymorphic="true">
            <Class class="IPathsOwner"/>
        </Source>
        <Target multiplicity="(0..*)" roleLabel="is owned by" polymorphic="true">
            <Class class="Path"/>
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="PathOwnsOrientedEdgeAspects" strength="embedding" modifier="Sealed">
        <BaseClass>bis:ElementOwnsMultiAspects</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="true">
            <Class class="Path" />
        </Source>
        <Target multiplicity="(1..*)" roleLabel="is owned by" polymorphic="false">
            <Class class="OrientedEdgeAspect" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="Loop" modifier="Sealed" displayLabel="Loop" description="A Path that is closed and defines a boundary of a Face.">
        <BaseClass>Path</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="ILoopOwner" modifier="Abstract" displayLabel="Loop Owner" description="Element which uses child Loop to represent it's location.">
        <BaseClass>bis:IParentElement</BaseClass>
        <ECCustomAttributes>
            <IsMixin xmlns="CoreCustomAttributes.01.00.00">
                <AppliesToEntityClass>bis:Element</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECRelationshipClass typeName="ILoopOwnerOwnsLoop" strength="embedding" modifier="None" description="A relationship that indicates that an Element owns Loop.">
        <BaseClass>bis:ElementOwnsChildElements</BaseClass>
        <Source multiplicity="(0..1)" roleLabel="owns" polymorphic="true">
            <Class class="ILoopOwner"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is owned by" polymorphic="false">
            <Class class="Loop"/>
        </Target>
    </ECRelationshipClass>

     <ECEntityClass typeName="Wire" modifier="Sealed" displayLabel="Wire" description="A Path that does not need to be closed and is not defining the boundary of a face.">
        <BaseClass>Path</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="IWireOwner" modifier="Abstract" displayLabel="Wire Owner" description="Element which uses child Wire do represent it's location.">
        <BaseClass>bis:IParentElement</BaseClass>
        <ECCustomAttributes>
            <IsMixin xmlns="CoreCustomAttributes.01.00.00">
                <AppliesToEntityClass>bis:Element</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECRelationshipClass typeName="IWireOwnerOwnsWire" strength="embedding" modifier="None" description="A relationship that indicates that an Element owns Wire.">
        <BaseClass>bis:ElementOwnsChildElements</BaseClass>
        <Source multiplicity="(0..1)" roleLabel="owns" polymorphic="true">
            <Class class="IWireOwner"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is owned by" polymorphic="false">
            <Class class="Wire"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="Edge" modifier="Sealed" displayLabel="Edge" description="An identified curve location in 3D space.">
        <BaseClass>SharedTopologyElement</BaseClass>
        <ECNavigationProperty propertyName="StartVertex" relationshipName="EdgeHasStartVertex" direction="Forward" displayLabel="Start Vertex" description="Start Vertex (Point)." />
        <ECNavigationProperty propertyName="EndVertex" relationshipName="EdgeHasEndVertex" direction="Forward" displayLabel="End Vertex" description="End Vertex (Point)." />
        <ECProperty propertyName="Curve" typeName="Bentley.Geometry.Common.IGeometry" displayLabel="Location Curve" description="A non self-intersecting curve defining Edge's location." />
    </ECEntityClass>

    <ECEntityClass typeName="OrientedEdgeAspect" modifier="Sealed" displayLabel="Oriented Edge Aspect" description="This Aspect stores Edges (and related data) for a Path." >
        <BaseClass>bis:ElementMultiAspect</BaseClass>
        <ECProperty propertyName="Index" typeName="int" displayLabel="Index" description="Zero based index for Edge order in Path." />
        <ECProperty propertyName="IsForwardDirection" typeName="boolean" displayLabel="Is Forward Direction" description="Shows if direction matches edge direction." />
        <ECNavigationProperty propertyName="Edge" relationshipName="OrientedEdgeAspectHasEdge" direction="Forward" displayLabel="Edge" description="Edge."/>
    </ECEntityClass>

    <ECRelationshipClass typeName="OrientedEdgeAspectHasEdge" strength="referencing" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="is referenced by" polymorphic="false">
            <Class class="OrientedEdgeAspect" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="has" polymorphic="false">
            <Class class="Edge" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="EdgeHasStartVertex" strength="referencing" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="has" polymorphic="false">
            <Class class="Edge" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="false">
            <Class class="Vertex" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="EdgeHasEndVertex" strength="referencing" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="has" polymorphic="false">
            <Class class="Edge" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="false">
            <Class class="Vertex" />
        </Target>
    </ECRelationshipClass>


    <!-- Behavior Aspect Classes -->

    <ECEnumeration typeName="BendingBehaviorValue" backingTypeName="int" isStrict="true" description="Describes the structural behavior of element to transverse loads.">
        <ECEnumerator value="0" name="Unset" displayLabel="Unset" description="To indicate this value was never set." />
        <ECEnumerator value="1" name="OneWay" displayLabel="One Way" description="This member can span transverse loads in one direction (along the region r-axis)." />
        <ECEnumerator value="2" name="TwoWay" displayLabel="Two Way" description="This member can span transverse loads in two (perpendicular) directions (the r- and s- axes)." />
        <ECEnumerator value="3" name="TwoWayTwistFree" displayLabel="Two Way Twist Free" description="This member can span transverse loads in two (perpendicular) directions (the r- and s- axes), but cannot resist (r-s) twisting moments." />
    </ECEnumeration>

    <ECEnumeration typeName="LoadResistance" backingTypeName="int" isStrict="true" description="Classifies members according to the types of loads they can resist.">
        <ECEnumerator value="0" name="Unset" displayLabel="Unset" description="Value is not set." />
        <ECEnumerator value="1" name="GravityOnly" displayLabel="Gravity only" description="Resists only gravity loads." />
        <ECEnumerator value="2" name="GravityAndLateral" displayLabel="Gravity and Lateral" description="Resists both gravity and lateral loads."/>
        <ECEnumerator value="3" name="LateralOnly" displayLabel="Lateral only" description="Resists only lateral loads."/>
        <ECEnumerator value="4" name="NonStructural" displayLabel="Non Structural" description="Not used to resist loads." />
    </ECEnumeration>

    <ECEnumeration typeName="AxialBehavior" backingTypeName="int" isStrict="true" description="Describe the structural behavior of element subject to axial loads.">
        <ECEnumerator value="0" name="Unset" displayLabel="Unset" description="Value is not set." />
        <ECEnumerator value="1" name="CompressionAndTension" displayLabel="Compression and Tension" description="Resits both Compression and tension." />
        <ECEnumerator value="2" name="CompressionOnly" displayLabel="Compression only" description="Resists axial compression, but not axial tension." />
        <ECEnumerator value="3" name="TensionOnly" displayLabel="Tension only" description="Resists axial tension, but not axial compression."/>
    </ECEnumeration>

    <ECEntityClass typeName="BehaviorAspect" modifier="Abstract" displayLabel="Behavior Aspect" description="Defined Structural behavior for an Element.">
        <BaseClass>bis:ElementUniqueAspect</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="SurfaceMemberBehaviorAspect" modifier="Abstract" displayLabel="Surface Member Behavior Aspect" description="Defines unique behavior for a specific SurfaceMember or SurfaceMemberModifier.">
        <BaseClass>BehaviorAspect</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="MemberBehaviorAspect" modifier="Abstract" displayLabel="Member Behavior Aspect" description="Defines unique behavior for a any Member.">
        <BaseClass>BehaviorAspect</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="BendingBehaviorAspect" modifier="Sealed" displayLabel="Bending Behavior Aspect" description="Assigns analytical behavior for an IStructuralSurface when subjected to transverse loads.">
        <BaseClass>SurfaceMemberBehaviorAspect</BaseClass>
        <ECProperty propertyName="BendingBehaviorValue" typeName="BendingBehaviorValue" displayLabel="Bending Behavior value" description="Provides value for the behavior." />
    </ECEntityClass>

    <ECEntityClass typeName="LoadResistanceBehaviorAspect" modifier="Sealed" displayLabel="Load Resistance Behavior Aspect" description="Member load resistance.">
        <BaseClass>MemberBehaviorAspect</BaseClass>
        <ECProperty propertyName="LoadResistance" typeName="LoadResistance" displayLabel="Load Resistance value" description="Value for load resistance." />
    </ECEntityClass>

    <ECEntityClass typeName="CurveMemberBehaviorAspect" modifier="Abstract" displayLabel="Curve Member Behavior Aspect" description="Defines unique behavior for a specific CurveMember.">
        <BaseClass>BehaviorAspect</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="CamberBehaviorAspect" modifier="Sealed" displayLabel="Camber Behavior Aspect" description="Provides camber behavior for CurveMember.">
        <BaseClass>CurveMemberBehaviorAspect</BaseClass>
        <ECProperty propertyName="CamberValue" typeName="double" displayLabel="Camber value" description="Camber value for the behavior." kindOfQuantity="AECU:LENGTH_SHORT" />
    </ECEntityClass>

    <ECEntityClass typeName="AxialBehaviorAspect" modifier="Sealed" displayLabel="Axial Behavior Aspect" description="Defines member as having a particular axial structural behavior.">
        <BaseClass>CurveMemberBehaviorAspect</BaseClass>
        <ECProperty propertyName="Type" typeName="AxialBehavior" displayLabel="Axial Behavior Type" description="Specifies axial behavior type." />
    </ECEntityClass>

    <!-- ECEntityClass typeName="StiffnessBehaviorAspect" modifier="Sealed" displayLabel="Stiffness Behavior Aspect" description="Stiffness behavior for curve member.">
        <BaseClass>CurveMemberBehaviorAspect</BaseClass>
        <ECProperty propertyName="RAxisTranslational" typeName="double" displayLabel="R Axis Translational" description="Stiffness along local RAxis." kindOfQuantity="AECU:SPRING_CONSTANT" />
        <ECProperty propertyName="SAxisTranslational" typeName="double" displayLabel="S Axis Translational" description="Stiffness along local SAxis." kindOfQuantity="AECU:SPRING_CONSTANT" />
        <ECProperty propertyName="TAxisTranslational" typeName="double" displayLabel="T Axis Translational" description="Stiffness along local TAxis." kindOfQuantity="AECU:SPRING_CONSTANT" />
        <ECProperty propertyName="RAxisRotational" typeName="double" displayLabel="R Axis Rotational" description="Stiffness about local RAxis." kindOfQuantity="AECU:ROTATIONAL_SPRING_CONSTANT" />
        <ECProperty propertyName="SAxisRotational" typeName="double" displayLabel="S Axis Rotational" description="Stiffness about local SAxis." kindOfQuantity="AECU:ROTATIONAL_SPRING_CONSTANT" />
        <ECProperty propertyName="TAxisRotational" typeName="double" displayLabel="T Axis Rotational" description="Stiffness about local TAxis." kindOfQuantity="AECU:ROTATIONAL_SPRING_CONSTANT" />
    </ECEntityClass -->

    <!-- Release Aspect classes -->

    <ECEnumeration typeName="ReleaseType" backingTypeName="int" isStrict="true" description="Used for specifying the type of Release.">
        <ECEnumerator value="0" displayLabel="Unspecified" name="Unspecified"  />
        <ECEnumerator value="1" displayLabel="Released" name="Released" />
        <ECEnumerator value="2" displayLabel="Fixed" name="Fixed" />
    </ECEnumeration>

    <ECEntityClass typeName="ReleaseAspect" modifier="Abstract" displayLabel="Release Aspect" description="Release of a Member." >
        <BaseClass>bis:ElementMultiAspect</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="VertexReleaseAspect" modifier="Abstract" displayLabel="Vertex Release Aspect" description="Vertex Release of a Member." >
        <ECNavigationProperty propertyName="Vertex" relationshipName="VertexReleaseAspectRefersToVertex" direction="Forward" displayLabel="Vertex" />
        <BaseClass>ReleaseAspect</BaseClass>
    </ECEntityClass>

    <!-- <ECEntityClass typeName="PathReleaseAspect" modifier="Abstract" displayLabel="Path Release" description="Path Release of a Member." >
        <ECNavigationProperty propertyName="Path" relationshipName="PathReleaseAspectRefersToPath" direction="Forward" displayLabel="Path" />
        <BaseClass>ReleaseAspect</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="SheetReleaseAspect" modifier="Abstract" displayLabel="Sheet Release" description="Sheet Release of a Member." >
        <ECNavigationProperty propertyName="Sheet" relationshipName="SheetReleaseAspectRefersToSheet" direction="Forward" displayLabel="Sheet" />
        <BaseClass>ReleaseAspect</BaseClass>
    </ECEntityClass> -->

    <ECEntityClass typeName="LogicalVertexReleaseAspect" modifier="Sealed" displayLabel="Logical Vertex Release Aspect" description="Vertex Release of a Member." >
        <BaseClass>VertexReleaseAspect</BaseClass>
        <ECProperty propertyName="TranslationalRAxis" typeName="ReleaseType" displayLabel="Translational R Axis" description="Release for Translational R Axis." />
        <ECProperty propertyName="TranslationalSAxis" typeName="ReleaseType" displayLabel="Translational S Axis" description="Release for Translational S Axis." />
        <ECProperty propertyName="TranslationalTAxis" typeName="ReleaseType" displayLabel="Translational T Axis" description="Release for Translational T Axis." />
        <ECProperty propertyName="RotationalRAxis" typeName="ReleaseType" displayLabel="Rotational R Axis" description="Release for Rotational R Axis." />
        <ECProperty propertyName="RotationalSAxis" typeName="ReleaseType" displayLabel="Rotational S Axis" description="Release for Rotational S Axis." />
        <ECProperty propertyName="RotationalTAxis" typeName="ReleaseType" displayLabel="Rotational T Axis" description="Release for Rotational T Axis." />
    </ECEntityClass>

    <ECRelationshipClass typeName="VertexReleaseAspectRefersToVertex" strength="referencing" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="references" polymorphic="true">
            <Class class="VertexReleaseAspect" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="false">
            <Class class="Vertex" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="MemberOwnsVertexReleaseAspects" strength="embedding" modifier="Sealed">
        <BaseClass>bis:ElementOwnsMultiAspects</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="false">
            <Class class="Member"/>
        </Source>
        <Target multiplicity="(0..*)" roleLabel="is owned by" polymorphic="true">
            <Class class="VertexReleaseAspect" />
        </Target>
    </ECRelationshipClass>

    <!-- Member classes -->

    <ECEntityClass typeName="StructuralAnalysisElement" modifier="Abstract" displayLabel="Structural Analysis Element" description="Abstract class for all StructuralAnalysisElement classes to descend from.">
        <BaseClass>anlyt:AnalyticalElement</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="Support" modifier="Abstract" displayLabel="Support" description="Abstract class for all support classes to descend from.">
        <BaseClass>StructuralAnalysisElement</BaseClass>
        <BaseClass>IStoryAssignable</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="PointSupport" modifier="Sealed" displayLabel="Point Support" description="Support which is located at a single point.">
        <BaseClass>Support</BaseClass>
        <BaseClass>IDefinedPoint</BaseClass>
        <ECNavigationProperty propertyName="Vertex" relationshipName="PointSupportRefersToVertex" direction="Forward" displayLabel="Vertex" description="Vertex at which this instance supports." />
        <ECNavigationProperty propertyName="Behavior" relationshipName="PointSupportRefersToPointSupportBehavior" direction="Forward" displayLabel="Behavior" description="Point Support Behavior." />
        <ECProperty propertyName="RAxis" typeName="point3d" displayLabel="R Axis" description="RAxis of local coordinate system." />
        <ECProperty propertyName="SAxis" typeName="point3d" displayLabel="S Axis" description="SAxis of local coordinate system." />
    </ECEntityClass>

    <ECEntityClass typeName="CurveSupport" modifier="Sealed" displayLabel="Curve Support" description="Support which is located in a curve.">
        <BaseClass>Support</BaseClass>
        <BaseClass>IWireOwner</BaseClass>
        <BaseClass>IDefinedCurve</BaseClass>
        <ECNavigationProperty propertyName="Behavior" relationshipName="CurveSupportRefersToCurveSupportBehavior" direction="Forward" displayLabel="Behavior" description="Defines how support behaves at it's location." />
    </ECEntityClass>

    <ECEntityClass typeName="SurfaceSupport" modifier="Sealed" displayLabel="Surface Support" description="Support which is located in a surface.">
        <BaseClass>Support</BaseClass>
        <BaseClass>ISheetOwner</BaseClass>
        <BaseClass>IDefinedSurface</BaseClass>
        <ECNavigationProperty propertyName="Behavior" relationshipName="SurfaceSupportRefersToSurfaceSupportBehavior" direction="Forward" displayLabel="Behavior" description="Defines how support behaves at it's location." />
    </ECEntityClass>

    <ECRelationshipClass typeName="SurfaceSupportRefersToSurfaceSupportBehavior" strength="referencing" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="has" polymorphic="false">
            <Class class="SurfaceSupport" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="false">
            <Class class="SurfaceSupportBehavior" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="CurveSupportRefersToCurveSupportBehavior" strength="referencing" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="has" polymorphic="false">
            <Class class="CurveSupport" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="false">
            <Class class="CurveSupportBehavior" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="PointSupportRefersToVertex" strength="referencing" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="has" polymorphic="false">
            <Class class="PointSupport" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="false">
            <Class class="Vertex" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="PointSupportRefersToPointSupportBehavior" strength="referencing" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="has" polymorphic="false">
            <Class class="PointSupport" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="false">
            <Class class="PointSupportBehavior" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="Member" modifier="Abstract" displayLabel="Member" description="Abstract class for all member classes to descend from.">
        <BaseClass>StructuralAnalysisElement</BaseClass>
        <BaseClass>IStoryAssignable</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="IStructuralSurface" modifier="Abstract" displayLabel="Solid Surface" description="Element which is defined by a surface and a thickness.">
        <ECCustomAttributes>
            <IsMixin xmlns="CoreCustomAttributes.01.00.00">
                <AppliesToEntityClass>StructuralAnalysisElement</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
        <ECProperty propertyName="PlacementSurface" typeName="PlacementSurface" displayLabel="Placement Surface" description="Sheet defines area location for IStructuralSurface, the height of IStructuralSurface is defined by thickness(provided by related SurfaceType) which extrudes location area by that thickness. PlacementSurface allows to define how location area should be interpreted for extrusion - ether as start, end or center. These are the most common used cases. More flexibility is achieved by using Offset property." />
        <ECProperty propertyName="Offset" typeName="double" displayLabel="Offset" description="PlacementSurface provides only a few cases for how to interpret the location area (Sheet). Offset provides more flexibility for less common cases, where it provides additional offset along the normal of IStructuralSurface. Both PlacementSurface and Offset properties can be used at the same time." kindOfQuantity="AECU:LENGTH_SHORT" />
        <ECProperty propertyName="LayoutDirection" typeName="Point3d" displayLabel="Layout Direction" description="Used to define direction for how to place Steel Deck profiles" />
    </ECEntityClass>

    <ECRelationshipClass typeName="IStructuralSurfaceRefersToSurfaceType" strength="referencing" modifier="Sealed">
        <BaseClass>anlyt:AnalyticalElementIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="references" polymorphic="true">
            <Class class="IStructuralSurface" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="SurfaceType" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="SurfaceType" modifier="Abstract" displayLabel="Surface Type" description="Defines a Surface Type for IStructuralSurface.">
        <BaseClass>anlyt:AnalyticalType</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="SimpleSurfaceTypeRefersToMaterial" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="true">
            <Class class="SimpleSurfaceType" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="bis:PhysicalMaterial"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="SimpleSurfaceType" modifier="Sealed" displayLabel="Simple Surface Type" description="Simple Surface Type.">
        <BaseClass>SurfaceType</BaseClass>
        <ECProperty propertyName="Thickness" typeName="double" description="Thickness of IStructuralSurfaces." kindOfQuantity="AECU:LENGTH_SHORT" />
        <ECNavigationProperty propertyName="Material" relationshipName="SimpleSurfaceTypeRefersToMaterial" direction="Forward" displayLabel="Material" description="Material of all IStructuralSurfaces with this type." />
    </ECEntityClass>

    <ECRelationshipClass typeName="SteelDeckTypeRefersToProfile" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="SteelDeckType" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="prf:Profile"/>
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="SteelDeckTypeRefersToPhysicalMaterial" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="true">
            <Class class="SteelDeckType" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="bis:PhysicalMaterial"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="SteelDeckType" modifier="Sealed" displayLabel="Steel Deck Type" description="Steel Deck Type.">
        <BaseClass>SurfaceType</BaseClass>
        <ECNavigationProperty propertyName="Profile" relationshipName="SteelDeckTypeRefersToProfile" direction="Forward" displayLabel="Profile" />
        <ECNavigationProperty propertyName="Material" relationshipName="SteelDeckTypeRefersToPhysicalMaterial" direction="Forward" displayLabel="Material" />
    </ECEntityClass>

    <ECRelationshipClass typeName="CompositeDeckTypeRefersToSteelDeckType" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="CompositeDeckType" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="false">
            <Class class="SteelDeckType"/>
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="CompositeDeckTypeRefersToPhysicalMaterial" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="true">
            <Class class="CompositeDeckType" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="bis:PhysicalMaterial"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="CompositeDeckType" modifier="Sealed" displayLabel="Composite Deck Type" description="Composite Deck Type.">
        <BaseClass>SurfaceType</BaseClass>
        <ECNavigationProperty propertyName="FillingMaterial" relationshipName="CompositeDeckTypeRefersToPhysicalMaterial" direction="Forward" displayLabel="Filling Material" />
        <ECProperty propertyName="Thickness" typeName="double" displayLabel="Thickness" />
        <ECNavigationProperty propertyName="SteelDeck" relationshipName="CompositeDeckTypeRefersToSteelDeckType" direction="Forward" displayLabel="Steel Deck" />
    </ECEntityClass>

    <ECRelationshipClass typeName="TaperedSurfaceTypeRefersToPhysicalMaterial" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="true">
            <Class class="TaperedSurfaceType" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="bis:PhysicalMaterial"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="TaperedSurfaceType" modifier="Sealed" displayLabel="Tapered Surface Type" >
        <BaseClass>SurfaceType</BaseClass>
        <ECNavigationProperty propertyName="Material" relationshipName="TaperedSurfaceTypeRefersToPhysicalMaterial" direction="Forward" displayLabel="Material" />
        <ECProperty propertyName="Location1" typeName="Point2d" displayLabel="Location 1" />
        <ECProperty propertyName="Location2" typeName="Point2d" displayLabel="Location 2" />
        <ECProperty propertyName="Location3" typeName="Point2d" displayLabel="Location 3" />
        <ECProperty propertyName="Thickness1" typeName="double" displayLabel="Thickness 1" />
        <ECProperty propertyName="Thickness2" typeName="double" displayLabel="Thickness 2" />
        <ECProperty propertyName="Thickness3" typeName="double" displayLabel="Thickness 3" />
    </ECEntityClass>

    <ECEntityClass typeName="SurfaceMember" modifier="Sealed" displayLabel="Surface Member" description="Defines a Member that is located by a Sheet.">
        <BaseClass>Member</BaseClass>
        <BaseClass>ISheetOwner</BaseClass>
        <BaseClass>IStructuralSurface</BaseClass>
        <BaseClass>IDefinedSurface</BaseClass>
        <BaseClass>bis:IParentElement</BaseClass>
        <ECProperty propertyName="Classification" typeName="SurfaceMemberClassificationType" displayLabel="Classification" description="The use case for this Surface Member." />
    </ECEntityClass>

    <ECEntityClass typeName="SurfaceMemberRegion" modifier="Abstract" displayLabel="Surface Member Region" description="Defines a region of a SurfaceMember that has different behavior (or is an opening).">
        <BaseClass>StructuralAnalysisElement</BaseClass>
        <BaseClass>ISheetOwner</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="SurfaceMemberRegionOwnsLocationSheet" strength="embedding" modifier="Sealed" description="A relationship that indicates that a SurfaceMemberRegion owns a Sheet.">
        <BaseClass>ISheetOwnerOwnsSheet</BaseClass>
        <Source multiplicity="(0..1)" roleLabel="owns" polymorphic="false">
            <Class class="SurfaceMemberRegion"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is owned by" polymorphic="false">
            <Class class="Sheet"/>
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="SurfaceMemberOwnsRegions" strength="embedding" strengthDirection="Forward" modifier="Sealed">
        <BaseClass>bis:ElementOwnsChildElements</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="references" polymorphic="false">
            <Class class="SurfaceMember" />
        </Source>
        <Target multiplicity="(0..*)" roleLabel="referenced by" polymorphic="true">
            <Class class="SurfaceMemberRegion" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="SurfaceMemberOwnsSurfaceMemberBehaviorAspect" modifier="Sealed" strength="embedding">
        <BaseClass>bis:ElementOwnsUniqueAspect</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="false">
            <Class class="SurfaceMember" />
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is owned by" polymorphic="true">
            <Class class="SurfaceMemberBehaviorAspect" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="MemberOwnsMemberBehaviorAspect" modifier="Sealed" strength="embedding">
        <BaseClass>bis:ElementOwnsUniqueAspect</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="true">
            <Class class="Member" />
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is owned by" polymorphic="true">
            <Class class="MemberBehaviorAspect" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="SurfaceMemberModifier" modifier="Sealed" displayLabel="Surface Member Modifier" description="Defines a solid region of a SurfaceMember that has different behavior.">
        <BaseClass>SurfaceMemberRegion</BaseClass>
        <BaseClass>IStructuralSurface</BaseClass>
        <ECProperty propertyName="Priority" typeName="int" displayLabel="Priority" description="Defines priority of SurfaceMemberModifier. Higher the number - higher the priority." />
    </ECEntityClass>

    <ECEntityClass typeName="SurfaceMemberOpening" modifier="Sealed" displayLabel="Surface Member Opening" description="Defines a void region of a SurfaceMember.">
        <BaseClass>SurfaceMemberRegion</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="CurveMember" modifier="Sealed" displayLabel="Curve Member" description="Defines a Member that is located along a Path, and whose behavior is defined along that Path.">
        <BaseClass>Member</BaseClass>
        <BaseClass>IWireOwner</BaseClass>
        <BaseClass>IDefinedCurve</BaseClass>
        <ECProperty propertyName="PlacementPoint" typeName="string" displayLabel="Placement Point" description="Point at which Curve Member's topology intersects with Profile." />
        <ECProperty propertyName="Classification" typeName="CurveMemberClassificationType" displayLabel="Classification" description="The use case for this Curve Member." />
        <ECProperty propertyName="StartRigidZoneLength" typeName="double" displayLabel="Start Rigid Zone Length" description="Defines the length of Rigid Zone at the start of Curve Member. Rigid zone specifies that the Curve Member is immune deformation at that zone. Common case would be where curve member overlaps with other member, overlapping area would be define das rigid zone." kindOfQuantity="AECU:LENGTH_SHORT" />
        <ECProperty propertyName="EndRigidZoneLength" typeName="double" displayLabel="End Rigid Zone Length" description="Defines the length of Rigid Zone at the end of Curve Member. Rigid zone specifies that the Curve Member is immune deformation at that zone. Common case would be where curve member overlaps with other member, overlapping area would be define das rigid zone." kindOfQuantity="AECU:LENGTH_SHORT" />
        <ECProperty propertyName="Offset" typeName="point2d" displayLabel="Offset" description="2d offset defined in local coordinate system, where first coordinate variable shows offset along bi-normal and second along Orientation." kindOfQuantity="AECU:LENGTH_SHORT" />
        <ECProperty propertyName="IsProfileMirrored" typeName="boolean" displayLabel="Is Profile mirrored" description="Specifies if profile should be mirrored about orientation." />
    </ECEntityClass>

    <ECRelationshipClass typeName="IWireOwnerOwnsLocationWire" strength="embedding" modifier="Sealed" description="A relationship that indicates that a IWireOwner owns Wire to define location.">
        <BaseClass>IWireOwnerOwnsWire</BaseClass>
        <Source multiplicity="(0..1)" roleLabel="owns" polymorphic="true">
            <Class class="IWireOwner"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is owned by" polymorphic="false">
            <Class class="Wire"/>
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="CurveMemberIsOfCurveMemberType" strength="referencing" modifier="Sealed">
        <BaseClass>anlyt:AnalyticalElementIsOfType</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="is of" polymorphic="false">
            <Class class="CurveMember" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="defines" polymorphic="true">
            <Class class="CurveMemberType" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="CurveMemberOwnsCurveMemberBehaviorAspect" modifier="Sealed" strength="embedding">
        <BaseClass>bis:ElementOwnsUniqueAspect</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="false">
            <Class class="CurveMember" />
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is owned by" polymorphic="true">
            <Class class="CurveMemberBehaviorAspect" />
        </Target>
    </ECRelationshipClass>

    <!-- <ECRelationshipClass typeName="CurveMemberOwnsStiffnessBehaviorAspect" modifier="Sealed" strength="embedding">
        <BaseClass>bis:ElementOwnsUniqueAspect</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="true">
            <Class class="CurveMember" />
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is owned by" polymorphic="false">
            <Class class="StiffnessBehaviorAspect" />
        </Target>
    </ECRelationshipClass> -->

    <!-- CurveMemberType -->
    <ECEntityClass typeName="CurveMemberType" modifier="Abstract" displayLabel="Curve Member Type" description="Type grouping Curve Members." >
        <BaseClass>anlyt:AnalyticalType</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="SingleCurveMemberType" modifier="Abstract" displayLabel="Single Curve Member Type">
        <BaseClass>CurveMemberType</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="MaterialProfileType" modifier="Sealed" displayLabel="Material Profile Type" description="Curve Member Type with shared Material and Profile." >
        <BaseClass>SingleCurveMemberType</BaseClass>
        <ECNavigationProperty propertyName="MaterialProfile" relationshipName="MaterialProfileTypeHasMaterialProfile" direction="Forward" displayLabel="Material Profile" description="Material Profile." />
    </ECEntityClass>

    <ECRelationshipClass typeName="MaterialProfileTypeHasMaterialProfile" strength="referencing" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="has" polymorphic="true">
            <Class class="MaterialProfileType" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="MaterialProfileDefinition" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="SteelJoistType" modifier="Sealed" displayLabel="Steel Joist Type">
        <BaseClass>CurveMemberType</BaseClass>
        <ECProperty propertyName="Depth" typeName="double" displayLabel="Depth" />
        <ECNavigationProperty propertyName="Material" relationshipName="SteelJoistTypeRefersToMaterial" direction="Forward" description="Referenced PhysicalMaterial." />
    </ECEntityClass>

    <ECRelationshipClass typeName="SteelJoistTypeRefersToMaterial" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="true">
            <Class class="SteelJoistType" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="bis:PhysicalMaterial"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="MaterialProfileDefinition" modifier="Abstract" displayLabel="Material Profile Definition" description="Base class defining an element that pairs Profiles and PhysicalMaterials.">
        <BaseClass>bis:DefinitionElement</BaseClass>
        <ECProperty propertyName="Name" typeName="string" description="Name of the MaterialProfile used for identification." />
        <ECProperty propertyName="Description" typeName="string" description="Description of the MaterialProfile." />
        <ECProperty propertyName="Category" typeName="MaterialProfileCategoryType" description="Role of the MaterialProfile." />
        <ECNavigationProperty propertyName="Material" relationshipName="MaterialProfileRefersToMaterial" direction="Forward" description="Referenced PhysicalMaterial." />
    </ECEntityClass>

    <ECEnumeration typeName="MaterialProfileCategoryType" backingTypeName="int" isStrict="true" displayLabel="Material Profile Category Type" description="Role of the MaterialProfile.">
        <ECEnumerator value="0" name="LoadBearing" displayLabel="Load Bearing" />
        <!-- <ECEnumerator value="1" name="Insulation" displayLabel="Insulation" />
        <ECEnumerator value="2" name="Finish" displayLabel="Finish" /> -->
    </ECEnumeration>

    <ECEntityClass typeName="MaterialProfile" modifier="Sealed" displayLabel="Material Profile" description="Single pair of Profile and PhysicalMaterial.">
        <BaseClass>MaterialProfileDefinition</BaseClass>
        <ECNavigationProperty propertyName="Profile" relationshipName="MaterialProfileRefersToProfile" direction="Forward" description="Referenced Profile." />
        <ECProperty propertyName="Category" typeName="MaterialProfileCategoryType" description="Role of the MaterialProfile." />
        <ECNavigationProperty propertyName="Material" relationshipName="MaterialProfileRefersToMaterial" direction="Forward" description="Referenced PhysicalMaterial." />
    </ECEntityClass>

    <ECRelationshipClass typeName="MaterialProfileRefersToMaterial" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="true">
            <Class class="MaterialProfileDefinition" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="bis:PhysicalMaterial"/>
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="MaterialProfileRefersToProfile" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="MaterialProfile" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="prf:Profile"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="TaperedMaterialProfile" modifier="Sealed" displayLabel="Tapered Material Profile" description="Defines a CurveMember with a linearly varying Profile.">
        <BaseClass>MaterialProfileDefinition</BaseClass>
        <ECNavigationProperty propertyName="StartProfile" relationshipName="TaperedMaterialProfileRefersToStartProfile" direction="Forward" description="Profile at the Start of CurveMember." />
        <ECNavigationProperty propertyName="EndProfile" relationshipName="TaperedMaterialProfileRefersToEndProfile" direction="Forward" description="Profile at the End of CurveMember." />
    </ECEntityClass>

    <ECRelationshipClass typeName="TaperedMaterialProfileRefersToStartProfile" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="TaperedMaterialProfile" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="prf:Profile"/>
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="TaperedMaterialProfileRefersToEndProfile" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="TaperedMaterialProfile" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="prf:Profile"/>
        </Target>
    </ECRelationshipClass>

    <!-- Load Classes -->
    <ECEnumeration typeName="CoordinateSystem" backingTypeName="int" isStrict="true" description="Used for setting Coordinate System (Load)">
        <ECEnumerator value="0" name="Global" displayLabel="Global" description="Load is defined in global coordinate system."/>
        <ECEnumerator value="1" name="Local" displayLabel="Local" description="Load is defined in host's local coordinate system."/>
    </ECEnumeration>


    <ECEntityClass typeName="Load" modifier="Abstract" displayLabel="Load" description="Load which affects analysis members.">
        <BaseClass>StructuralAnalysisElement</BaseClass>
        <ECProperty propertyName="CoordinateSystem" typeName="CoordinateSystem" displayLabel="Coordinate System" description="Local coordinate system of the Load." />
    </ECEntityClass>

    <ECEntityClass typeName="PointLoad" modifier="Sealed" displayLabel="Point Load" description="Load which is applied at a point.">
        <BaseClass>Load</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="PointLoadOwnsRelativePointLocationAspect" strength="embedding" modifier="Sealed">
        <BaseClass>bis:ElementOwnsUniqueAspect</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="false">
            <Class class="PointLoad"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is owned by" polymorphic="true">
            <Class class="RelativePointLocationAspect" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="CurveLoad" modifier="Sealed" displayLabel="Curve Load" description="Load which is applied along the curve.">
        <BaseClass>Load</BaseClass>
    </ECEntityClass>

     <ECRelationshipClass typeName="CurveLoadOwnsRelativeCurveLocationAspect" strength="embedding" modifier="Sealed">
        <BaseClass>bis:ElementOwnsUniqueAspect</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="false">
            <Class class="CurveLoad"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is owned by" polymorphic="true">
            <Class class="RelativeCurveLocationAspect" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="SurfaceLoad" modifier="Sealed" displayLabel="Surface Load" description="A Load that is applied over a surface.">
        <BaseClass>Load</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="SurfaceLoadOwnsRelativeSurfaceLocationAspect" strength="embedding" modifier="Sealed">
        <BaseClass>bis:ElementOwnsUniqueAspect</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="false">
            <Class class="SurfaceLoad"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is owned by" polymorphic="true">
            <Class class="RelativeSurfaceLocationAspect" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="RelativeLocationAspect" modifier="Abstract" displayLabel="Relative Location Aspect" description="Abstract class to define a relative location.">
        <BaseClass>bis:ElementUniqueAspect</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="RelativePointLocationAspect" modifier="Abstract" displayLabel="Relative Point Location Aspect" description="Point relative to other elements.">
        <BaseClass>RelativeLocationAspect</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="PointRelativeToPointAspect" modifier="Sealed" displayLabel="Point Relative to Point Aspect" description="Point relative to point.">
        <BaseClass>RelativePointLocationAspect</BaseClass>
        <ECNavigationProperty propertyName="ReferencePoint" relationshipName="PointRelativeToPointAspectRefersToIDefinedPoint" direction="Forward" displayLabel="Reference Point" />
    </ECEntityClass>

    <ECRelationshipClass typeName="PointRelativeToPointAspectRefersToIDefinedPoint" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="PointRelativeToPointAspect" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="referenced by" polymorphic="true">
            <Class class="IDefinedPoint" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="PointRelativeToCurveAspect" modifier="Sealed" displayLabel="Point Relative to Curve Location Aspect" description="Point relative to curve.">
        <BaseClass>RelativePointLocationAspect</BaseClass>
        <ECProperty propertyName="Location" typeName="double" displayLabel="Location" description="Fractional parameter (0.0 - 1.0) on a curve defining a point." />
        <ECProperty propertyName="Offset" typeName="Point2d" displayLabel="Offset" description="Offset in a plane defined by normal and bi-normal of location curve." kindOfQuantity="AECU:LENGTH_SHORT" />
        <ECProperty propertyName="PlacementPoint" typeName="PlacementPoint" displayLabel="Placement Point" description="Placement Point on a Host where load is located. Should only be used with host that have a non point profile (CurveMember). This property should be set to null for hosts that do not have a 'real world' profile - CurveSupport." />
        <ECNavigationProperty propertyName="ReferenceCurve" relationshipName="PointRelativeToCurveAspectRefersToIDefinedCurve" direction="Forward" displayLabel="Reference Curve" />
    </ECEntityClass>

    <ECRelationshipClass typeName="PointRelativeToCurveAspectRefersToIDefinedCurve" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="PointRelativeToCurveAspect" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="referenced by" polymorphic="true">
            <Class class="IDefinedCurve" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="PointRelativeToSurfaceAspect" modifier="Sealed" displayLabel="Point Relative to Surface Location Aspect" description="Point relative to surface.">
        <BaseClass>RelativePointLocationAspect</BaseClass>
        <ECProperty propertyName="Location" typeName="Point2d" displayLabel="Location" description="Location is defined in 2d coordinate system defined by host r and s axis."/>
        <ECProperty propertyName="Offset" typeName="double" displayLabel="Offset" kindOfQuantity="AECU:LENGTH_SHORT" />
        <ECProperty propertyName="PlacementSurface" typeName="PlacementSurface" displayLabel="Surface Alignment" description="Defines a Alignment on Surface Host for this load. For 0-thickness hosts (SurfaceSupport) this should be set to null."/>
        <ECNavigationProperty propertyName="ReferenceSurface" relationshipName="PointRelativeToSurfaceAspectRefersToIDefinedSurface" direction="Forward" displayLabel="Reference Surface" />
    </ECEntityClass>

    <ECRelationshipClass typeName="PointRelativeToSurfaceAspectRefersToIDefinedSurface" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="PointRelativeToSurfaceAspect" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="referenced by" polymorphic="true">
            <Class class="IDefinedSurface" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="RelativeCurveLocationAspect" modifier="Abstract" displayLabel="Relative Curve Location Aspect" description="Curve relative to other elements.">
        <BaseClass>RelativeLocationAspect</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="CurveRelativeToCurveAspect" modifier="Sealed" displayLabel="Curve Relative to Curve Aspect" description="Defines location for curve load in host curve.">
        <BaseClass>RelativeCurveLocationAspect</BaseClass>
        <ECProperty propertyName="Start" typeName="double" displayLabel="Start of range" description="Fractional parameter on a host curve ('0.0' - start of the curve, 1.0 - end)." />
        <ECProperty propertyName="End" typeName="double" displayLabel="End of range" description="Fractional parameter on a host curve. ('0.0' - start of the curve, 1.0 - end)" />
        <ECProperty propertyName="Offset" typeName="Point2d" displayLabel="Offset" description="Offset in a plane, defined by a host curve's normal and bi-normal." kindOfQuantity="AECU:LENGTH_SHORT" />
        <ECProperty propertyName="PlacementPoint" typeName="PlacementPoint" displayLabel="Placement Point" description="Placement point on a profile that is associated with the host curve. PlacementPoint should be only used with host that have non point profile (CurveMember). This property should be set to null for hosts that do not have a 'real world' profile - CurveSupport" />
        <ECNavigationProperty propertyName="ReferenceCurve" relationshipName="CurveRelativeToCurveAspectRefersToIDefineCurve" direction="Forward" displayLabel="Reference Curve" description="Reference/Host curve in which curve load is located." />
    </ECEntityClass>

    <ECRelationshipClass typeName="CurveRelativeToCurveAspectRefersToIDefineCurve" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="CurveRelativeToCurveAspect" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="referenced by" polymorphic="true">
            <Class class="IDefinedCurve" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="CurveRelativeToSurfaceAspect" modifier="Sealed" displayLabel="Curve Relative to Surface Location Aspect" description="Curve relative to surface.">
        <BaseClass>RelativeCurveLocationAspect</BaseClass>
        <ECProperty propertyName="Location" typeName="Bentley.Geometry.Common.IGeometry" displayLabel="Location" description="Curve which describes load location on a host surface."/>
        <ECProperty propertyName="Offset" typeName="double" displayLabel="Offset" description="Distance from the surface, along the normal. Can be both positive and negative." kindOfQuantity="AECU:LENGTH_SHORT" />
        <ECProperty propertyName="PlacementSurface" typeName="PlacementSurface" displayLabel="Placement Surface" description="Placement Surface at which load is applied. For 0-thickness hosts (SurfaceSupport) this should be set to null."/>
        <ECNavigationProperty propertyName="ReferenceSurface" relationshipName="CurveRelativeToSurfaceAspectRefersToIDefinedSurface" direction="Forward" displayLabel="Reference Surface" description="Host surface in which Curve Load is located." />
    </ECEntityClass>

    <ECRelationshipClass typeName="CurveRelativeToSurfaceAspectRefersToIDefinedSurface" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="CurveRelativeToSurfaceAspect" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="referenced by" polymorphic="true">
            <Class class="IDefinedSurface" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="RelativeSurfaceLocationAspect" modifier="Abstract" displayLabel="Relative Surface Location Aspect" description="Surface relative to other elements.">
        <BaseClass>RelativeLocationAspect</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="SurfaceRelativeToSurfaceAspect" modifier="Sealed" displayLabel="Surface Relative to Surface Location Aspect" description="Surface relative to surface.">
        <BaseClass>RelativeSurfaceLocationAspect</BaseClass>
        <ECProperty propertyName="Location" typeName="Bentley.Geometry.Common.IGeometry" displayLabel="Location" />
        <ECProperty propertyName="Offset" typeName="double" displayLabel="Offset" kindOfQuantity="AECU:LENGTH_SHORT" />
        <ECProperty propertyName="PlacementSurface" typeName="PlacementSurface" displayLabel="Placement Surface" description="Placement Surface at which load is applied. For 0-thickness hosts (SurfaceSupport) this should be set to null." />
        <ECNavigationProperty propertyName="ReferenceSurface" relationshipName="SurfaceRelativeToSurfaceAspectRefersToIDefinedSurface" direction="Forward" displayLabel="Reference Surface" />
    </ECEntityClass>

    <ECRelationshipClass typeName="SurfaceRelativeToSurfaceAspectRefersToIDefinedSurface" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="SurfaceRelativeToSurfaceAspect" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="referenced by" polymorphic="true">
            <Class class="IDefinedSurface" />
        </Target>
    </ECRelationshipClass>

    <!-- Mixins -->
    <ECEntityClass typeName="IDefinedPoint" modifier="Abstract" displayLabel="Point Location definition" description="An Element that directly or indirectly defines a point in 3D space.">
        <ECCustomAttributes>
            <IsMixin xmlns="CoreCustomAttributes.01.00.00">
                <AppliesToEntityClass>bis:Element</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="IDefinedCurve" modifier="Abstract" displayLabel="Curve Location definition" description="An Element that directly or indirectly defines a curve location and a clear coordinate system with the z-axis along the curve. The Element may have cardinal points defined; if not all the cardinal points should be considered to lie on the z-axis.">
        <ECCustomAttributes>
            <IsMixin xmlns="CoreCustomAttributes.01.00.00">
                <AppliesToEntityClass>bis:Element</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
        <ECProperty propertyName="Orientation" typeName="Point3d" displayLabel="Orientation" description="Orientation (normal) vector of the curve." />
    </ECEntityClass>

    <ECEntityClass typeName="IDefinedSurface" modifier="Abstract" displayLabel="Surface Location definition" description="An Element that directly or indirectly defines a surface location and a clear coordinate system with the x and y axes in the surface. The Element may have a top, bottom and center defined; if not, the top and bottom and center should be considered to lie on the surface.">
        <ECCustomAttributes>
            <IsMixin xmlns="CoreCustomAttributes.01.00.00">
                <AppliesToEntityClass>bis:Element</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
        <ECProperty propertyName="SurfaceOrigin" typeName="Point3d" displayLabel="Surface Origin" description="Point on the surface defining the start of its local coordinate system." kindOfQuantity="AECU:LENGTH" />
        <ECProperty propertyName="RAxis" typeName="Point3d" displayLabel="RAxis" description="First vector defining the local coordinate system. This vector should be from tangent plane at the origin point of the surface." />
    </ECEntityClass>

    <!-- Load groups -->
    <ECEnumeration typeName="LoadType" backingTypeName="int" isStrict="true" description="Used for specifying LoadType in LoadContainer.">
        <ECEnumerator value="0" name="Unset" displayLabel="Unset" description="Load type not set." />
        <ECEnumerator value="1" name="Other" displayLabel="Other" description="Load type is not specified by other available types." />
        <ECEnumerator value="2" name="Blast" displayLabel="Blast" description="Blast wave forces due to explosions." />
        <ECEnumerator value="3" name="DeadUnspecified" displayLabel="Dead Unspecified" description="Load which does not change over time and its' source" />
        <ECEnumerator value="4" name="DeadStructure" displayLabel="Dead Structure" description="Dead load from structure self-weight." />
        <ECEnumerator value="5" name="DeadSuperimposed" displayLabel="Dead Superimposed" description="Dead load from other-than structure self-weight." />
        <ECEnumerator value="6" name="DeadConstruction" displayLabel="Dead Construction" description="Dead load from other-than-structure in place only during construction." />
        <ECEnumerator value="7" name="EarthPressureUnspecified" displayLabel="Earth Pressure Unspecified" description="Earth pressure at some unspecified design level." />
        <ECEnumerator value="8" name="EarthPressureService" displayLabel="Earth Pressure Service" description="Loads due to earth pressure at service limit level." />
        <ECEnumerator value="9" name="EarthPressureUltimate" displayLabel="Earth Pressure Ultimate" description="Load caused by lateral pressure of soil, usually affecting a retaining wall." />
        <ECEnumerator value="10" name="Equipment" displayLabel="Equipment" description="Loads due to earth pressure at ultimate limit level."/>
        <ECEnumerator value="11" name="FloorUnspecified" displayLabel="Floor Unspecified" description="Floor loads with out further specification." />
        <ECEnumerator value="12" name="FloorConstruction" displayLabel="Floor Construction" description="Floor loads in place only during construction." />
        <ECEnumerator value="13" name="FloorResidential" displayLabel="Floor Residential" description="Floor loads due to residential use." />
        <ECEnumerator value="14" name="FloorOffice" displayLabel="Floor Office" description="Floor loads due to office use." />
        <ECEnumerator value="15" name="FloorAssembly" displayLabel="Floor Assembly" description="Floor loads due to assembly use." />
        <ECEnumerator value="16" name="FloorStorage" displayLabel="Floor Storage" description="Floor loads due to storage use." />
        <ECEnumerator value="17" name="FloorRetail" displayLabel="Floor Retail" description="Floor loads due to retail/shopping use." />
        <ECEnumerator value="18" name="FluidUnspecified" displayLabel="Fluid Unspecified" description="Loads due to fluids, but not further specified." />
        <ECEnumerator value="19" name="FluidContained" displayLabel="Fluid Contained" description="Fluid (of known density) contained by walls of known height (such as a water or oil tank)." />
        <ECEnumerator value="20" name="FluidUncontained" displayLabel="Fluid Uncontained" description="Fluid of unknown density or of unknown height (such as a hydrostatic flood)." />
        <ECEnumerator value="21" name="GroundWaterPressure" displayLabel="Ground Water Pressure" description="Loads due to ground water pressure." />
        <ECEnumerator value="22" name="Hydrodynamic" displayLabel="Hydrodynamic" description="Loads due to moving fluids." />
        <ECEnumerator value="23" name="Hydrostatic" displayLabel="Hydrostatic" description="Loads due to hydrostatic pressure." />
        <ECEnumerator value="24" name="Ice" displayLabel="Ice" description="Atmospheric Ice (rain freezing upon structure, etc.)" />
        <ECEnumerator value="25" name="MechanicalVibration" displayLabel="Mechanical Vibration" description="Loads due to oscillating or rotating equipment." />
        <ECEnumerator value="26" name="Notional" displayLabel="Notional" description="Lateral loads due to vertical loads that account for the effects of initial imperfections." />
        <ECEnumerator value="27" name="ParkingUnspecified" displayLabel="Parking Unspecified" description="Floor loads due to parking use." />
        <ECEnumerator value="28" name="ParkingLight" displayLabel="Parking Light" description="Floor loads due to light vehicle parking use." />
        <ECEnumerator value="29" name="ParkingHeavy" displayLabel="Parking Heavy" description="Floor loads due to heavy vehicle parking use." />
        <ECEnumerator value="30" name="PostTensioning" displayLabel="Post Tensioning" description="Loads due to application of post-tensioning." />
        <ECEnumerator value="31" name="PostTensioningRestraint" displayLabel="Post Tensioning Restraint" description="Theoretical loads due to restraint of post-tensioning." />
        <ECEnumerator value="32" name="Hyperstatic" displayLabel="Hyperstatic" description="Theoretical loads due to restraint of post-tensioning." />
        <ECEnumerator value="33" name="RoofUnspecified" displayLabel="Roof Unspecified" description="Roof loads without further specification." />
        <ECEnumerator value="34" name="RoofAccess" displayLabel="Roof Access" description="Roof loads due to roof inspection, repair etc." />
        <ECEnumerator value="35" name="RoofRain" displayLabel="Roof Rain" description="Roof loads due to rainwater ponding." />
        <ECEnumerator value="36" name="RoofSnowUnspecified" displayLabel="Roof Snow Unspecified" description="Roof loads due to snow with no further specification." />
        <ECEnumerator value="37" name="RoofSnowUniform" displayLabel="Roof Snow Uniform" description="Roof loads due to uniform snow loads. Note that this is typically used as an alternate to RoofSnowDrift." />
        <ECEnumerator value="38" name="RoofSnowDrift" displayLabel="Roof Snow Drift" description="Roof loads due to drifted snow loads Note that this is typically used as an alternate to RoofSnowUniform." />
        <ECEnumerator value="39" name="SeismicUnspecified" displayLabel="Seismic Unspecified" description="Seismic loads at some unspecified loading level." />
        <ECEnumerator value="40" name="SeismicService" displayLabel="Seismic Service" description="Seismic loads at service levels." />
        <ECEnumerator value="41" name="SeismicUltimate" displayLabel="Seismic Ultimate" description="Seismic loads at service levels." />
        <ECEnumerator value="42" name="Settlement" displayLabel="Settlement" description="Loads due to support settlement." />
        <ECEnumerator value="43" name="Shrinkage" displayLabel="Shrinkage" description="Loads due to member shrinkage." />
        <ECEnumerator value="44" name="Thermal" displayLabel="Thermal" description="Loads due to changing temperature or temperature differential." />
        <ECEnumerator value="45" name="TimeHistory" displayLabel="Time History" description="Loads due to the non-linear application of forces over time." />
        <ECEnumerator value="46" name="WindUnspecified" displayLabel="Wind Unspecified" description="Wind loads at some unspecified design level." />
        <ECEnumerator value="47" name="WindService" displayLabel="Wind Service" description="Wind loads at service levels." />
        <ECEnumerator value="48" name="WindUltimate" displayLabel="Wind Ultimate" description="Wind loads at ultimate levels." />
    </ECEnumeration>

    <ECEnumeration typeName="LoadCombinationType" backingTypeName="int" isStrict="true" description="Specifies the method for combining loads into a single group.">
        <ECEnumerator value="0" name="Normal" displayLabel="Normal" />
        <ECEnumerator value="1" name="ABS" displayLabel="ABS" description="Absolute Method." />
        <ECEnumerator value="2" name="SRSS" displayLabel="SRSS" description="Square Root of the Sum of the Squares Method." />
    </ECEnumeration>

    <ECEntityClass typeName="LoadContainer" modifier="Abstract" displayLabel="Load Container" description="A collection of loads.">
        <BaseClass>StructuralAnalysisElement</BaseClass>
        <BaseClass>bis:IParentElement</BaseClass>
        <ECProperty propertyName="LoadType" typeName="LoadType" description="Load Type." />
        <ECProperty propertyName="SelfWeightVector" typeName="Point3d" description="Self Weight Vector." />
    </ECEntityClass>

    <ECRelationshipClass typeName="LoadContainerOwnsLoads" strength="embedding" modifier="Sealed">
        <BaseClass>bis:ElementOwnsChildElements</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="true">
            <Class class="LoadContainer"/>
        </Source>
        <Target multiplicity="(0..*)" roleLabel="is owned by" polymorphic="true">
            <Class class="Load" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="LoadGroup" modifier="Sealed" displayLabel="Load Group" description="Collection of loads only for grouping purposes.">
        <BaseClass>LoadContainer</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="ILoadCondition" modifier="Abstract" displayLabel="Load Condition" description="A load case or a combination of multiple factored load containers used for analysis.">
        <ECCustomAttributes>
            <IsMixin xmlns="CoreCustomAttributes.01.00.00">
                <AppliesToEntityClass>bis:Element</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="LoadCase" modifier="Sealed" displayLabel="Load Case" description="Collection of loads that act over the structure as a case.">
        <BaseClass>LoadContainer</BaseClass>
        <BaseClass>ILoadCondition</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="LoadCaseOwnsFactoredLoadGroupAspects" strength="embedding" modifier="Sealed">
        <BaseClass>bis:ElementOwnsMultiAspects</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="false">
            <Class class="LoadCase"/>
        </Source>
        <Target multiplicity="(0..*)" roleLabel="is owned by" polymorphic="false">
            <Class class="FactoredLoadGroupAspect" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="LoadCombination" modifier="Sealed" displayLabel="Load Combination (Deprecated)" description="DEPRECATED">
        <ECCustomAttributes>
            <Deprecated xmlns="CoreCustomAttributes.1.0.3">
                <Description>Instances of LoadCombination are no longer created. LoadCombinationInformation should be used instead.</Description>
            </Deprecated>
        </ECCustomAttributes>
        <BaseClass>StructuralAnalysisElement</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="LoadCombinationInformation" modifier="Sealed" displayLabel="Load Combination" description="Element that groups a set of load cases that are applied to the structure simultaneously or sequentially">
        <BaseClass>bis:InformationRecordElement</BaseClass>
        <BaseClass>ILoadCondition</BaseClass>
        <ECProperty propertyName="SrssFactor" typeName="double" description="A factor to multiply the product of SRSS added Load Conditions." />
    </ECEntityClass>

    <ECRelationshipClass typeName="LoadCombinationOwnsFactoredLoadConditionAspects" strength="embedding" modifier="Sealed">
        <ECCustomAttributes>
            <Deprecated xmlns="CoreCustomAttributes.1.0.3">
                <Description>Instances of LoadCombination are no longer created. LoadCombinationInformation should be used instead.</Description>
            </Deprecated>
        </ECCustomAttributes>
        <BaseClass>bis:ElementOwnsMultiAspects</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="false">
            <Class class="LoadCombination"/>
        </Source>
        <Target multiplicity="(0..*)" roleLabel="is owned by" polymorphic="true">
            <Class class="FactoredLoadConditionAspect" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="LoadCombinationOwnsFactoredLoadConditions" strength="embedding" modifier="Sealed">
        <BaseClass>bis:ElementOwnsChildElements</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="false">
            <Class class="LoadCombinationInformation"/>
        </Source>
        <Target multiplicity="(0..*)" roleLabel="is owned by" polymorphic="true">
            <Class class="FactoredLoadCondition" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="FactoredLoadCondition" modifier="Abstract" displayLabel="Factored Load Condition">
        <BaseClass>bis:InformationRecordElement</BaseClass>
        <ECProperty propertyName="Factor" typeName="double" description="Factor to be applied to the group." />
        <ECProperty propertyName="LoadCombinationType" typeName="LoadCombinationType" description="Type of load combination." />
    </ECEntityClass>

    <ECEntityClass typeName="FactoredLoadCase" modifier="Sealed" displayLabel="Factored Load Case">
        <BaseClass>FactoredLoadCondition</BaseClass>
        <ECNavigationProperty propertyName="LoadCase" relationshipName="FactoredLoadCaseRefersToLoadCase" direction="Forward" displayLabel="Load Case" description="Load Case."/>
    </ECEntityClass>

    <ECRelationshipClass typeName="FactoredLoadCaseRefersToLoadCase" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="FactoredLoadCase"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="false">
            <Class class="LoadCase" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="FactoredLoadCombination" modifier="Sealed" displayLabel="Factored Load Combination">
        <BaseClass>FactoredLoadCondition</BaseClass>
        <ECNavigationProperty propertyName="LoadCombination" relationshipName="FactoredLoadCombinationRefersToLoadCombination" direction="Forward" displayLabel="Load Combination" description="Load Combination."/>
    </ECEntityClass>

    <ECRelationshipClass typeName="FactoredLoadCombinationRefersToLoadCombination" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="FactoredLoadCombination"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="false">
            <Class class="LoadCombination" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="FactoredLoadGroupAspect" modifier="Sealed" displayLabel="Factored Load Group Aspect" description="Adds a factor to a specified LoadGroup.">
        <BaseClass>bis:ElementMultiAspect</BaseClass>
        <ECProperty propertyName="Factor" typeName="double" description="Factor to be applied to the group." />
        <ECNavigationProperty propertyName="LoadGroup" relationshipName="FactoredLoadGroupAspectRefersToLoadGroup" direction="Forward" displayLabel="Load Group" description="Load Group."/>
    </ECEntityClass>

    <ECRelationshipClass typeName="FactoredLoadGroupAspectRefersToLoadGroup" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="FactoredLoadGroupAspect"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="false">
            <Class class="LoadGroup" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="FactoredLoadConditionAspect" modifier="Abstract" displayLabel="Factored Load Condition Aspect" description="DEPRECATED">
        <BaseClass>bis:ElementMultiAspect</BaseClass>
        <ECCustomAttributes>
            <Deprecated xmlns="CoreCustomAttributes.1.0.3">
                <Description>Instances of LoadCombination and it's aspects are no longer created. LoadCombinationInformation should be used instead.</Description>
            </Deprecated>
        </ECCustomAttributes>
        <ECProperty propertyName="Factor" typeName="double" description="Factor to be applied to the group." />
        <ECProperty propertyName="LoadCombinationType" typeName="LoadCombinationType" description="Type of load combination." />
    </ECEntityClass>

    <ECEntityClass typeName="FactoredLoadCaseAspect" modifier="Sealed" displayLabel="Factored Load Case Aspect" description="DEPRECATED">
        <ECCustomAttributes>
            <Deprecated xmlns="CoreCustomAttributes.1.0.3">
                <Description>Instances of LoadCombination and it's aspects are no longer created. LoadCombinationInformation should be used instead.</Description>
            </Deprecated>
        </ECCustomAttributes>
        <BaseClass>FactoredLoadConditionAspect</BaseClass>
        <ECNavigationProperty propertyName="LoadCase" relationshipName="FactoredLoadCaseAspectRefersToLoadCase" direction="Forward" displayLabel="Load Case" description="Load Case."/>
    </ECEntityClass>

    <ECRelationshipClass typeName="FactoredLoadCaseAspectRefersToLoadCase" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <ECCustomAttributes>
            <Deprecated xmlns="CoreCustomAttributes.1.0.3">
                <Description>Instances of LoadCombination and it's aspects are no longer created. LoadCombinationInformation should be used instead.</Description>
            </Deprecated>
        </ECCustomAttributes>
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="FactoredLoadCaseAspect"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="false">
            <Class class="LoadCase" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="FactoredLoadCombinationAspect" modifier="Sealed" displayLabel="Factored Load Combination Aspect" description="DEPRECATED">
        <BaseClass>FactoredLoadConditionAspect</BaseClass>
        <ECCustomAttributes>
            <Deprecated xmlns="CoreCustomAttributes.1.0.3">
                <Description>Instances of LoadCombination and it's aspects are no longer created. LoadCombinationInformation should be used instead.</Description>
            </Deprecated>
        </ECCustomAttributes>
        <ECNavigationProperty propertyName="LoadCombination" relationshipName="FactoredLoadCombinationAspectRefersToLoadCombination" direction="Forward" displayLabel="Load Combination" description="Load Combination."/>
    </ECEntityClass>

    <ECRelationshipClass typeName="FactoredLoadCombinationAspectRefersToLoadCombination" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <ECCustomAttributes>
            <Deprecated xmlns="CoreCustomAttributes.1.0.3">
                <Description>Instances of LoadCombination and it's aspects are no longer created. LoadCombinationInformation should be used instead.</Description>
            </Deprecated>
        </ECCustomAttributes>
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="FactoredLoadCombinationAspect"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="false">
            <Class class="LoadCombination" />
        </Target>
    </ECRelationshipClass>

    <!-- Load Value Aspect Classes -->
    <!-- TODO: This is not complete according to the IFC documentation -->
    <ECEnumeration typeName="CurveVariationType" backingTypeName="int"  isStrict="true" description="Enumeration of Curve Load Variation types.">
        <ECEnumerator value="0" name="Linear" displayLabel="Linear" description="Forces at curve points vary linearly along the host curve." />
        <ECEnumerator value="1" name="Parabola" displayLabel="Parabola" description="Forces at point vary parabolically along the host curve."/>
    </ECEnumeration>

    <!-- TODO: This is not complete according to the IFC documentation -->
    <ECEnumeration typeName="SurfaceVariationType" backingTypeName="int"  isStrict="true" description="Enumeration of Surface Load Variation types.">
        <ECEnumerator value="0" name="Plane" displayLabel="Plane" description="Force at plane points vary linearly from some specific point in the plane." />
        <ECEnumerator value="1" name="Parabola" displayLabel="Parabola" description="Force at plane points vary parabolically from some specific point in the plane." />
    </ECEnumeration>

    <ECStructClass typeName="PointForce" description="Force at a point." modifier="Sealed">
        <ECProperty propertyName="FX" typeName="double" description="Force in X axis." kindOfQuantity="AECU:FORCE" />
        <ECProperty propertyName="FY" typeName="double" description="Force in Y axis." kindOfQuantity="AECU:FORCE" />
        <ECProperty propertyName="FZ" typeName="double" description="Force in Z axis." kindOfQuantity="AECU:FORCE" />
        <ECProperty propertyName="MX" typeName="double" description="Moment about X axis." kindOfQuantity="AECU:MOMENT" />
        <ECProperty propertyName="MY" typeName="double" description="Moment about Y axis." kindOfQuantity="AECU:MOMENT" />
        <ECProperty propertyName="MZ" typeName="double" description="Moment about Z axis." kindOfQuantity="AECU:MOMENT" />
    </ECStructClass>

    <ECStructClass typeName="LinearForce" description="Force per unit length." modifier="Sealed">
        <ECProperty propertyName="FX" typeName="double" description="Force per unit length in X axis." kindOfQuantity="AECU:LINEAR_FORCE" />
        <ECProperty propertyName="FY" typeName="double" description="Force per unit length in Y axis." kindOfQuantity="AECU:LINEAR_FORCE" />
        <ECProperty propertyName="FZ" typeName="double" description="Force per unit length in Z axis." kindOfQuantity="AECU:LINEAR_FORCE" />
        <ECProperty propertyName="MX" typeName="double" description="Moment per unit length about X axis." kindOfQuantity="AECU:LINEAR_MOMENT" />
        <ECProperty propertyName="MY" typeName="double" description="Moment per unit length about Y axis." kindOfQuantity="AECU:LINEAR_MOMENT" />
        <ECProperty propertyName="MZ" typeName="double" description="Moment per unit length about Z axis." kindOfQuantity="AECU:LINEAR_MOMENT" />
    </ECStructClass>

    <ECStructClass typeName="AreaForce" description="Force per unit area." modifier="Sealed">
        <ECProperty propertyName="FX" typeName="double" description="Force per unit area in X axis." kindOfQuantity="AECU:AREA_FORCE" />
        <ECProperty propertyName="FY" typeName="double" description="Force per unit area in Y axis." kindOfQuantity="AECU:AREA_FORCE" />
        <ECProperty propertyName="FZ" typeName="double" description="Force per unit area in Z axis." kindOfQuantity="AECU:AREA_FORCE" />
        <ECProperty propertyName="MX" typeName="double" description="Moment per unit area about X axis." kindOfQuantity="AECU:AREA_MOMENT" />
        <ECProperty propertyName="MY" typeName="double" description="Moment per unit area about Y axis." kindOfQuantity="AECU:AREA_MOMENT" />
        <ECProperty propertyName="MZ" typeName="double" description="Moment per unit area about Z axis." kindOfQuantity="AECU:AREA_MOMENT" />
    </ECStructClass>

    <ECEntityClass typeName="LoadValueAspect" modifier="Abstract" displayLabel="Load Value Aspect" description="A value that must be applied to a Load.">
        <BaseClass>bis:ElementUniqueAspect</BaseClass>
    </ECEntityClass>

    <!-- Points -->
    <ECEntityClass typeName="PointLoadValueAspect" modifier="Abstract" displayLabel="Point Load Value Aspect" description="Base class for defining Point Load properties.">
        <BaseClass>LoadValueAspect</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="PointLoadOwnsPointLoadValueAspect" strength="embedding" strengthDirection="Forward" modifier="Sealed">
        <BaseClass>bis:ElementOwnsUniqueAspect</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="false">
            <Class class="PointLoad" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is owned by" polymorphic="true">
            <Class class="PointLoadValueAspect" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="ForcePointLoadValueAspect" modifier="Sealed" displayLabel="Point Force Value Aspect" description="Defines a force for a point load.">
        <BaseClass>PointLoadValueAspect</BaseClass>
        <ECStructProperty propertyName="Force" typeName="PointForce" displayLabel="Force" description="Force value." />
    </ECEntityClass>

    <!-- Curves -->
    <ECEntityClass typeName="CurveLoadValueAspect" modifier="Abstract" displayLabel="Curve Load Value Aspect" description="A LoadValueAspect that can be assigned to a CurveLoad.">
        <BaseClass>LoadValueAspect</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="CurveLoadOwnsCurveLoadValueAspect" strength="embedding" strengthDirection="Forward" modifier="Sealed">
        <BaseClass>bis:ElementOwnsUniqueAspect</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="false">
            <Class class="CurveLoad" />
        </Source>
        <Target multiplicity="(1..*)" roleLabel="is owned by" polymorphic="true">
            <Class class="CurveLoadValueAspect" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="UniformCurveLoadValueAspect" modifier="Abstract" displayLabel="Uniform Curve Load Value Aspect" description="A CurveLoadValueAspect that has constant intensity along the curve length.">
        <BaseClass>CurveLoadValueAspect</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="UniformForceCurveLoadValueAspect" modifier="Sealed" displayLabel="Uniform Curve Force Value Aspect" description="A CurveLoadValueAspect that has constant Force along the curve length.">
        <BaseClass>UniformCurveLoadValueAspect</BaseClass>
        <ECStructProperty propertyName="Force" typeName="LinearForce" displayLabel="Force" description="Linear Force values." />
    </ECEntityClass>

    <ECEntityClass typeName="VaryingCurveLoadValueAspect" modifier="Abstract" displayLabel="Varying Curve Load Value Aspect" description="A CurveLoadValueAspect that varies in intensity along the curve length.">
        <BaseClass>CurveLoadValueAspect</BaseClass>
        <ECProperty propertyName="CurveVariationType" typeName="CurveVariationType" displayLabel="Variation" description="Defines how loads change along the location curve." />
        <ECArrayProperty propertyName="Locations" typeName="double" displayLabel="Locations" kindOfQuantity="AECU:LENGTH" />
    </ECEntityClass>

    <ECEntityClass typeName="VaryingForceCurveLoadValueAspect" modifier="Sealed" displayLabel="Varying Curve Force Value Aspect" description="A VaryingCurveLoadValueAspect for Force.">
        <BaseClass>VaryingCurveLoadValueAspect</BaseClass>
        <ECStructArrayProperty propertyName="Forces" typeName="LinearForce" displayLabel="Forces" description="Force values." />
    </ECEntityClass>

    <!-- Surfaces -->
    <ECEntityClass typeName="SurfaceLoadValueAspect" modifier="Abstract" displayLabel="Surface Load Value Aspect" description="A LoadValueAspect that can be assigned to a SurfaceLoad.">
        <BaseClass>LoadValueAspect</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="SurfaceLoadOwnsSurfaceLoadValueAspect" strength="embedding" strengthDirection="Forward" modifier="Sealed">
        <BaseClass>bis:ElementOwnsUniqueAspect</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="false">
            <Class class="SurfaceLoad" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is owned by" polymorphic="true">
            <Class class="SurfaceLoadValueAspect" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="UniformSurfaceLoadValueAspect" modifier="Abstract" displayLabel="Uniform Surface Load Value Aspect" description="A SurfaceLoadValueAspect that has constant intensity across the curve area.">
        <BaseClass>SurfaceLoadValueAspect</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="UniformForceSurfaceLoadValueAspect" modifier="Sealed" displayLabel="Uniform Surface Force Value Aspect" description="A UniformSurfaceLoadValueAspect for Force.">
        <BaseClass>UniformSurfaceLoadValueAspect</BaseClass>
        <ECStructProperty propertyName="Force" typeName="AreaForce" displayLabel="Force" description="Area Force values." />
    </ECEntityClass>

    <ECEntityClass typeName="VaryingSurfaceLoadValueAspect" modifier="Abstract" displayLabel="Varying Surface Load Value Aspect" description="A SurfaceLoadValueAspect that varies in intensity across the application area.">
        <BaseClass>SurfaceLoadValueAspect</BaseClass>
        <ECProperty propertyName="SurfaceVariationType" typeName="SurfaceVariationType" displayLabel="Variation" />
        <ECArrayProperty propertyName="Locations" typeName="Point2d" displayLabel="Locations" kindOfQuantity="AECU:LENGTH" />
    </ECEntityClass>

    <ECEntityClass typeName="VaryingForceSurfaceLoadValueAspect" modifier="Sealed" displayLabel="Curve Force Value Aspect" description="A VaryingSurfaceLoadValueAspect for Force.">
        <BaseClass>VaryingSurfaceLoadValueAspect</BaseClass>
        <ECStructArrayProperty propertyName="Forces" typeName="AreaForce" displayLabel="Forces" description="Force values." />
    </ECEntityClass>

    <!-- Supports / Support behaviors -->
    <ECEnumeration typeName="SpringBehaviorType" backingTypeName="int" isStrict="true">
        <ECEnumerator value="0" name="CompressionOnly" displayLabel="Compression Only" description="Support resists only compression." />
        <ECEnumerator value="1" name="TensionOnly" displayLabel="Tension Only" description="Support resists only tension." />
        <ECEnumerator value="2" name="CompressionAndTension" displayLabel="Compression and Tension" description="Support resists both compression and tension." />
    </ECEnumeration>

    <ECEntityClass typeName="SupportBehavior" modifier="Abstract" displayLabel="Support Behavior" description="Defines fixity behaviors for a Support.">
        <BaseClass>bis:DefinitionElement</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="PointSupportBehavior" modifier="Sealed" displayLabel="Point Support Behavior" description="Defines fixity behavior for a Point Support.">
        <BaseClass>SupportBehavior</BaseClass>
        <ECNavigationProperty propertyName="TranslationalRAxis" relationshipName="PointSupportBehaviorRefersToPointTranslationalBehaviorRAxis" direction="Forward" displayLabel="Translational R axis" description="Translational Fixity behavior along R Axis." />
        <ECNavigationProperty propertyName="TranslationalSAxis" relationshipName="PointSupportBehaviorRefersToPointTranslationalBehaviorSAxis" direction="Forward" displayLabel="Translational S axis" description="Translational Fixity behavior along S Axis." />
        <ECNavigationProperty propertyName="TranslationalTAxis" relationshipName="PointSupportBehaviorRefersToPointTranslationalBehaviorTAxis" direction="Forward" displayLabel="Translational T axis" description="Translational Fixity behavior along T Axis." />
        <ECNavigationProperty propertyName="RotationalRAxis" relationshipName="PointSupportBehaviorRefersToPointRotationalBehaviorRAxis" direction="Forward" displayLabel="Rotational R axis" description="Rotational Fixity behavior about R Axis." />
        <ECNavigationProperty propertyName="RotationalSAxis" relationshipName="PointSupportBehaviorRefersToPointRotationalBehaviorSAxis" direction="Forward" displayLabel="Rotational S axis" description="Rotational Fixity behavior about S Axis." />
        <ECNavigationProperty propertyName="RotationalTAxis" relationshipName="PointSupportBehaviorRefersToPointRotationalBehaviorTAxis" direction="Forward" displayLabel="Rotational T axis" description="Rotational Fixity behavior about T Axis." />
    </ECEntityClass>

    <ECEntityClass typeName="CurveSupportBehavior" modifier="Sealed" displayLabel="Curve Support Behavior" description="Defines fixity behaviors for Curve Support.">
        <BaseClass>SupportBehavior</BaseClass>
        <ECNavigationProperty propertyName="TranslationalRAxis" relationshipName="CurveSupportBehaviorRefersToCurveTranslationalBehaviorRAxis" direction="Forward" displayLabel="Translational R axis" description="Translational Fixity behavior along R Axis." />
        <ECNavigationProperty propertyName="TranslationalSAxis" relationshipName="CurveSupportBehaviorRefersToCurveTranslationalBehaviorSAxis" direction="Forward" displayLabel="Translational S axis" description="Translational Fixity behavior along S Axis." />
        <ECNavigationProperty propertyName="TranslationalTAxis" relationshipName="CurveSupportBehaviorRefersToCurveTranslationalBehaviorTAxis" direction="Forward" displayLabel="Translational T axis" description="Translational Fixity behavior along T Axis." />
        <ECNavigationProperty propertyName="RotationalRAxis" relationshipName="CurveSupportBehaviorRefersToCurveRotationalBehaviorRAxis" direction="Forward" displayLabel="Rotational R axis" description="Rotational Fixity behavior about R Axis."/>
    </ECEntityClass>

    <ECEntityClass typeName="SurfaceSupportBehavior" modifier="Sealed" displayLabel="Surface Support Behavior" description="Defines Surface behaviors for a Surface Support.">
        <BaseClass>SupportBehavior</BaseClass>
        <ECNavigationProperty propertyName="TranslationalRAxis" relationshipName="SurfaceSupportBehaviorRefersToSurfaceTranslationalBehaviorRAxis" direction="Forward" displayLabel="Translational R axis" description="Fixity behavior along R Axis." />
        <ECNavigationProperty propertyName="TranslationalSAxis" relationshipName="SurfaceSupportBehaviorRefersToSurfaceTranslationalBehaviorSAxis" direction="Forward" displayLabel="Translational S axis" description="Fixity behavior along S Axis." />
        <ECNavigationProperty propertyName="TranslationalTAxis" relationshipName="SurfaceSupportBehaviorRefersToSurfaceTranslationalBehaviorTAxis" direction="Forward" displayLabel="Translational T axis" description="Fixity behavior along T Axis." />
    </ECEntityClass>

    <ECEntityClass typeName="PointTranslationalBehavior" modifier="Abstract" displayLabel="Point Translational Behavior" description="Defines fixity behavior along a single local coordinate axis of a Point Support.">
        <BaseClass>bis:DefinitionElement</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="PointSupportBehaviorRefersToPointTranslationalBehaviorRAxis" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="PointSupportBehavior" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="PointTranslationalBehavior" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="PointSupportBehaviorRefersToPointTranslationalBehaviorSAxis" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="PointSupportBehavior" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="PointTranslationalBehavior" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="PointSupportBehaviorRefersToPointTranslationalBehaviorTAxis" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="PointSupportBehavior" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="PointTranslationalBehavior" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="FixedPointTranslationalBehavior" modifier="Sealed" displayLabel="Fixed Point Translational Behavior" description="Fixed Point Translational Behavior.">
        <BaseClass>PointTranslationalBehavior</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="ReleasedPointTranslationalBehavior" modifier="Sealed" displayLabel="Released Point Translational Behavior" description="Released Point Translational Behavior.">
        <BaseClass>PointTranslationalBehavior</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="LinearSpringPointTranslationalBehavior" modifier="Sealed" displayLabel="Linear Spring Point Translational Behavior" description="Linear SpringPoint Translational Behavior.">
        <BaseClass>PointTranslationalBehavior</BaseClass>
        <ECProperty propertyName="SpringType" typeName="SpringBehaviorType" displayLabel="Spring Type" description="Spring Type." />
        <ECProperty propertyName="Stiffness" typeName="double" displayLabel="Stiffness" description="Stiffness." kindOfQuantity="AECU:SPRING_CONSTANT" />
    </ECEntityClass>

    <ECEntityClass typeName="PointRotationalBehavior" modifier="Abstract" displayLabel="Vertex Rotational Behavior" description="Describes connection about some specific axis." >
        <BaseClass>bis:DefinitionElement</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="PointSupportBehaviorRefersToPointRotationalBehaviorRAxis" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="PointSupportBehavior" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="PointRotationalBehavior" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="PointSupportBehaviorRefersToPointRotationalBehaviorSAxis" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="PointSupportBehavior" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="PointRotationalBehavior" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="PointSupportBehaviorRefersToPointRotationalBehaviorTAxis" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="PointSupportBehavior" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="PointRotationalBehavior" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="FixedPointRotationalBehavior" modifier="Sealed" displayLabel="Fixed Point Rotational Behavior" description="Fixed point rotational behavior.">
        <BaseClass>PointRotationalBehavior</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="ReleasedPointRotationalBehavior" modifier="Sealed" displayLabel="Released Point Rotational Behavior" description="released point rotational behavior.">
        <BaseClass>PointRotationalBehavior</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="LinearSpringPointRotationalBehavior" modifier="Sealed" displayLabel="Linear Spring Point Rotational Behavior" description="linear spring point rotational behavior.">
        <BaseClass>PointRotationalBehavior</BaseClass>
        <ECProperty propertyName="Stiffness" typeName="double" displayLabel="Stiffness" description="Stiffness." kindOfQuantity="AECU:ROTATIONAL_SPRING_CONSTANT" />
    </ECEntityClass>

    <ECEntityClass typeName="CurveTranslationalBehavior" modifier="Abstract" displayLabel="Curve Translational Behavior" description="Describes connection along some specific axis.">
        <BaseClass>bis:DefinitionElement</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="CurveSupportBehaviorRefersToCurveTranslationalBehaviorRAxis" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="CurveSupportBehavior" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="CurveTranslationalBehavior" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="CurveSupportBehaviorRefersToCurveTranslationalBehaviorSAxis" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="CurveSupportBehavior" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="CurveTranslationalBehavior" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="CurveSupportBehaviorRefersToCurveTranslationalBehaviorTAxis" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="CurveSupportBehavior" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="CurveTranslationalBehavior" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="FixedCurveTranslationalBehavior" modifier="Sealed" displayLabel="Fixed Curve Translational Behavior" description="Fix curve translational behavior.">
        <BaseClass>CurveTranslationalBehavior</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="ReleasedCurveTranslationalBehavior" modifier="Sealed" displayLabel="Released Curve Translational Behavior" description="Released Curve Translational Behavior.">
        <BaseClass>CurveTranslationalBehavior</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="LinearSpringCurveTranslationalBehavior" modifier="Sealed" displayLabel="Linear Spring Curve Translational Behavior" description="Linear Spring Curve Translational Behavior.">
        <BaseClass>CurveTranslationalBehavior</BaseClass>
        <ECProperty propertyName="SpringType" typeName="SpringBehaviorType" displayLabel="Spring Type" description="Spring Type." />
        <ECProperty propertyName="Stiffness" typeName="double" displayLabel="Stiffness" description="Stiffness." kindOfQuantity="AECU:LINEAR_SPRING_CONSTANT" />
    </ECEntityClass>

    <ECEntityClass typeName="CurveRotationalBehavior" modifier="Abstract" displayLabel="Curve Rotational Behavior" description="Describes connection about some specific axis.">
        <BaseClass>bis:DefinitionElement</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="CurveSupportBehaviorRefersToCurveRotationalBehaviorRAxis" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="CurveSupportBehavior" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="CurveRotationalBehavior" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="FixedCurveRotationalBehavior" modifier="Sealed" displayLabel="Fixed Curve Rotational Behavior" description="Curve has fixed rotational behavior.">
        <BaseClass>CurveRotationalBehavior</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="ReleasedCurveRotationalBehavior" modifier="Sealed" displayLabel="Released Curve Rotational Behavior" description="Released Curve Rotational Behavior.">
        <BaseClass>CurveRotationalBehavior</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="LinearSpringCurveRotationalBehavior" modifier="Sealed" displayLabel="Linear Spring Curve Rotational Behavior" description="Defines Linear Spring Curve Rotational Behavior for Curve Support.">
        <BaseClass>CurveRotationalBehavior</BaseClass>
        <ECProperty propertyName="Stiffness" typeName="double" displayLabel="Stiffness" description="Stiffness." kindOfQuantity="AECU:LINEAR_ROTATIONAL_SPRING_CONSTANT" />
    </ECEntityClass>

    <ECEntityClass typeName="SurfaceTranslationalBehavior" modifier="Abstract" displayLabel="Surface Translational Behavior" description="Surface Translational Behavior.">
        <BaseClass>bis:DefinitionElement</BaseClass>
    </ECEntityClass>

    <ECRelationshipClass typeName="SurfaceSupportBehaviorRefersToSurfaceTranslationalBehaviorRAxis" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="SurfaceSupportBehavior" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="SurfaceTranslationalBehavior" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="SurfaceSupportBehaviorRefersToSurfaceTranslationalBehaviorSAxis" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="SurfaceSupportBehavior" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="SurfaceTranslationalBehavior" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="SurfaceSupportBehaviorRefersToSurfaceTranslationalBehaviorTAxis" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="SurfaceSupportBehavior" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="SurfaceTranslationalBehavior" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="FixedSurfaceTranslationalBehavior" modifier="Sealed" displayLabel="Fixed Surface Translational Behavior" description="Fixed Surface Translational Behavior.">
        <BaseClass>SurfaceTranslationalBehavior</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="ReleasedSurfaceTranslationalBehavior" modifier="Sealed" displayLabel="Released Surface Translational Behavior" description="Released Surface Translational Behavior.">
        <BaseClass>SurfaceTranslationalBehavior</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="LinearSpringSurfaceTranslationalBehavior" modifier="Sealed" displayLabel="Linear Spring Surface Translational Behavior" description="Linear Spring Surface Translational Behavior.">
        <BaseClass>SurfaceTranslationalBehavior</BaseClass>
        <ECProperty propertyName="SpringType" typeName="SpringBehaviorType" displayLabel="Spring Type" description="Spring Type." />
        <ECProperty propertyName="Stiffness" typeName="double" displayLabel="Stiffness" description="Stiffness." kindOfQuantity="AECU:AREA_SPRING_CONSTANT" />
    </ECEntityClass>

    <ECRelationshipClass typeName="SupportRepresentsMembers" strength="referencing" modifier="None" description="Defines Members that are represented by a Support">
        <BaseClass>bis:ElementRefersToElements</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="represents" polymorphic="true">
            <Class class="Support"/>
        </Source>
        <Target multiplicity="(0..*)" roleLabel="are represented by" polymorphic="true">
            <Class class="Member"/>
        </Target>
    </ECRelationshipClass>
</ECSchema>