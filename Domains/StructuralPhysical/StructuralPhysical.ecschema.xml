<?xml version="1.0" encoding="UTF-8"?>
<ECSchema schemaName="StructuralPhysical" description="The classes and relationships required for the physical representation of a building structure.  As opposed to the representation used for structural analysis which is idealized to facilitate calculations, the physical structure more closely maps to the real-world structure and its elements for the purposes of design, fabrication and erection." alias="sp" version="01.01.00" xmlns="http://www.bentley.com/schemas/Bentley.ECXML.3.1">
    <ECSchemaReference name="BisCore" version="01.00.00" alias="bis" />
    <ECSchemaReference name="StructuralPhysicalInterop" version="01.00.00" alias="spi" />
    <ECSchemaReference name="Rebar" version="01.00.00" alias="SPR" />
    <ECSchemaReference name="Profiles" version="01.00.00" alias="prf" />
    <ECSchemaReference name="CoreCustomAttributes" version="01.00.03" alias="CoreCA"/>

    <ECEntityClass typeName="StructuralPhysicalModel" displayLabel="Structural Physical Model" description="DEPRECATED: DO NOT USE.">
        <BaseClass>bis:PhysicalModel</BaseClass>
        <ECCustomAttributes>
            <Deprecated xmlns="CoreCustomAttributes.01.00.03">
                <Description>PhysicalModel should be used in place of this class.</Description>
            </Deprecated>
            <ClassHasHandler xmlns="BisCore.01.00.00"/>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="IGenericComponent" description="An interface that indicates that this element is a structural component of a generic material." displayLabel="Generic Component Mixin" modifier ="Abstract">
        <ECCustomAttributes>
            <IsMixin xmlns="CoreCustomAttributes.01.00.03">
                <AppliesToEntityClass>bis:PhysicalElement</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="IMetalComponent" description="An interface that indicates that this element is a metal structural component" displayLabel="Metal Component Mixin" modifier ="Abstract">
        <ECCustomAttributes>
            <IsMixin xmlns="CoreCustomAttributes.01.00.03">
                <AppliesToEntityClass>bis:PhysicalElement</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="IConcreteComponent" modifier ="Abstract" displayLabel="Concrete Component Mixin" description="An interface that indicates that this Element is a concrete structural component">
        <BaseClass>spr:IReinforceable</BaseClass>
        <ECCustomAttributes>
            <IsMixin xmlns="CoreCustomAttributes.01.00.03">
                <AppliesToEntityClass>bis:PhysicalElement</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="IMaterialSelect" description="An interface that indicates that this element can be used to assign a material to a structural component." displayLabel="Material Select Mixin" modifier ="Abstract">
        <ECCustomAttributes>
            <IsMixin xmlns="CoreCustomAttributes.01.00.03">
                <AppliesToEntityClass>bis:DefinitionElement</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
    </ECEntityClass>

    
    <ECEntityClass typeName="MaterialProfile" description="A pairing of a material with a profile which can be used to assign these properties to a structural component." displayLabel="Material Profile">
        <BaseClass>bis:PhysicalMaterial</BaseClass>
    </ECEntityClass>
    
    <ECEntityClass typeName="MaterialProfileDefinition" description="A material profile definition." displayLabel="Material Profile Definition">
        <BaseClass>bis:DefinitionElement</BaseClass>
        <BaseClass>IMaterialSelect</BaseClass>        
    </ECEntityClass>
    
    <ECEntityClass typeName="MaterialProfileSet" description="A set of material profiles." displayLabel="Material Profile Set">
        <BaseClass>MaterialProfileDefinition</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="StructuralElement" displayLabel="Structural Element" modifier="Abstract" description="An abstract entity from which all structural physical components and assemblies are derived.">
        <BaseClass>bis:PhysicalElement</BaseClass>
        <BaseClass>spi:IStructuralElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00.00" />
        </ECCustomAttributes>
    </ECEntityClass>
    <ECEntityClass typeName="StructuralComponent" displayLabel="Structural Component" modifier="Abstract" description="A component is the smallest distinct structural entity.  It can't be broken down further.">
        <BaseClass>StructuralElement</BaseClass>
        <BaseClass>spi:IStructuralComponent</BaseClass>
        <!--<ECProperty propertyName="IsMain" description="Designates a structural component as the main component in a member.  All structural members must have one component that is considered the main component." typeName="boolean" />-->
    </ECEntityClass>
    <ECEntityClass typeName="StructuralAssembly" displayLabel="Structural Assembly" description="A single structural entity that is built from smaller parts known as components or other structural assemblies">
        <BaseClass>StructuralElement</BaseClass>
        <BaseClass>spi:IStructuralAssembly</BaseClass>
    </ECEntityClass>
    <ECEntityClass typeName="SolidComponent" description="A solid structural component." displayLabel="Solid Component" modifier="Abstract">
        <BaseClass>StructuralComponent</BaseClass>
    </ECEntityClass>
	<ECEntityClass typeName="ArbitraryComponent" description="A structural component that has complex geometry that can't be described parametrically like an extrusion or plate." displayLabel="Arbitrary Component">
        <BaseClass>StructuralComponent</BaseClass>
    </ECEntityClass>
    <ECEntityClass typeName="PlateComponent" displayLabel="Plate" description="Sheet of metal typically steel that is more than approximately 1 cm. (1/4 inch.) thick">
        <BaseClass>SolidComponent</BaseClass>
        <ECProperty propertyName="Thickness" description="The thickness of the plate component." displayLabel="Thickness" typeName="double"/>
        <ECProperty propertyName="Justification" description="Describes how the plate boundary is located relative to the thickness of the plate component." displayLabel="Justification" typeName="string"/>
    </ECEntityClass>
    <ECEntityClass typeName="ProfileComponent" displayLabel="Profile Component" description="A common structural extrusion designated by a cross-section (profile) and an extrsion path or length e.g. a prismatic steel column">
        <BaseClass>SolidComponent</BaseClass>
         <ECProperty propertyName="Path" description="The curve or line along which the profile is extruded or swept." displayLabel="Path" typeName="Bentley.Geometry.Common.IGeometry"/>
         <ECProperty propertyName="CardinalPoint" description="The identifier of a predefined point in the section definition to designate the location of the profile that intersects the path curve." displayLabel="Cardinal Point" typeName="string"/>
         <ECProperty propertyName="Offset" description="A 2D translation to be combined with the cardinal point to locate the profiles intersection with the path curve in-between or offset from the predefined points." displayLabel="Offset" typeName="point2d"/>
         <ECProperty propertyName="OrientationVector" description="A vector which orients the strong axis of a profile about the path of the profiled component" displayLabel="Orientation Vector" typeName="point3d"/>
         <ECProperty propertyName="IsMirrored" description="Designates that the profile used in this component is reflected from its default position." typeName="boolean" />
    </ECEntityClass>
    <ECEntityClass typeName="ConcreteArbitraryComponent" description="An arbitrary structural component which is designed to perform and be constructed of concrete." displayLabel="Concrete Arbitrary Component">
        <BaseClass>ArbitraryComponent</BaseClass>
        <BaseClass>IConcreteComponent</BaseClass>
    </ECEntityClass>
    <ECEntityClass typeName="ConcreteProfileComponent" description="An profiled structural component which is designed to perform and be constructed of concrete." displayLabel="Concrete Profile Component">
        <BaseClass>ProfileComponent</BaseClass>
        <BaseClass>IConcreteComponent</BaseClass>
    </ECEntityClass>
    <ECEntityClass typeName="ConcreteSurfaceComponent" description="An surface structural component such as a slab or wall which is designed to perform and be constructed of concrete." displayLabel="Concrete Surface Component">
        <BaseClass>PlateComponent</BaseClass>
        <BaseClass>IConcreteComponent</BaseClass>
    </ECEntityClass> 
    <ECEntityClass typeName="MetalArbitraryComponent" description="An arbitrary structural component which is designed to perform and be constructed of metal such as steel or aluminum." displayLabel="Metal Arbitrary Component">
        <BaseClass>ArbitraryComponent</BaseClass>
        <BaseClass>IMetalComponent</BaseClass>
    </ECEntityClass>
    <ECEntityClass typeName="MetalProfileComponent" description="An profiled structural component which is designed to perform and be constructed of metal such as steel or aluminum." displayLabel="Metal Profile Component">
        <BaseClass>ProfileComponent</BaseClass>
        <BaseClass>IMetalComponent</BaseClass>
    </ECEntityClass>
    <ECEntityClass typeName="MetalPlateComponent" description="A plate structural component which is designed to perform and be constructed of metal such as steel or aluminum." displayLabel="Metal Plate Component">
        <BaseClass>PlateComponent</BaseClass>
        <BaseClass>IMetalComponent</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="GenericArbitraryComponent" description="An arbitrary structural component which is designed to perform and be constructed of a non-standard material" displayLabel="Generic Arbitrary Component">
        <BaseClass>ArbitraryComponent</BaseClass>
        <BaseClass>IGenericComponent</BaseClass>
    </ECEntityClass>
    <ECEntityClass typeName="GenericProfileComponent"  description="A profiled structural component which is designed to perform and be constructed of a non-standard material" displayLabel="Generic Profile Component">
        <BaseClass>ProfileComponent</BaseClass>
        <BaseClass>IGenericComponent</BaseClass>
    </ECEntityClass>
    <ECEntityClass typeName="GenericPlateComponent"  description="A plate structural component which is designed to perform and be constructed of a non-standard material" displayLabel="Generic Plate Component">
        <BaseClass>PlateComponent</BaseClass>
        <BaseClass>IGenericComponent</BaseClass>        
    </ECEntityClass>

    <ECEntityClass typeName="StructuralAccessory" displayLabel="Structural Accessory" description="A structural assembly that does not function as a member in the structure, however, must be accounted for.  e.g. Loose clips which mush be shipped to the site by the fabricator are examples of structural accessories">
        <BaseClass>StructuralAssembly</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00.00" />
        </ECCustomAttributes>
    </ECEntityClass>
    <ECEntityClass typeName="StructuralMember" displayLabel="Structural Member" description="A major identifiable StructuralElement of the load bearing structure.">
        <BaseClass>StructuralAssembly</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00.00" />
        </ECCustomAttributes>
    </ECEntityClass>
    <ECEntityClass typeName="SubAssembly" displayLabel="SubAssembly" description="An assembly of members or components that acts as member in a larger assembly.">
        <BaseClass>StructuralMember</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00.00" />
        </ECCustomAttributes>
    </ECEntityClass>    
    <ECEntityClass typeName="Slab" displayLabel="Slab" description="A plate-like superstructure StructuralMember that is primarily horizontal, and that transmits to its support locations (usually walls and columns) the applied loads, primarily through bending.">
        <BaseClass>StructuralMember</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00.00" />
        </ECCustomAttributes>
    </ECEntityClass>
    <ECEntityClass typeName="Wall" displayLabel="Wall" description="A plate-like superstructure StructuralMember that is primarily vertical, and that transmits forces to its base, primarily through compression.">
        <BaseClass>StructuralMember</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00.00" />
        </ECCustomAttributes>
    </ECEntityClass>
    <ECEntityClass typeName="Beam" displayLabel="Beam" description="A slender superstructure StructuralMember that is primarily horizontal, and that transmits to its ends the applied loads, primarily through bending.">
        <BaseClass>StructuralMember</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00.00" />
        </ECCustomAttributes>
    </ECEntityClass>
    <ECEntityClass typeName="Column" displayLabel="Column" description="A slender superstructure StructuralMember that is primarily vertical, and that transmits to its base the forces, primarily through compression.">
        <BaseClass>StructuralMember</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00.00" />
        </ECCustomAttributes>
    </ECEntityClass>
    <ECEntityClass typeName="Brace" displayLabel="Brace" description="A slender superstructure StructuralMember that may have any orientation, and prevents racking behavior, primarily through axial forces.">
        <BaseClass>StructuralMember</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00.00" />
        </ECCustomAttributes>
    </ECEntityClass>
    <ECEntityClass typeName="FoundationMember" displayLabel="Foundation Member" description="A StructuralMember that forms part of the substructure that transfers the loads from the superstructure to the ground.">
        <BaseClass>StructuralMember</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00.00" />
        </ECCustomAttributes>
    </ECEntityClass>
    <ECEntityClass typeName="StripFooting" displayLabel="Strip Footing" description="A linear FoundationMember that transfers the load from a linear superstructure element (usually a Wall) or a linear series of closely spaced superstructure elements on to the ground.">
        <BaseClass>FoundationMember</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00.00" />
        </ECCustomAttributes>
    </ECEntityClass>
    <ECEntityClass typeName="SpreadFooting" displayLabel="Spread Footing" description="A FoundationMember that transfers the load from a small number of superstructure elements (often one) to the ground, spreading the load in two directions.">
        <BaseClass>FoundationMember</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00.00" />
        </ECCustomAttributes>
    </ECEntityClass>
    <ECEntityClass typeName="PileCap" displayLabel="Pile Cap" description="A FoundationMember that transfers the load from the superstructure to a or pile or group of piles.">
        <BaseClass>FoundationMember</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00.00" />
        </ECCustomAttributes>
    </ECEntityClass>
    <ECEntityClass typeName="Pile" displayLabel="Pile" description="A slender FoundationMember, substantially underground, intended to transmit forces into loadbearing strata below the surface of the ground.">
        <BaseClass>FoundationMember</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.01.00.00" />
        </ECCustomAttributes>
    </ECEntityClass>
    <ECRelationshipClass typeName="StructuralAssemblyOwnsStructuralAssembly" description="For supporting sub-assemblies" displayLabel="Structural Member Owns Structural Members" modifier="None" strength="embedding">
        <BaseClass>bis:ElementOwnsChildElements</BaseClass>
        <Source multiplicity="(0..1)" roleLabel="ElementOwnsChildElement" polymorphic="true">
            <Class class="spi:IStructuralAssembly"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="ElementOwnsChildElement (Reversed)" polymorphic="true">
            <Class class="spi:IStructuralAssembly"/>
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="MaterialProfileSetRefersToMaterialProfile" description="Relates a set of material profiles to a material profile." displayLabel="Material Profile Set Refers To Material Profile" modifier="None" strength="referencing">
        <BaseClass>bis:ElementRefersToElements</BaseClass>
        <Source multiplicity="(0..1)" roleLabel="Material Profile  Set Refers To Material Profile" polymorphic="true">
            <Class class="MaterialProfileSet"/>
        </Source>
        <Target multiplicity="(0..*)" roleLabel="Material Profile  Set Refers To Material Profile (Reversed)" polymorphic="true">
            <Class class="MaterialProfile"/>
        </Target>
    </ECRelationshipClass>
    
    
    <ECRelationshipClass typeName="StructuralComponentRefersToMaterialSelectMixin" description="Relates a structural component with its material" displayLabel="Structural Component Refers To Material Select Mixin" modifier="None" strength="referencing">
        <BaseClass>bis:ElementRefersToElements</BaseClass>
        <Source multiplicity="(0..1)" roleLabel="Structural Component Refers To Material Select Mixin" polymorphic="true">
            <Class class="SolidComponent"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="Structural Component Refers To Material Select Mixin (Reversed)" polymorphic="true">
            <Class class="IMaterialSelect"/>
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="MaterialProfileRefersToPhysicalMaterial" description="Relates a material profile to a material." displayLabel="Material Profile Refers To Physical Material" modifier="None" strength="referencing">
        <BaseClass>bis:ElementRefersToElements</BaseClass>
        <Source multiplicity="(0..1)" roleLabel="Structural Component Refers To Material Select Mixin" polymorphic="true">
            <Class class="MaterialProfile"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="Structural Component Refers To Material Select Mixin (Reversed)" polymorphic="true">
            <Class class="bis:PhysicalMaterial"/>
        </Target>
    </ECRelationshipClass>
    
        <ECRelationshipClass typeName="MaterialProfileRefersToProfile" description="Relates a material profile to a profile." displayLabel="Material Profile Refers To Profile" modifier="None" strength="referencing">
        <BaseClass>bis:ElementRefersToElements</BaseClass>
        <Source multiplicity="(0..1)" roleLabel="Structural Component Refers To Profile" polymorphic="true">
            <Class class="MaterialProfile"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="Structural Component Refers To Profile (Reversed)" polymorphic="true">
            <Class class="prf:Profile"/>
        </Target>
    </ECRelationshipClass>

 
    
</ECSchema>
