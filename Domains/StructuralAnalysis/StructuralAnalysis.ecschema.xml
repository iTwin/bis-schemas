<?xml version="1.0" encoding="UTF-8"?>
<ECSchema schemaName="StructuralAnalysis" alias="sa" version="01.00.00" xmlns="http://www.bentley.com/schemas/Bentley.ECXML.3.1" displayLabel="Structural Analysis" description="Structural Analysis Schema.">
    <ECSchemaReference name="BisCore" version="01.00.00" alias="bis" />
    <ECSchemaReference name="CoreCustomAttributes" version="01.00.00" alias="CoreCA" />
    <ECSchemaReference name="Profiles" version="01.00.00" alias="prf" />

    <!-- Used for settting MaterialProfile placement for -->
    <ECEnumeration typeName="MaterialProfilePlacement" backingTypeName="int" isStrict="true">
        <ECEnumerator value="0" displayLabel="Start" />
        <ECEnumerator value="1" displayLabel="End" />
    </ECEnumeration>

    <!-- Topology classes -->
    <ECEntityClass typeName="TopologyElement" modifier="Abstract" displayLabel="Topology Element" description="Abstract class for all topology-related classes to derive from.">
        <BaseClass>bis:SpatialLocationElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="SharedTopologyElement" modifier="Abstract" displayLabel="Shared Topology Element" description="Abstract class is topology type that can shared by multiple other Elements. The sharing defines the connectivity of the topological network. Each subclass is also the lowest level concept for a particular dimensionality (Face is the lowest 2D concept).">
        <BaseClass>TopologyElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="PrivateTopologyElement" modifier="Abstract" displayLabel="Privete Topology Element" description="Abstract class as a common parent class for each  topology type that is not shared. Each subclass represents a direct or indirect collection of the shared topology. Each subclass is also a collection of the topology of the same dimensionality.">
        <BaseClass>TopologyElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="Vertex" modifier="Sealed" displayLabel="Vertex" description="An identified location in 3D space.">
        <BaseClass>SharedTopologyElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
        <ECProperty propertyName="Point" typeName="point3d" displayLabel="Vertex placement point." >
            <ECCustomAttributes>
                <CustomHandledProperty>
                    <StatementTypes>3</StatementTypes>
                </CustomHandledProperty>
            </ECCustomAttributes>
        </ECProperty>
    </ECEntityClass>

    <ECEntityClass typeName="Edge" modifier="Sealed" displayLabel="Edge" description="A curve connecting two Vertices.">
        <BaseClass>SharedTopologyElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
        <ECNavigationProperty propertyName="StartVertex" relationshipName="EdgeHasStartVertex" direction="Forward" displayLabel="Start Vertex." >
            <ECCustomAttributes>
                <CustomHandledProperty>
                    <StatementTypes>3</StatementTypes>
                </CustomHandledProperty>
            </ECCustomAttributes>
        </ECNavigationProperty>
        <ECNavigationProperty propertyName="EndVertex" relationshipName="EdgeHasEndVertex" direction="Forward" displayLabel="End Vertex." >
            <ECCustomAttributes>
                <CustomHandledProperty>
                    <StatementTypes>3</StatementTypes>
                </CustomHandledProperty>
            </ECCustomAttributes>
        </ECNavigationProperty>
        <ECProperty propertyName="Curve" typeName="Bentley.Geometry.Common.IGeometry" displayLabel="Location Curve." >
            <ECCustomAttributes>
                <CustomHandledProperty>
                    <StatementTypes>3</StatementTypes>
                </CustomHandledProperty>
            </ECCustomAttributes>
        </ECProperty>
    </ECEntityClass>

    <ECRelationshipClass typeName="EdgeHasStartVertex" strength="referencing" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="has" polymorphic="false">
            <Class class="Edge" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="false">
            <Class class="Vertex" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="EdgeHasEndVertex" strength="referencing" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="has" polymorphic="false">
            <Class class="Edge" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="false">
            <Class class="Vertex" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="OrientedEdgeAspect" modifier="Sealed" displayLabel="Oriented Edge Aspect" description="This Aspect stores the Edges (and related data) for a Path." >
        <BaseClass>bis:ElementMultiAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
        <ECProperty propertyName="Index" typeName="int" displayLabel="Index" description="Zero based index for Edge order in Path." >
            <ECCustomAttributes>
                <HiddenProperty xmlns="CoreCustomAttributes.1.0" />
            </ECCustomAttributes>
        </ECProperty>
        <ECProperty propertyName="IsForwardDirection" typeName="boolean" displayLabel="Is Forward Direction" description="Shows if direction matches edge direction." />
        <ECNavigationProperty propertyName="Edge" relationshipName="OrientedEdgeAspectHasEdge" direction="Forward" displayLabel="Edge described by this Aspect." />
    </ECEntityClass>

    <ECRelationshipClass typeName="OrientedEdgeAspectHasEdge" strength="referencing" strengthDirection="Backward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="is referenced by" polymorphic="false">
            <Class class="OrientedEdgeAspect" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="has" polymorphic="false">
            <Class class="Edge" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="Path" modifier="Abstract" displayLabel="Path" description="A Path that does not need to be closed and is not defining the boundary of a face.">
        <BaseClass>PrivateTopologyElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="IPathsOwner" modifier="Abstract" displayLabel="Paths Owner" description="Element which uses child Paths to represent it's location.">
        <ECCustomAttributes>
            <IsMixin xmlns="CoreCustomAttributes.1.0">
                <AppliesToEntityClass>bis:Element</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECRelationshipClass typeName="IPathsOwnerOwnsPaths" strength="embedding" modifier="None" description="A relationship that indicates that an Element owns Paths.">
        <BaseClass>bis:ElementOwnsChildElements</BaseClass>
        <Source multiplicity="(0..1)" roleLabel="owns" polymorphic="true">
            <Class class="IPathsOwner"/>
        </Source>
        <Target multiplicity="(0..*)" roleLabel="is owned by" polymorphic="true">
            <Class class="Path"/>
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="PathOwnsOrientedEdgeAspects" strength="embedding" modifier="Sealed">
        <BaseClass>bis:ElementOwnsMultiAspects</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="true">
            <Class class="Path" />
        </Source>
        <Target multiplicity="(1..*)" roleLabel="is owned by" polymorphic="false">
            <Class class="OrientedEdgeAspect" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="Wire" modifier="Sealed" displayLabel="Wire" description="A Path that does not need to be closed and is not defining the boundary of a face.">
        <BaseClass>Path</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="IWireOwner" modifier="Abstract" displayLabel="Wire Owner" description="Element which uses child Wire do represent it's location.">
        <ECCustomAttributes>
            <IsMixin xmlns="CoreCustomAttributes.1.0">
                <!-- Only subclasses of bis:Element can implement the IDefinePoint interface -->
                <AppliesToEntityClass>bis:Element</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECRelationshipClass typeName="IWireOwnerOwnsWire" strength="embedding" modifier="None" description="A relationship that indicates that an Element owns Wire.">
        <BaseClass>bis:ElementOwnsChildElements</BaseClass>
        <Source multiplicity="(0..1)" roleLabel="owns" polymorphic="true">
            <Class class="IWireOwner"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is owned by" polymorphic="true">
            <Class class="Wire"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="Loop" modifier="Sealed" displayLabel="Loop" description="A Path that is closed and defines a boundary of a Face.">
        <BaseClass>Path</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="ILoopOwner" modifier="Abstract" displayLabel="Loop Owner" description="Element which uses child Loop to represent it's location.">
        <ECCustomAttributes>
            <IsMixin xmlns="CoreCustomAttributes.1.0">
                <AppliesToEntityClass>bis:Element</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECRelationshipClass typeName="ILoopOwnerOwnsLoop" strength="embedding" modifier="None" description="A relationship that indicates that an Element owns Loop.">
        <BaseClass>bis:ElementOwnsChildElements</BaseClass>
        <Source multiplicity="(0..1)" roleLabel="owns" polymorphic="true">
            <Class class="ILoopOwner"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is owned by" polymorphic="true">
            <Class class="Loop"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="Face" modifier="Sealed" displayLabel="Face" description="A surface bounded by Loops.">
        <BaseClass>SharedTopologyElement</BaseClass>
        <BaseClass>ILoopOwner</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
        <ECProperty propertyName="Surface" typeName="Bentley.Geometry.Common.IGeometry" displayLabel="Location Curve." />
    </ECEntityClass>

    <ECRelationshipClass typeName="FaceHasInternalVertices" strength="referencing" modifier="Sealed">
        <BaseClass>bis:ElementRefersToElements</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="has" polymorphic="false">
            <Class class="Face" />
        </Source>
        <Target multiplicity="(0..*)" roleLabel="is referenced by" polymorphic="false">
            <Class class="Vertex" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="OrientedFaceAspect" modifier="Sealed" displayLabel="Oriented Face Aspect" description="This Aspect stores the Faces (and related data) for a FaceSet.">
        <BaseClass>bis:ElementMultiAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
        <ECProperty propertyName="IsForwardDirection" typeName="boolean" displayLabel="Is Forward Direction" description="Shows if direction matches Face direction." />
        <ECNavigationProperty propertyName="Face" relationshipName="OrientedFaceAspectHasFace" direction="Forward" displayLabel="Face described by this Aspect." />
    </ECEntityClass>

    <ECRelationshipClass typeName="OrientedFaceAspectHasFace" strength="referencing" strengthDirection="Backward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="is referenced by" polymorphic="false">
            <Class class="OrientedFaceAspect" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="has" polymorphic="false">
            <Class class="Face" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="FaceSet" modifier="Abstract" displayLabel="FaceSet" description="A set of Edge-connected Faces with compatible orientations (up directions). This class defines common data and functionality for Sheet and Shell (future).">
        <BaseClass>PrivateTopologyElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECRelationshipClass typeName="FaceSetOwnsOrientedFaceAspects" strength="embedding" modifier="Sealed">
        <BaseClass>bis:ElementOwnsMultiAspects</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="is owned by" polymorphic="true">
            <Class class="FaceSet" />
        </Source>
        <Target multiplicity="(1..*)" roleLabel="owns" polymorphic="false">
            <Class class="OrientedFaceAspect" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="Sheet" modifier="Sealed" displayLabel="Sheet" description="A FaceSet that may be open or closed, and does not bound a Region (future concept). Sheets are also constrained to have a single base Surface.">
        <BaseClass>FaceSet</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="ISheetOwner" modifier="Abstract" displayLabel="Sheet Owner" description="Element which uses child Sheet do represent it's location.">
        <ECCustomAttributes>
            <IsMixin xmlns="CoreCustomAttributes.1.0">
                <!-- Only subclasses of bis:Element can implement the IDefinePoint interface -->
                <AppliesToEntityClass>bis:Element</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECRelationshipClass typeName="ISheetOwnerOwnsSheet" strength="embedding" modifier="None" description="A relationship that indicates that an Element owns Sheet.">
        <BaseClass>bis:ElementOwnsChildElements</BaseClass>
        <Source multiplicity="(0..1)" roleLabel="owns" polymorphic="true">
            <Class class="ISheetOwner"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is owned by" polymorphic="true">
            <Class class="Sheet"/>
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="Shell" modifier="Sealed" displayLabel="Shell" description="TODO: Add Description">
        <BaseClass>FaceSet</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <!-- Curve Member System Classes -->
    <ECEntityClass typeName="CurveMemberSystem" modifier="Abstract" displayLabel="Curve Member System">
        <BaseClass>bis:DriverBundleElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="SegmentedCurveMemberSystem" modifier="Sealed" displayLabel="Segmented Curve Member System">
        <BaseClass>CurveMemberSystem</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="SingleCurveMemberSystem" modifier="Abstract" displayLabel="Single Curve Member System">
        <BaseClass>CurveMemberSystem</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECRelationshipClass typeName="SegmentedCurveMemberSystemDrivesSingleCurveMemberSystem" strength="referencing" modifier="Sealed">
        <BaseClass>bis:ElementDrivesElement</BaseClass>
        <ECProperty propertyName="Index" typeName="int" displayLabel="Index" description="Index of Single Curve Member System in Segmented Curve Member System" >
            <ECCustomAttributes>
                <CustomHandledProperty>
                    <StatementTypes>3</StatementTypes>
                </CustomHandledProperty>
            </ECCustomAttributes>
        </ECProperty>
        <Source multiplicity="(0..*)" roleLabel="drives" polymorphic="false">
            <Class class="SegmentedCurveMemberSystem" />
        </Source>
        <Target multiplicity="(2..*)" roleLabel="is drven by" polymorphic="true">
            <Class class="SingleCurveMemberSystem" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="MaterialProfileSystemTapering" modifier="Abstract" displayLabel="Material Profile System Tapering">
        <BaseClass>SingleCurveMemberSystem</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="MaterialProfileSystemLinearTapering" modifier="Sealed" displayLabel="Material Profile System Linear Tapering">
        <BaseClass>MaterialProfileSystemTapering</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="MaterialProfileSystem" modifier="Sealed" displayLabel="Material Profile System">
        <BaseClass>SingleCurveMemberSystem</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECRelationshipClass typeName="CurveMemberSystemDrivesCurveMember" modifier="Sealed" displayLabel="Curve Member System drives Curve Member">
        <BaseClass>bis:ElementDrivesElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
        <Source multiplicity="(0..*)" roleLabel="drives" polymorphic="false">
            <Class class="CurveMemberSystem" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is driven by" polymorphic="true">
            <Class class="CurveMember" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="MaterialProfileSystemDrivesMaterialProfileDefinition" modifier="Sealed" displayLabel="Material Profile System drives Material Profile Definition">
        <BaseClass>bis:ElementDrivesElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
        <Source multiplicity="(0..*)" roleLabel="drives" polymorphic="false">
            <Class class="MaterialProfileSystem" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is driven by" polymorphic="true">
            <Class class="prf:MaterialProfileDefinition" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="MaterialProfileSystemTaperingDrivesMaterialProfileDefinition" modifier="Sealed" displayLabel="Material Profile System Tapering drives Material Profile Definition">
        <BaseClass>bis:ElementDrivesElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
        <Source multiplicity="(0..*)" roleLabel="drives" polymorphic="false">
            <Class class="MaterialProfileSystemTapering" />
        </Source>
        <Target multiplicity="(2..2)" roleLabel="is driven by" polymorphic="true">
            <Class class="prf:MaterialProfileDefinition" />
        </Target>
        <ECProperty propertyName="Placement" typeName="MaterialProfilePlacement" displayLabel="Material Profile Placement" description="Shows material profile placement for Material Profile" >
            <ECCustomAttributes>
                <CustomHandledProperty>
                    <StatementTypes>3</StatementTypes>
                </CustomHandledProperty>
            </ECCustomAttributes>
        </ECProperty>
    </ECRelationshipClass>

    <!-- Member classes -->
    <ECEntityClass typeName="AnalysisElement" modifier="Abstract" displayLabel="Analysis Element" description="Analysis Element" >
        <BaseClass>bis:SpatialLocationElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="StructuralAnalysisElement" modifier="Abstract" displayLabel="Structural Analysis Element" description="Abstract class for all Structural Analysis Element classes to descend from.">
        <BaseClass>AnalysisElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="Member" modifier="Abstract" displayLabel="Member" description="Abstract class for all member classes to descend from.">
        <BaseClass>StructuralAnalysisElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="CurveMember" modifier="Sealed" displayLabel="Curve Member" description="Defines a Member that is located along a Path, and whose behavior is defined along that Path.">
        <BaseClass>Member</BaseClass>
        <BaseClass>IWireOwner</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
        <ECProperty propertyName="Orientation" typeName="point3d" displayLabel="Orientation" description="Shows Curve Member Orientation at the start of the member. Must be unit vector and perpendicular to curveMember direction at start." >
            <ECCustomAttributes>
                <CustomHandledProperty>
                    <StatementTypes>7</StatementTypes>
                </CustomHandledProperty>
            </ECCustomAttributes>
        </ECProperty>
        <ECProperty propertyName="StartRigidZoneLength" typeName="double" displayLabel="Start Rigid Zone Length" description="defines the lenght of Rigid Zone at the start of Curve Member">
            <ECCustomAttributes>
                <CustomHandledProperty>
                    <StatementTypes>7</StatementTypes>
                </CustomHandledProperty>
            </ECCustomAttributes>
        </ECProperty>
        <ECProperty propertyName="EndRigidZoneLength" typeName="double" displayLabel="End Rigid Zone Lenght" description="defines the lenght of Rigid Zone at the end of Curve Member">
            <ECCustomAttributes>
                <CustomHandledProperty>
                    <StatementTypes>7</StatementTypes>
                </CustomHandledProperty>
            </ECCustomAttributes>
        </ECProperty>
        <ECProperty propertyName="Offset" typeName="point2d" displayLabel="2d offset defined in local coordinate systems, where first vector variable shows offset along binormal and sencond along Orientation">
            <ECCustomAttributes>
                <CustomHandledProperty>
                    <StatementTypes>7</StatementTypes>
                </CustomHandledProperty>
            </ECCustomAttributes>
        </ECProperty>
        <ECNavigationProperty propertyName="CurveMemberSystem" relationshipName="CurveMemberHasCurveMemberSystem" direction="Forward" displayLabel="Curve Member System">
            <ECCustomAttributes>
                <CustomHandledProperty>
                    <StatementTypes>7</StatementTypes>
                </CustomHandledProperty>
            </ECCustomAttributes>
        </ECNavigationProperty>
    </ECEntityClass>

    <ECRelationshipClass typeName="CurveMemberHasCurveMemberSystem" strength="referencing" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="has" polymorphic="false">
            <Class class="CurveMember" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="true">
            <Class class="CurveMemberSystem" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="SurfaceMember" modifier="Sealed" displayLabel="Surface Member" description="Defines a Member that is located by an Shell, and whose behavior is defined at that Shell.">
        <BaseClass>Member</BaseClass>
        <BaseClass>ISheetOwner</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="SurfaceMemberRegion" modifier="Abstract" displayLabel="Surface Member Region" description="Defines a region of a SurfaceMember that has different behavior (or is an opening).">
        <BaseClass>AnalysisElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="SurfaceMemberModifier" modifier="Sealed" displayLabel="Surface Member Modifier" description="Defines a solid region of a SurfaceMember that has different behavior.">
        <BaseClass>AnalysisElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="SurfaceMemberOpening" modifier="Sealed" displayLabel="Surface Member Opening" description="Defines a void region of a SurfaceMember.">
        <BaseClass>AnalysisElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>


    <!-- Loading classes -->

    <!-- Used for setting Coordinate System (Load) -->
    <ECEnumeration typeName="CoordinateSystem" backingTypeName="int" isStrict="true">
        <ECEnumerator value="0" displayLabel="Global" />
        <ECEnumerator value="1" displayLabel="Local" />
    </ECEnumeration>

    <!-- Enumeration of published standard cardinal points -->
    <ECEnumeration typeName="CardinalPoint" backingTypeName="int">
        <ECEnumerator value="0" displayLabel="BottomLeft" />
        <ECEnumerator value="1" displayLabel="BottomCenter" />
        <ECEnumerator value="2" displayLabel="BottomRight" />
        <ECEnumerator value="3" displayLabel="MinDepthLeft" />
        <ECEnumerator value="4" displayLabel="MinDepthCenter" />
        <ECEnumerator value="5" displayLabel="MinDepthRight" />
        <ECEnumerator value="6" displayLabel="TopLeft" />
        <ECEnumerator value="7" displayLabel="TopCenter" />
        <ECEnumerator value="8" displayLabel="TopRight" />
        <ECEnumerator value="9" displayLabel="GeometricCentroid" />
        <ECEnumerator value="10" displayLabel="BottomInLineWithGeometricCentroid" />
        <ECEnumerator value="11" displayLabel="LeftInLineWithGeometricCentroid" />
        <ECEnumerator value="12" displayLabel="RightInLineWithGeometricCentroid" />
        <ECEnumerator value="13" displayLabel="TopInLineWithGeometricCentroid" />
        <ECEnumerator value="14" displayLabel="ShearCentre" />
        <ECEnumerator value="15" displayLabel="BottomInLineWithShearCentroid" />
        <ECEnumerator value="16" displayLabel="LeftInLineWithShearCentroid" />
        <ECEnumerator value="17" displayLabel="RightInLineWithShearCentroid" />
        <ECEnumerator value="18" displayLabel="TopInLineWithShearCentroid" />
    </ECEnumeration>

    <!-- Enumeration of Surface types -->
    <ECEnumeration typeName="SurfaceType" backingTypeName="int">
        <ECEnumerator value="0" displayLabel="Surface" />
        <ECEnumerator value="1" displayLabel="Soffit" />
        <ECEnumerator value="2" displayLabel="Centroid" />
    </ECEnumeration>

    <!-- Enumeration of Curve Load Variation types -->
    <!-- TODO: This is not complete according to the IFC documentation -->
    <ECEnumeration typeName="CurveVariationType" backingTypeName="int">
        <ECEnumerator value="0" displayLabel="Linear" />
        <ECEnumerator value="1" displayLabel="Parabola" />
    </ECEnumeration>

    <!-- Enumeration of Surface Load Variation types -->
    <!-- TODO: This is not complete according to the IFC documentation -->
    <ECEnumeration typeName="SurfaceVariationType" backingTypeName="int">
        <ECEnumerator value="0" displayLabel="Plane" />
        <ECEnumerator value="1" displayLabel="Parabola" />
    </ECEnumeration>


    <ECStructClass typeName="Force" description="Force struct." modifier="Sealed">
        <ECProperty propertyName="FX" typeName="double" description="Force in X axis." />
        <ECProperty propertyName="FY" typeName="double" description="Force in Y axis." />
        <ECProperty propertyName="FZ" typeName="double" description="Force in Z axis." />
        <ECProperty propertyName="MX" typeName="double" description="Moment abount X axis." />
        <ECProperty propertyName="MY" typeName="double" description="Moment abount Y axis." />
        <ECProperty propertyName="MZ" typeName="double" description="Moment abount Z axis." />
    </ECStructClass>

    <ECStructClass typeName="LinearForce" description="Force per unit length struct." modifier="Sealed">
        <ECProperty propertyName="FX" typeName="double" description="Force per unit length in X axis." />
        <ECProperty propertyName="FY" typeName="double" description="Force per unit length in Y axis." />
        <ECProperty propertyName="FZ" typeName="double" description="Force per unit length in Z axis." />
        <ECProperty propertyName="MX" typeName="double" description="Moment per unit length abount X axis." />
        <ECProperty propertyName="MY" typeName="double" description="Moment per unit length abount Y axis." />
        <ECProperty propertyName="MZ" typeName="double" description="Moment per unit length abount Z axis." />
    </ECStructClass>

    <ECStructClass typeName="AreaForce" description="Force per unit area struct." modifier="Sealed">
        <ECProperty propertyName="FX" typeName="double" description="Force per unit area in X axis." />
        <ECProperty propertyName="FY" typeName="double" description="Force per unit area in Y axis." />
        <ECProperty propertyName="FZ" typeName="double" description="Force per unit area in Z axis." />
    </ECStructClass>


    <ECEntityClass typeName="IDefinedPoint" modifier="Abstract" displayLabel="Point location definition" description="An Element that directly or indirectly defines a point location and clear coordinate system.">
        <ECCustomAttributes>
            <IsMixin xmlns="CoreCustomAttributes.1.0">
                <!-- Only subclasses of bis:Element can implement the IDefinePoint interface -->
                <AppliesToEntityClass>bis:Element</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="IDefinedCurve" modifier="Abstract" displayLabel="Curve location definition" description="An Element that directly or indirectly defines a curve location and a clear coordinate system with the z-axis along the curve. The Element may have cardinal points defined; if not all the cardinal points should be considered to lie on the z-axis.">
        <ECCustomAttributes>
            <IsMixin xmlns="CoreCustomAttributes.1.0">
                <!-- Only subclasses of bis:Element can implement the IDefineCurve interface -->
                <AppliesToEntityClass>bis:Element</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="IDefinedSurface" modifier="Abstract" displayLabel="Surface location definition" description="An Element that directly or indirectly defines a surface location and a clear coordinate system with the x- and y- axes in the surface. The Element may have a top, bottom and center defined; if not, the top and bottom and center should be considered to lie on the surface.">
        <ECCustomAttributes>
            <IsMixin xmlns="CoreCustomAttributes.1.0">
                <!-- Only subclasses of bis:Element can implement the IDefineSurface interface -->
                <AppliesToEntityClass>bis:Element</AppliesToEntityClass>
            </IsMixin>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="RelativeLocationAspect" modifier="Abstract" displayLabel="Relative location data" description="Abstract class to define a relative location.">
        <BaseClass>bis:ElementUniqueAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="RelativePointLocationAspect" modifier="Abstract" displayLabel="Relative point location data" description="Point relative to other elements.">
        <BaseClass>RelativeLocationAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="PointRelativeToPointAspect" modifier="Sealed" displayLabel="Point relative to point location data" description="Point relative to point.">
        <BaseClass>RelativePointLocationAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
        <ECNavigationProperty propertyName="ReferencePoint" relationshipName="PointRelativeToPointAspectRefersToIDefinedPoint" direction="Forward" displayLabel="Reference point." />
    </ECEntityClass>

    <!-- Check all relationships with this example -->
    <ECRelationshipClass typeName="PointRelativeToPointAspectRefersToIDefinedPoint" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="PointRelativeToPointAspect" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="referenced by" polymorphic="true">
            <!-- mixin classes are abstract, check when gen -->
            <Class class="IDefinedPoint" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="PointRelativeToCurveAspect" modifier="Sealed" displayLabel="Point relative to curve location data" description="Point relative to curve.">
        <BaseClass>RelativePointLocationAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
        <ECProperty propertyName="Location" typeName="double" displayLabel="Location" />
        <ECProperty propertyName="Offset" typeName="Point2d" displayLabel="Offset" />
        <ECProperty propertyName="CardinalPoint" typeName="CardinalPoint" displayLabel="Cardinal point" />
        <ECNavigationProperty propertyName="ReferenceCurve" relationshipName="PointRelativeToCurveAspectRefersToIDefinedCurve" direction="Forward" displayLabel="Reference curve." />
    </ECEntityClass>

    <ECRelationshipClass typeName="PointRelativeToCurveAspectRefersToIDefinedCurve" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="PointRelativeToCurveAspect" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="referenced by" polymorphic="true">
            <Class class="IDefinedCurve" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="PointRelativeToSurfaceAspect" modifier="Sealed" displayLabel="Point relative to surface location data" description="Point relative to surface.">
        <BaseClass>RelativePointLocationAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
        <ECProperty propertyName="Location" typeName="Point2d" displayLabel="Location" />
        <ECProperty propertyName="Offset" typeName="double" displayLabel="Offset" />
        <ECProperty propertyName="Surface" typeName="SurfaceType" displayLabel="Surface" />
        <ECNavigationProperty propertyName="ReferenceSurface" relationshipName="PointRelativeToSurfaceAspectRefersToIDefinedSurface" direction="Forward" displayLabel="Reference surface." />
    </ECEntityClass>

    <ECRelationshipClass typeName="PointRelativeToSurfaceAspectRefersToIDefinedSurface" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="PointRelativeToSurfaceAspect" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="referenced by" polymorphic="true">
            <Class class="IDefinedSurface" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="RelativeCurveLocationAspect" modifier="Abstract" displayLabel="Relative curve location data" description="Curve relative to other elements.">
        <BaseClass>RelativeLocationAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="CurveRelativeToCurveAspect" modifier="Sealed" displayLabel="Curve relative to curve location data" description="Curve relative to curve.">
        <BaseClass>RelativeCurveLocationAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
        <ECProperty propertyName="Start" typeName="double" displayLabel="Start of range" />
        <ECProperty propertyName="End" typeName="double" displayLabel="End of range" />
        <ECProperty propertyName="Offset" typeName="Point2d" displayLabel="Offset" />
        <ECProperty propertyName="CardinalPoint" typeName="CardinalPoint" displayLabel="Cardinal point" />
        <ECNavigationProperty propertyName="ReferenceCurve" relationshipName="CurveRelativeToCurveAspectRefersToIDefineCurve" direction="Forward" displayLabel="Reference curve." />
    </ECEntityClass>

    <ECRelationshipClass typeName="CurveRelativeToCurveAspectRefersToIDefineCurve" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="CurveRelativeToCurveAspect" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="referenced by" polymorphic="true">
            <Class class="IDefinedCurve" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="CurveRelativeToSurfaceAspect" modifier="Sealed" displayLabel="Curve relative to surface location data" description="Curve relative to surface.">
        <BaseClass>RelativeCurveLocationAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
        <ECProperty propertyName="Location" typeName="Bentley.Geometry.Common.IGeometry" displayLabel="Location" />
        <ECProperty propertyName="Offset" typeName="double" displayLabel="Offset" />
        <ECProperty propertyName="Surface" typeName="SurfaceType" displayLabel="Surface" />
        <ECNavigationProperty propertyName="ReferenceSurface" relationshipName="CurveRelativeToSurfaceAspectRefersToIDefinedSurface" direction="Forward" displayLabel="Reference surface." />
    </ECEntityClass>

    <ECRelationshipClass typeName="CurveRelativeToSurfaceAspectRefersToIDefinedSurface" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="CurveRelativeToSurfaceAspect" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="referenced by" polymorphic="true">
            <Class class="IDefinedSurface" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="RelativeSurfaceLocationAspect" modifier="Abstract" displayLabel="Relative surface location data" description="Surface relative to other elements.">
        <BaseClass>RelativeLocationAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="SurfaceRelativeToSurfaceAspect" modifier="Sealed" displayLabel="Surface relative to surface location data" description="Surface relative to surface.">
        <BaseClass>RelativeSurfaceLocationAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
        <ECProperty propertyName="Location" typeName="Bentley.Geometry.Common.IGeometry" displayLabel="Location" />
        <ECProperty propertyName="Offset" typeName="double" displayLabel="Offset" />
        <ECProperty propertyName="Surface" typeName="SurfaceType" displayLabel="Surface" />
        <ECNavigationProperty propertyName="ReferenceSurface" relationshipName="SurfaceRelativeToSurfaceAspectRefersToIDefinedSurface" direction="Forward" displayLabel="Reference surface." />
    </ECEntityClass>

    <ECRelationshipClass typeName="SurfaceRelativeToSurfaceAspectRefersToIDefinedSurface" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="SurfaceRelativeToSurfaceAspect" />
        </Source>
        <Target multiplicity="(1..1)" roleLabel="referenced by" polymorphic="true">
            <Class class="IDefinedSurface" />
        </Target>
    </ECRelationshipClass>


    <!-- Load Value Aspect Classes -->

    <ECEntityClass typeName="LoadValueAspect" modifier="Abstract" displayLabel="Load value data" description="A value that can be applied to a (compatible) Load.">
        <BaseClass>bis:ElementUniqueAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="PointLoadValueAspect" modifier="Abstract" displayLabel="Point load value data" description="A LoadValueAspect that can be assigned to a PointLoad.">
        <BaseClass>LoadValueAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="ForcePointLoadValueAspect" modifier="Sealed" displayLabel="Point Force value data" description="A PointLoadValueAspect for Force.">
        <BaseClass>PointLoadValueAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
        <ECStructProperty propertyName="Force" typeName="Force" displayLabel="Point force" description="Force values." />
    </ECEntityClass>

    <ECEntityClass typeName="CurveLoadValueAspect" modifier="Abstract" displayLabel="Curve load value data" description="A LoadValueAspect that can be assigned to a CurveLoad.">
        <BaseClass>LoadValueAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="UniformCurveLoadValueAspect" modifier="Abstract" displayLabel="Uniform Curve load value data" description="A CurveLoadValueAspect that has constant intensity along the application length.">
        <BaseClass>CurveLoadValueAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="UniformForceCurveLoadValueAspect" modifier="Sealed" displayLabel="Uniform Curve Force value data" description="A UniformCurveLoadValueAspect for Force.">
        <BaseClass>UniformCurveLoadValueAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes>
        <ECStructProperty propertyName="Force" typeName="LinearForce" displayLabel="Uniform Curve Linear force" description="Linear Force values." />
    </ECEntityClass>

    <ECEntityClass typeName="VaryingCurveLoadValueAspect" modifier="Abstract" displayLabel="Varying Curve load value data" description="A CurveLoadValueAspect that varies in intensity along the application length.">
        <BaseClass>CurveLoadValueAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes>
        <ECProperty propertyName="CurveVariationType" typeName="CurveVariationType" displayLabel="Variation" />
        <ECPrimitiveArrayProperty propertyName="Locations" typeName="double" displayLabel="Locations" />
    </ECEntityClass>

    <ECEntityClass typeName="VaryingForceCurveLoadValueAspect" modifier="Sealed" displayLabel="Varying Curve Force value data" description="A VaryingCurveLoadValueAspect for Force.">
        <BaseClass>VaryingCurveLoadValueAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes>
        <ECStructArrayProperty propertyName="Forces" typeName="LinearForce" displayLabel="Curve forces" description="Force values." />
    </ECEntityClass>

    <ECEntityClass typeName="SurfaceLoadValueAspect" modifier="Abstract" displayLabel="Surface load value data" description="A LoadValueAspect that can be assigned to a SurfaceLoad.">
        <BaseClass>LoadValueAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="UniformSurfaceLoadValueAspect" modifier="Abstract" displayLabel="Uniform Surface load value data" description="A SurfaceLoadValueAspect that has constant intensity across the application area.">
        <BaseClass>SurfaceLoadValueAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="UniformForceSurfaceLoadValueAspect" modifier="Sealed" displayLabel="Uniform Surface Force value data" description="A UniformSurfaceLoadValueAspect for Force.">
        <BaseClass>UniformSurfaceLoadValueAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes>
        <ECStructProperty propertyName="Force" typeName="AreaForce" displayLabel="Uniform Surface Area force" description="Area Force values." />
    </ECEntityClass>

    <ECEntityClass typeName="VaryingSurfaceLoadValueAspect" modifier="Abstract" displayLabel="Varying Surface load value data" description="A SurfaceLoadValueAspect that varies in intensity across the application area.">
        <BaseClass>SurfaceLoadValueAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes>
        <ECProperty propertyName="SurfaceVariationType" typeName="SurfaceVariationType" displayLabel="Variation" />
        <ECPrimitiveArrayProperty propertyName="Locations" typeName="DPoint2d" displayLabel="Locations" />
    </ECEntityClass>

    <ECEntityClass typeName="VaryingForceSurfaceLoadValueAspect" modifier="Sealed" displayLabel="Curve Force value data" description="A VaryingSurfaceLoadValueAspect for Force.">
        <BaseClass>VaryingSurfaceLoadValueAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes>
        <ECStructArrayProperty propertyName="Forces" typeName="AreaForce" displayLabel="Surface forces" description="Force values." />
    </ECEntityClass>


    <!-- Load Classes -->

    <ECEntityClass typeName="Load" modifier="Abstract" displayLabel="Load applited to a relative location" description="An structural imposition of any type (force, displacement, environmental).">
        <BaseClass>StructuralAnalysisElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
        <ECProperty propertyName="CoordinateSystem" typeName="CoordinateSytem" displayLabel="Coordinate system" description="Coordinate system of th load." />
    </ECEntityClass>

    <ECEntityClass typeName="PointLoad" modifier="Sealed" displayLabel="Load applied to point" description="A Load that is applied at a point..">
        <BaseClass>Load</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECRelationshipClass typeName="PointLoadOwnsRelativePointLocationAspect" strength="embedding" modifier="Sealed">
        <BaseClass>bis:ElementOwnsUniqueAspect</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="false">
            <Class class="PointLoad"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is owned by" polymorphic="true">
            <Class class="RelativePointLocationAspect" />
        </Target>
    </ECRelationshipClass>
  
    <ECRelationshipClass typeName="PointLoadOwnsPointLoadValueAspect" strength="embedding" modifier="Sealed">
        <BaseClass>bis:ElementOwnsUniqueAspect</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="false">
            <Class class="PointLoad"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is owned by" polymorphic="true">
            <Class class="PointLoadValueAspect" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="CurveLoad" modifier="Sealed" displayLabel="Curve Load" description="A Load that is applied along a curve.">
        <BaseClass>Load</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECRelationshipClass typeName="CurveLoadOwnsRelativeCurveLocationAspect" strength="embedding" modifier="Sealed">
        <BaseClass>bis:ElementOwnsUniqueAspect</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="false">
            <Class class="CurveLoad"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is owned by" polymorphic="true">
            <Class class="RelativeCurveLocationAspect" />
        </Target>
    </ECRelationshipClass>
  
    <ECRelationshipClass typeName="CurveLoadOwnsCurveLoadValueAspect" strength="embedding" modifier="Sealed">
        <BaseClass>bis:ElementOwnsUniqueAspect</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="false">
            <Class class="CurveLoad"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is owned by" polymorphic="true">
            <Class class="CurveLoadValueAspect" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="SurfaceLoad" modifier="Sealed" displayLabel="Surface Load" description="A Load that is applied over a surface.">
        <BaseClass>Load</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0" />
        </ECCustomAttributes>
    </ECEntityClass>

    <ECRelationshipClass typeName="SurfaceLoadOwnsRelativeSurfaceLocationAspect" strength="embedding" modifier="Sealed">
        <BaseClass>bis:ElementOwnsUniqueAspect</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="false">
            <Class class="SurfaceLoad"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is owned by" polymorphic="true">
            <Class class="RelativeSurfaceLocationAspect" />
        </Target>
    </ECRelationshipClass>
  
    <ECRelationshipClass typeName="SurfaceLoadOwnsSurfaceLoadValueAspect" strength="embedding" modifier="Sealed">
        <BaseClass>bis:ElementOwnsUniqueAspect</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="false">
            <Class class="SurfaceLoad"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is owned by" polymorphic="true">
            <Class class="SurfaceLoadValueAspect" />
        </Target>
    </ECRelationshipClass>    

    <!-- Load groups -->
    <ECEnumeration typeName="LoadType" backingTypeName="int" isStrict="true" description="Used for specifying LoadType in LoadContainer.">
        <ECEnumerator value="0" displayLabel="permanent_g"/>
        <ECEnumerator value="1" displayLabel="variable_q"/>
        <ECEnumerator value="2" displayLabel="extraordinary_a"/>
        <ECEnumerator value="3" displayLabel="userdefined"/>
        <ECEnumerator value="4" displayLabel="notdefined"/>
    </ECEnumeration>
    
    <!-- TODO: Maybe add SRSS to this as well? (Allan's suggestion) -->
    <ECEnumeration typeName="CombinationType" backingTypeName="int" isStrict="true" description="Used for specifying combination type.">
        <ECEnumerator value="0" displayLabel="Normal"/>
        <ECEnumerator value="1" displayLabel="ABS"/>
    </ECEnumeration>

    <!-- For SelfWeightVector used http://www.buildingsmart-tech.org/ifc/IFC4/final/html/schema/ifcmeasureresource/lexical/ifcratiomeasure.htm 
    http://www.buildingsmart-tech.org/ifc/IFC4/final/html/ -->   

    <ECEntityClass typeName="LoadContainer" modifier="Abstract" displayLabel="Load Container" description="A collection of loads.">
        <BaseClass>AnalysisElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes>
        <ECProperty propertyName="LoadType" typeName="LoadType" description="Load Type." />
        <ECProperty propertyName="SelfWeightVector" typeName="point3d" description="Self Weight Vector. Must be a unit vector." />     
    </ECEntityClass>
    
    <ECRelationshipClass typeName="LoadContainerRefersToLoads" strength="referencing" modifier="Sealed">
        <BaseClass>bis:ElementRefersToElements</BaseClass>
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="true">
            <Class class="LoadContainer"/>
        </Source>
        <Target multiplicity="(0..*)" roleLabel="is referenced by" polymorphic="true">
            <Class class="Load" />
        </Target>
    </ECRelationshipClass>
    
    <ECEntityClass typeName="LoadGroup" modifier="Sealed" displayLabel="Load Group" description="Collection of loads only for grouping purposes.">
        <BaseClass>LoadContainer</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECEntityClass typeName="LoadCase" modifier="Sealed" displayLabel="Load Case" description="Collection of loads that act over the structure as a case.">
        <BaseClass>LoadContainer</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes>
    </ECEntityClass>

    <!-- TODO: Is this correct? -->
    <ECRelationshipClass typeName="LoadCaseOwnsFactoredLoadGroupAspects" strength="embedding" modifier="Sealed">
        <BaseClass>bis:ElementOwnsMultiAspects</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="false">
            <Class class="LoadCase"/>
        </Source>
        <Target multiplicity="(0..*)" roleLabel="is owned by" polymorphic="false">
            <Class class="FactoredLoadGroupAspect" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="LoadCaseOwnsFactoredLoadCaseAspects" strength="embedding" modifier="Sealed">
        <BaseClass>bis:ElementOwnsMultiAspects</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="false">
            <Class class="LoadCase"/>
        </Source>
        <Target multiplicity="(0..*)" roleLabel="is owned by" polymorphic="true">
            <Class class="FactoredLoadCaseAspect" />
        </Target>
    </ECRelationshipClass>
    
    <ECEntityClass typeName="LoadCombinationBase" modifier="Abstract" displayLabel="Load Combination Base" description="Combination of LoadCases.">
        <BaseClass>AnalysisElement</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes>
    </ECEntityClass>

    <ECRelationshipClass typeName="LoadCombinationBaseOwnsFactoredLoadCaseAspects" strength="embedding" modifier="Sealed">
        <BaseClass>bis:ElementOwnsMultiAspects</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="true">
            <Class class="LoadCombinationBase"/>
        </Source>
        <Target multiplicity="(0..*)" roleLabel="is owned by" polymorphic="true">
            <Class class="FactoredLoadCaseAspect" />
        </Target>
    </ECRelationshipClass>

    <ECRelationshipClass typeName="LoadCombinationBaseOwnsFactoredLoadCombinationAspects" strength="embedding" modifier="Sealed">
        <BaseClass>bis:ElementOwnsMultiAspects</BaseClass>
        <Source multiplicity="(1..1)" roleLabel="owns" polymorphic="true">
            <Class class="LoadCombinationBase"/>
        </Source>
        <Target multiplicity="(0..*)" roleLabel="is owned by" polymorphic="true">
            <Class class="FactoredLoadCombinationAspect" />
        </Target>
    </ECRelationshipClass>
    
    <ECEntityClass typeName="LoadCombination" modifier="Sealed" displayLabel="Load Combination Base" description="Combination of LoadCases.">
        <BaseClass>LoadCombinationBase</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes>
        <ECProperty propertyName="CombinationType" typeName="CombinationType" description="Load combination type." />
    </ECEntityClass>
    
    <ECEntityClass typeName="LoadCombinationSRSS" modifier="Sealed" displayLabel="Load Combination Base" description="Combination of LoadCases.">
        <BaseClass>LoadCombinationBase</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes>
        <ECProperty propertyName="Factor" typeName="double" description="Load Combination SRSS factor" />
    </ECEntityClass>

    <ECEntityClass typeName="FactoredLoadAspect" modifier="Abstract" displayLabel="Factored Load Aspect" description="Abstract class to define a Factored Load Aspect.">
        <BaseClass>bis:ElementMultiAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes>
    </ECEntityClass>
    
    <ECEntityClass typeName="FactoredLoadGroupAspect" modifier="Sealed" displayLabel="Factored Load Group Aspect" description="Adds a factor to a specified LoadGroup.">
        <BaseClass>FactoredLoadAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes> 
        <ECProperty propertyName="Factor" typeName="double" description="Factor to be applied to the group." />
        <ECNavigationProperty propertyName="LoadGroup" relationshipName="FactoredLoadGroupAspectRefersToLoadGroup" direction="Forward" displayLabel="Load Group." />
    </ECEntityClass>
    
    <ECRelationshipClass typeName="FactoredLoadGroupAspectRefersToLoadGroup" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="false">
            <Class class="FactoredLoadGroupAspect"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="false">
            <Class class="LoadGroup" />
        </Target>
    </ECRelationshipClass>
    
    <ECEntityClass typeName="FactoredLoadCaseAspect" modifier="None" displayLabel="Factored Load Case Aspect" description="Adds a factor to a specified LoadCase.">
        <BaseClass>FactoredLoadAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes> 
        <ECProperty propertyName="Factor" typeName="double" description="Factor to be applied to the group." />
        <ECNavigationProperty propertyName="LoadCase" relationshipName="FactoredLoadCaseAspectRefersToLoadCase" direction="Forward" displayLabel="Load Case." />
    </ECEntityClass>
    
    <ECRelationshipClass typeName="FactoredLoadCaseAspectRefersToLoadCase" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="true">
            <Class class="FactoredLoadCaseAspect"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="false">
            <Class class="LoadCase" />
        </Target>
    </ECRelationshipClass>
    
    <ECEntityClass typeName="FactoredLoadCaseSRSSAspect" modifier="Sealed" displayLabel="Factored SRSS Load Case Aspect" description="Adds a factor to a specified LoadCase.">
        <BaseClass>FactoredLoadCaseAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes> 
    </ECEntityClass>
    
    <ECEntityClass typeName="FactoredLoadCombinationAspect" modifier="None" displayLabel="Factored Load Combination Aspect" description="Adds a factor to a specified LoadCase.">
        <BaseClass>FactoredLoadAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes> 
        <ECProperty propertyName="Factor" typeName="double" description="Factor to be applied to the group." />
        <ECNavigationProperty propertyName="LoadCombination" relationshipName="FactoredLoadCombinationAspectRefersToLoadCombination" direction="Forward" displayLabel="Load Combination." />
    </ECEntityClass>
    
    <ECRelationshipClass typeName="FactoredLoadCombinationAspectRefersToLoadCombination" strength="referencing" strengthDirection="Forward" modifier="Sealed">
        <Source multiplicity="(0..*)" roleLabel="refers to" polymorphic="true">
            <Class class="FactoredLoadCombinationAspect"/>
        </Source>
        <Target multiplicity="(1..1)" roleLabel="is referenced by" polymorphic="false">
            <Class class="LoadCombination" />
        </Target>
    </ECRelationshipClass>

    <ECEntityClass typeName="FactoredLoadCombinationSRSSAspect" modifier="Sealed" displayLabel="Factored SRSS Load Combination Aspect" description="Adds a factor to a specified LoadCase.">
        <BaseClass>FactoredLoadCombinationAspect</BaseClass>
        <ECCustomAttributes>
            <ClassHasHandler xmlns="BisCore.1.0"/>
        </ECCustomAttributes> 
    </ECEntityClass>

</ECSchema>