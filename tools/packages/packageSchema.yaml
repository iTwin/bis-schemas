trigger:
  - master

stages:
- stage: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - job: build_packages
    displayName: Build Packages
    pool:
      name: iModelTechCI
      demands:
      - Cmd

    workspace:
      clean: all
    variables:
    - group: azure-artifacts-npm-token
    - name: pkgOut
      value: '$(Agent.BuildDirectory)/Packages'

    steps:
      - task: NodeTool@0
        displayName: 'Use Node 10.15.0'
        inputs:
          versionSpec: 10.15.0
      - checkout: self
        clean: true

      #Your build pipeline references a secret variable named ‘artifactsRegistryToken’. This variable is pulled from the 'arzure-artifacts-npm-token' variable group.  You must authorize this build to use that group: https://docs.microsoft.com/en-us/azure/devops/pipelines/library/variable-groups?view=azure-devops&tabs=yaml#use-a-variable-group
      - powershell: |
          $npmrcDir = "$(Build.Repository.LocalPath)"
          
          if(!(Test-Path -Path $npmrcDir)){
              mkdir $npmrcDir
          }
          
          $npmrcFile = $npmrcDir + "/.npmrc"
          
          Out-File -FilePath $npmrcFile -Encoding ascii -InputObject "@bentley:registry=/"
          Out-File -FilePath $npmrcFile -Encoding ascii -InputObject "always-auth=true" -Append
          Out-File -FilePath $npmrcFile -Encoding ascii -InputObject "///bentleycs/_packaging/Packages/npm/registry/:username=Packages" -Append
          Out-File -FilePath $npmrcFile -Encoding ascii -InputObject "///bentleycs/_packaging/Packages/npm/registry/:_password=$(artifactsRegistryToken)" -Append
          Out-File -FilePath $npmrcFile -Encoding ascii -InputObject "///bentleycs/_packaging/Packages/npm/registry/:email=npm requires email to be set but doesn't use the value" -Append
          Out-File -FilePath $npmrcFile -Encoding ascii -InputObject "///bentleycs/_packaging/Packages/npm/:username=Packages" -Append
          Out-File -FilePath $npmrcFile -Encoding ascii -InputObject "///bentleycs/_packaging/Packages/npm/:_password=$(artifactsRegistryToken)" -Append
          Out-File -FilePath $npmrcFile -Encoding ascii -InputObject "///bentleycs/_packaging/Packages/npm/:email=npm requires email to be set but doesn't use the value" -Append

        displayName: 'Seed npmrc'
      - task: Npm@1
        displayName: 'npm install'
        inputs:
          command: install
      - script: |
          SET PYENV_NAME=pyenv

          virtualenv %PYENV_NAME%

          $(System.DefaultWorkingDirectory)\pyenv\Scripts\pip.exe install python-ntlm
          $(System.DefaultWorkingDirectory)\pyenv\Scripts\pip.exe install pywin32==224
          $(System.DefaultWorkingDirectory)\pyenv\Scripts\pip.exe install lxml

        displayName: 'Setup python environment'
      - script: $(System.DefaultWorkingDirectory)\pyenv\Scripts\python.exe tools/signoff/signoff.py --getLaunchCodes --dumpjson
        displayName: Get Launch codes (temp)
      - script: node ./tools/packages/generateInventory.js --BisRoot .
        displayName: Build Schema Inventory (temp)
      - script: node ./tools/packages/generatePackages.js --inventory ./SchemaInventory.json --outDir $(pkgOut) --template ./tools/packages/package.json.template
        displayName: Generate Packages

      - publish: $(pkgOut)
        artifact: bis-schemas-packages
        displayName: 'Publish Pipeline Artifact'

- stage: Publish_Packages
  displayName: Publish Packages
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - job: publish
    displayName: Publish npm packages to Azure Artifacts
    variables:
      - group: azure-artifacts-npm-token
    steps:
      - checkout: self
        clean: true
      - task: NodeTool@0
        displayName: 'Use Node 10.15.0'
        inputs:
          versionSpec: 10.15.0
      - task: Npm@1
        displayName: 'npm install'
        inputs:
          command: install
      - download: current
        artifact: bis-schemas-packages
      #Your build pipeline references a secret variable named ‘artifactsRegistryToken’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it secret. See https://go.microsoft.com/fwlink/?linkid=865972
      - powershell: |
          $npmrcDir = "$(Build.Repository.LocalPath)"
          
          if(!(Test-Path -Path $npmrcDir)){
              mkdir $npmrcDir
          }
          
          $npmrcFile = $npmrcDir + "/.npmrc"
          
          Out-File -FilePath $npmrcFile -Encoding ascii -InputObject "@bentley:registry=/"
          Out-File -FilePath $npmrcFile -Encoding ascii -InputObject "always-auth=true" -Append
          Out-File -FilePath $npmrcFile -Encoding ascii -InputObject "///bentleycs/_packaging/Packages/npm/registry/:username=Packages" -Append
          Out-File -FilePath $npmrcFile -Encoding ascii -InputObject "///bentleycs/_packaging/Packages/npm/registry/:_password=$(artifactsRegistryToken)" -Append
          Out-File -FilePath $npmrcFile -Encoding ascii -InputObject "///bentleycs/_packaging/Packages/npm/registry/:email=npm requires email to be set but doesn't use the value" -Append
          Out-File -FilePath $npmrcFile -Encoding ascii -InputObject "///bentleycs/_packaging/Packages/npm/:username=Packages" -Append
          Out-File -FilePath $npmrcFile -Encoding ascii -InputObject "///bentleycs/_packaging/Packages/npm/:_password=$(artifactsRegistryToken)" -Append
          Out-File -FilePath $npmrcFile -Encoding ascii -InputObject "///bentleycs/_packaging/Packages/npm/:email=npm requires email to be set but doesn't use the value" -Append

        displayName: 'Seed npmrc'
      - script: node ./tools/packages/publishPackages.js --packages $(Pipeline.Workspace)/bis-schemas-packages --isRealRun
        displayName: Publish packages
