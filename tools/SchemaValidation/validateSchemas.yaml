trigger:
  branches:
    include:
      - master
  paths:
    include:
      - '*.ecschema.xml'

jobs:
- job: Validation
  workspace:
    clean: all

  pool:
    vmImage: windows-latest

  variables:
    - group: 
    - name: validationOut
      value: '$(Agent.BuildDirectory)/ValidationResults'
    - name: validaterPath
      value: '$(Build.Repository.LocalPath)/node_modules/@bentley/schema-validator'
    - name: comparisonOut
      value: '$(Agent.BuildDirectory)/ComparisonResults'
    - name: schemaComparerPath
      value: '$(Build.Repository.LocalPath)/node_modules/@bentley/schema-comparer'

  steps:
  - task: NodeTool@0
    displayName: 'Use Node 12.16.0'
    inputs:
      versionSpec: 12.16.0
  - checkout: self
    clean: true

     
   
   
   
   
   
   
   
   
   
   

  - script: npm install @bentley/schema-validator@latest
    displayName: 'Install schema-validator'

  - script: npm install @bentley/schema-comparer@latest
    displayName: 'Install schema-comparer'

  - task: CmdLine@2
    displayName: 'NPM CONFIGURATION'
    inputs:
      script: 'npm config list' 

  - task: Npm@1
    displayName: 'npm install'
    inputs:
      command: install   

  - script: node ./tools/SchemaInventory/validateSchemaInventory.js
    displayName: Validate Schema Inventory

  - script: | 
      mkdir "%validationOut%"
      echo Schema Validation Ouput Dir= %validationOut%
    displayName: 'Create Validation Output Directory'

  - script: node ./tools/SchemaValidation/SchemaValidationRunner.js --BisRoot . --OutDir $(validationOut) --ValidaterPath $(validaterPath)
    workingDirectory: 
    displayName: Perform BIS Schema Validation

  - task: ArchiveFiles@2
    condition: succeededOrFailed()
    displayName: 'ArchiveFiles - Validation Results'
    inputs:
      rootFolderOrFile: $(validationOut) 
      includeRootFolder: false 
      archiveType: 7z
      archiveFile: '$(Build.ArtifactStagingDirectory)/ValidationResults-$(Build.BuildId).zip' 
      replaceExistingArchive: true 

  - publish: '$(Build.ArtifactStagingDirectory)/ValidationResults-$(Build.BuildId).zip'
    condition: succeededOrFailed()
    artifact: bis-schema-validation-logs
    displayName: 'Publish BIS Schema Validation Results'

  - script: | 
      mkdir "%comparisonOut%"
      echo Schema Comparison Ouput Dir= %comparisonOut%
    condition: succeededOrFailed()
    displayName: 'Create Schema Comparison Output Directory'

  - script: node ./tools/SchemaDifference/SchemaDifferenceRunner.js --BisRoot . --OutDir $(comparisonOut) --SchemaComparerPath $(schemaComparerPath)
    workingDirectory: 
    condition: succeededOrFailed()
    displayName: Perform BIS Schema Comparison

  - task: ArchiveFiles@2
    condition: succeededOrFailed()
    displayName: 'ArchiveFiles - Comparison Results'
    inputs:
      rootFolderOrFile: $(comparisonOut) 
      includeRootFolder: false 
      archiveType: 7z
      archiveFile: '$(Build.ArtifactStagingDirectory)/ComparisonResults-$(Build.BuildId).zip' 
      replaceExistingArchive: true 

  - publish: '$(Build.ArtifactStagingDirectory)/ComparisonResults-$(Build.BuildId).zip'
    condition: succeededOrFailed()  
    artifact: bis-schema-comparison-logs
    displayName: 'Publish BIS Schema Comparison Results'

- job: VerifyReleasedSchemas
  workspace:
    clean: all

  pool:
    vmImage: windows-latest

  variables:
    - group: 

  steps:
  - task: NodeTool@0
    displayName: 'Use Node 12.16.0'
    inputs:
      versionSpec: 12.16.0
  - checkout: self
  - checkout: git:///bis-schema-validation
    clean: true

     
   
   
   
   
   
   
   
   
   
   

  - task: NuGetCommand@2
    displayName: 'Download Nuget of Signoff Tool'
    inputs:
      command: custom
      arguments: 'install  -OutputDirectory $(System.DefaultWorkingDirectory) -Source _packaging/Packages/nuget/v3/index.json'

  - powershell: |
      $dir = Get-ChildItem $(System.DefaultWorkingDirectory) | Where-Object {$_.name -like "*"}

      Write-Host "SignoffToolPath=$(System.DefaultWorkingDirectory)\$dir\lib\native\"
      Write-Host "##vso[task.setvariable variable=SignoffToolPath]$(System.DefaultWorkingDirectory)\$dir\lib\native\"
    failOnStderr: true
    displayName: 'Set Env for Signoff Tool Path'

  - script: set BisSchemaRepo=$(Build.SourcesDirectory)/bis-schemas
    displayName: set bis-schemas repo path

  - script: npm install
    displayName: npm install
    workingDirectory: $(Build.SourcesDirectory)/bis-schema-validation/imodel-schema-validator

  - script: npm run tests:ValidateReleasedBisSchemas
    displayName: npm run tests:ValidateReleasedBisSchemas
    workingDirectory: $(Build.SourcesDirectory)/bis-schema-validation/imodel-schema-validator
