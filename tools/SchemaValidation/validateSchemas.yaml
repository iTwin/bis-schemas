trigger:
  branches:
    include:
      - master
  paths:
    include:
      - '*.ecschema.xml'

jobs:
- job: Validation
  workspace:
    clean: all

  pool:
    vmImage: windows-latest

  variables:
    - group: 
    - name: validationOut
      value: '$(Agent.BuildDirectory)/ValidationResults'
    - name: comparisonOut
      value: '$(Agent.BuildDirectory)/ComparisonResults'
    - name: imodelValidationOut
      value: '$(Agent.BuildDirectory)/IModelValidationResults'

  steps:
  - task: NodeTool@0
    displayName: 'Use Node 12.16.0'
    inputs:
      versionSpec: 12.16.0
  - checkout: self
    clean: true

     
   
   
   
   
   
   
   
   
   
   

  - task: CmdLine@2
    displayName: 'NPM CONFIGURATION'
    inputs:
      script: 'npm config list' 

  - script: npm install
    displayName: npm install

  - script: | 
      mkdir "%validationOut%"
      echo Schema Validation Ouput Dir= %validationOut%
    displayName: 'Create Validation Output Directory'

  - script: npm run validateSchemas -- --BisRoot . --OutDir $(validationOut)
    workingDirectory: 
    displayName: Perform BIS Schema Validation

  - task: ArchiveFiles@2
    condition: succeededOrFailed()
    displayName: 'ArchiveFiles - Validation Results'
    inputs:
      rootFolderOrFile: $(validationOut) 
      includeRootFolder: false 
      archiveType: 7z
      archiveFile: '$(Build.ArtifactStagingDirectory)/ValidationResults-$(Build.BuildId).zip' 
      replaceExistingArchive: true 

  - publish: '$(Build.ArtifactStagingDirectory)/ValidationResults-$(Build.BuildId).zip'
    condition: succeededOrFailed()
    artifact: bis-schema-validation-logs
    displayName: 'Publish BIS Schema Validation Results'

  - script: | 
      mkdir "%comparisonOut%"
      echo Schema Comparison Ouput Dir= %comparisonOut%
    condition: succeededOrFailed()
    displayName: 'Create Schema Comparison Output Directory'

  - script: npm run compareSchemas -- --BisRoot . --OutDir $(comparisonOut)
    workingDirectory: 
    condition: succeededOrFailed()
    displayName: Perform BIS Schema Comparison

  - task: ArchiveFiles@2
    condition: succeededOrFailed()
    displayName: 'ArchiveFiles - Comparison Results'
    inputs:
      rootFolderOrFile: $(comparisonOut) 
      includeRootFolder: false 
      archiveType: 7z
      archiveFile: '$(Build.ArtifactStagingDirectory)/ComparisonResults-$(Build.BuildId).zip' 
      replaceExistingArchive: true 

  - publish: '$(Build.ArtifactStagingDirectory)/ComparisonResults-$(Build.BuildId).zip'
    condition: succeededOrFailed()  
    artifact: bis-schema-comparison-logs
    displayName: 'Publish BIS Schema Comparison Results'

  - script: | 
      mkdir "%imodelValidationOut%"
      echo Schema Validation Ouput Dir= %imodelValidationOut%
    displayName: 'Create iModel Validation Output Directory'

  - script: npm run iModelSchemaValidation -- --released --OutDir $(imodelValidationOut)
    displayName: ValidateReleasedSchemas

  - task: ArchiveFiles@2
    condition: succeededOrFailed()
    displayName: 'ArchiveFiles - iModel Validation Results'
    inputs:
      rootFolderOrFile: $(imodelValidationOut) 
      includeRootFolder: false 
      archiveType: 7z
      archiveFile: '$(Build.ArtifactStagingDirectory)/IModelValidationResults-$(Build.BuildId).zip' 
      replaceExistingArchive: true 

  - publish: '$(Build.ArtifactStagingDirectory)/IModelValidationResults-$(Build.BuildId).zip'
    condition: succeededOrFailed()  
    artifact: released-schema-validation-logs
    displayName: 'Publish Released Schema Validation Results'

  - script: npm run validateSchemaInventory
    displayName: Validate Schema Inventory

