trigger:
  branches:
    include:
      - master
  paths:
    include:
      - '*.ecschema.xml'

jobs:
- job: Validation
  workspace:
    clean: all

  pool:
    vmImage: windows-latest

  variables:
    - group: azure-artifacts-npm-token
    - name: validationOut
      value: '$(Agent.BuildDirectory)/ValidationResults'
    - name: validaterPath
      value: '$(Build.Repository.LocalPath)/node_modules/@bentley/schema-validator'
    - name: comparisonOut
      value: '$(Agent.BuildDirectory)/ComparisonResults'
    - name: schemaComparerPath
      value: '$(Build.Repository.LocalPath)/node_modules/@bentley/schema-comparer'

  steps:
  - task: NodeTool@0
    displayName: 'Use Node 12.16.0'
    inputs:
      versionSpec: 12.16.0
  - checkout: self
    clean: true

     
   
   
   
   
   
   
   
   
   
   

  - script: npm install @bentley/schema-validator@latest
    displayName: 'Install schema-validator'

  - script: npm install @bentley/schema-comparer@latest
    displayName: 'Install schema-comparer'

  - task: Npm@1
    displayName: 'npm install'
    inputs:
      command: install   

  - script: | 
      mkdir "%validationOut%"
      echo Schema Validation Ouput Dir= %validationOut%
    displayName: 'Create Validation Output Directory'

  - script: node ./tools/SchemaValidation/SchemaValidationRunner.js --BisRoot . --OutDir $(validationOut) --ValidaterPath $(validaterPath)
    workingDirectory: 
    displayName: Perform BIS Schema Validation

  - task: ArchiveFiles@2
    condition: succeededOrFailed()
    displayName: 'ArchiveFiles - Validation Results'
    inputs:
      rootFolderOrFile: $(validationOut) 
      includeRootFolder: false 
      archiveType: 7z
      archiveFile: '$(Build.ArtifactStagingDirectory)/ValidationResults-$(Build.BuildId).zip' 
      replaceExistingArchive: true 

  - publish: '$(Build.ArtifactStagingDirectory)/ValidationResults-$(Build.BuildId).zip'
    condition: succeededOrFailed()
    artifact: bis-schema-validation-logs
    displayName: 'Publish BIS Schema Validation Results'

  - script: | 
      mkdir "%comparisonOut%"
      echo Schema Comparison Ouput Dir= %comparisonOut%
    condition: succeededOrFailed()
    displayName: 'Create Schema Comparison Output Directory'

  - script: node ./tools/SchemaDifference/SchemaDifferenceRunner.js --BisRoot . --OutDir $(comparisonOut) --SchemaComparerPath $(schemaComparerPath)
    workingDirectory: 
    condition: succeededOrFailed()
    displayName: Perform BIS Schema Comparison

  - task: ArchiveFiles@2
    condition: succeededOrFailed()
    displayName: 'ArchiveFiles - Comparison Results'
    inputs:
      rootFolderOrFile: $(comparisonOut) 
      includeRootFolder: false 
      archiveType: 7z
      archiveFile: '$(Build.ArtifactStagingDirectory)/ComparisonResults-$(Build.BuildId).zip' 
      replaceExistingArchive: true 

  - publish: '$(Build.ArtifactStagingDirectory)/ComparisonResults-$(Build.BuildId).zip'
    condition: succeededOrFailed()  
    artifact: bis-schema-comparison-logs
    displayName: 'Publish BIS Schema Comparison Results'

- job: VerifyReleasedSchemas
  workspace:
    clean: all

  pool:
    vmImage: windows-latest

  variables:
    - group: azure-artifacts-npm-token

  steps:
  - task: NodeTool@0
    displayName: 'Use Node 12.16.0'
    inputs:
      versionSpec: 12.16.0
  - checkout: self
  - checkout: git://iModelTechnologies/bis-schema-validation
    clean: true

     
   
   
   
   
   
   
   
   
   
   

  - task: NuGetCommand@2
    displayName: 'Download Nuget of Signoff Tool'
    inputs:
      command: custom
      arguments: 'install SchemaSignoffNuGet_x64 -OutputDirectory $(System.DefaultWorkingDirectory) -Source _packaging/Packages/nuget/v3/index.json'

  - powershell: |
      $dir = Get-ChildItem $(System.DefaultWorkingDirectory) | Where-Object {$_.name -like "SchemaSignoffNuGet_x64*"}

      Write-Host "SignoffToolPath=$(System.DefaultWorkingDirectory)\$dir\lib\native\SchemaSignoffTool.exe"
      Write-Host "##vso[task.setvariable variable=SignoffToolPath]$(System.DefaultWorkingDirectory)\$dir\lib\native\SchemaSignoffTool.exe"
    failOnStderr: true
    displayName: 'Set Env for Signoff Tool Path'

  - script: npm install
    displayName: npm install
    workingDirectory: $(Build.SourcesDirectory)/bis-schema-validation/imodel-schema-validator

  - script: npm run tests:ValidateReleasedBisSchemas
    displayName: npm run tests:ValidateReleasedBisSchemas
    workingDirectory: $(Build.SourcesDirectory)/bis-schema-validation/imodel-schema-validator

- job: SchemaInventory
  dependsOn: Validation
  workspace:
    clean: all

  pool:
    name: iModelTechCI
    demands:
    - Agent.OS -equals Windows_NT
    - npm

  steps: 
  - checkout: self
    clean: true
    
  - script: |
      SET PYENV_NAME=pyenv

      virtualenv %PYENV_NAME%

      $(System.DefaultWorkingDirectory)\pyenv\Scripts\pip.exe install python-ntlm
      $(System.DefaultWorkingDirectory)\pyenv\Scripts\pip.exe install pywin32==224
      $(System.DefaultWorkingDirectory)\pyenv\Scripts\pip.exe install lxml

    displayName: 'Setup python environment'

  - script: |
      git checkout master
      git status
      git pull
      git status
    displayName: 'Switching to master'

  - task: Npm@1
    displayName: 'npm install'
    inputs:
      command: install   

  - script: $(System.DefaultWorkingDirectory)\pyenv\Scripts\python.exe tools/signoff/signoff.py --getLaunchCodes --dumpjson
    displayName: Get Launch codes (temp)

  - script: node ./tools/signoff/generateInventory.js --BisRoot . --OutDir . --ChecksumDumpDir .
    displayName: Build Schema Inventory

  - powershell: |
      git commit -m "Automated SchemaInventory Commit [skip ci]" -- $(System.DefaultWorkingDirectory)\SchemaInventory.json
      git push origin master -q
    displayName: Checkin SchemaInventory  
