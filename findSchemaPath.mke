#-------------------------------------------------------------------------------------------------+
#
#  $Source: findSchemaPath.mke $
#
#  $Copyright: (c) 2019 Bentley Systems, Incorporated. All rights reserved. $
#
#-------------------------------------------------------------------------------------------------+
# Inputs:
#   SCHEMA_MATCHER - It is the absolute path of released directory of a schema. 
#                    Path ends with a file pattern to find the latest released version.
#                    Example: SCHEMA_MATCHER = $(_MakeFilePath)Released\AecUnits.*ecschema.xml
#
#      WIP_SCHEMAS - Set this environment variable, when you need to consume WIP version of schema's.
#                    This is a semi-colon delimited list of schema names. To include all WIP schemas 
#                    use the character '*'. 
#                    Example: set WIP_SCHEMAS=BisCore;Generic;etc.
#   Output:
#       schemaPath - Absolute path of schema file.
#-------------------------------------------------------------------------------------------------+

%ifndef SCHEMA_MATCHER
    %error SCHEMA_MATCHER must be defined to find the absolute path of schema that needs to be consumed,  (Example: SCHEMA_MATCHER = $(_MakeFilePath)Released\AecUnits.*ecschema.xml)
%endif

releasedDir = $[@dir $[@subst *., ., $(SCHEMA_MATCHER)]]
getLatestReleasedVersion = python -c "import glob; items = glob.glob(r'$(SCHEMA_MATCHER)'); items.sort(reverse=True); print items[0] if items else 'notFound'"

getWIPVersion = $[@subst Released, \/, $(getLatestReleasedVersion)]
wipVersion = $[@readstdout $(getWIPVersion)]
useWIPVersion = 0

%warn SCHEMA_MATCHER = $(SCHEMA_MATCHER)
%warn WIP_SCHEMAS = $(WIP_SCHEMAS)

%if defined(WIP_SCHEMAS)
  %warn WIP_SCHEMAS defined
  %if "*" == $(WIP_SCHEMAS)
    useWIPVersion = "1"
  %else
    useWIPVersionCmd =  python -c "import os; schemaFullName = os.path.basename(r'$(wipVersion)');\
                      schemaName = schemaFullName.split('.')[0];\
                      print(1) if schemaName in '$(WIP_SCHEMAS)' else 0"       
    useWIPVersion = $[@readstdout $(useWIPVersionCmd)]
  %endif
  %else
    %warn WIP_SCHEMAS undefined
%endif

%if "1" == $(useWIPVersion)
  schemaPath = $(wipVersion)
%elif exists ($(releasedDir))
  schemaPath = $[@readstdout $(getLatestReleasedVersion)]
  %if $(schemaPath) == "notFound"
    %error Lastest released schema version not found for SCHEMA_MATCHER '$(SCHEMA_MATCHER)'
  %endif
%else
  schemaPath = $(wipVersion)
%endif

%message "Schema Path: $(schemaPath)"